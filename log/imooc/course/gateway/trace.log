2020-08-25 00:17:02.298 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-18 - Thread starvation or clock leap detected (housekeeper delta=33m27s691ms).
2020-08-25 01:02:57.996 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-18 - Thread starvation or clock leap detected (housekeeper delta=44m55s645ms).
2020-08-25 03:03:55.373 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-18 - Thread starvation or clock leap detected (housekeeper delta=2h27s366ms).
2020-08-25 05:04:52.732 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-18 - Thread starvation or clock leap detected (housekeeper delta=2h27s354ms).
2020-08-25 07:05:28.178 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 07:05:50.090 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-18 - Thread starvation or clock leap detected (housekeeper delta=2h27s356ms).
2020-08-25 07:36:14.098 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-18 - Thread starvation or clock leap detected (housekeeper delta=30m24s8ms).
2020-08-25 08:30:07.391 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-18 - Thread starvation or clock leap detected (housekeeper delta=53m23s240ms).
2020-08-25 08:33:15.466 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 08:38:15.485 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 08:43:15.503 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 08:48:15.513 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 08:53:15.523 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 08:58:15.541 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 09:03:15.554 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 09:08:15.572 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 09:13:15.583 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 09:18:15.592 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 09:23:15.601 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 09:28:15.611 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 10:14:49.153 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-18 - Thread starvation or clock leap detected (housekeeper delta=45m11s9ms).
2020-08-25 10:17:55.555 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 10:22:55.568 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 10:27:55.583 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 10:32:55.593 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 10:37:55.604 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 10:42:55.582 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 10:47:55.597 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 10:52:55.608 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 10:57:55.622 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 11:02:55.611 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 11:07:55.625 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 11:12:55.640 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 11:17:55.632 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 11:22:55.643 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 11:27:55.658 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 11:32:55.668 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 11:37:55.662 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 11:42:55.680 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 11:47:55.692 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 11:52:55.705 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 11:57:55.697 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 12:02:55.711 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 12:07:55.723 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 12:12:55.716 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 12:17:55.728 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 12:22:55.740 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 12:27:55.753 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 12:32:55.748 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 12:37:55.762 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 12:42:55.776 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 12:47:55.771 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 12:52:55.784 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 12:57:55.805 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 13:02:55.820 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 13:07:55.818 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 13:12:55.834 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 13:17:55.848 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 13:22:55.844 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 13:27:55.857 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 13:32:55.877 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 13:37:55.894 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 13:42:55.896 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 13:47:55.914 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 13:52:55.930 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 13:57:55.927 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 14:02:55.947 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 14:07:55.967 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 14:12:55.978 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 14:17:55.974 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 14:22:55.989 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 14:27:56.003 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 14:32:55.996 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 14:37:56.016 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 14:42:56.041 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 14:47:56.041 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 14:52:56.047 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 14:57:56.059 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 15:02:56.071 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 15:07:56.064 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 15:12:56.078 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 15:17:56.092 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 15:22:56.107 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 15:27:56.102 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 15:32:56.116 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 15:37:56.130 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 15:42:56.130 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 15:47:56.145 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 15:52:56.158 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 15:57:56.172 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 16:02:56.173 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 16:07:56.190 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 16:12:56.204 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 16:17:56.217 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 16:22:56.211 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 16:27:56.225 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 16:32:56.240 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 16:37:56.238 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 16:42:56.251 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 16:47:56.260 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 16:52:56.285 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 16:55:23.932 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-18 - Thread starvation or clock leap detected (housekeeper delta=2m463ms).
2020-08-25 16:59:26.745 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 17:58:17.496 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-18 - Thread starvation or clock leap detected (housekeeper delta=57m23s512ms).
2020-08-25 19:58:47.553 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-18 - Thread starvation or clock leap detected (housekeeper delta=2h30s55ms).
2020-08-25 20:44:30.882 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-18 - Thread starvation or clock leap detected (housekeeper delta=45m43s331ms).
2020-08-25 20:46:33.213 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 20:51:33.224 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 20:56:33.234 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 21:01:33.245 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 21:06:33.253 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 21:11:33.266 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 21:16:33.246 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 21:21:33.258 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 21:26:33.271 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 21:31:33.284 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 21:36:33.281 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 21:41:33.297 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 21:46:33.312 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 21:51:33.327 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 21:56:33.328 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:01:33.339 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:06:33.358 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:11:33.355 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:16:33.368 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:21:30.404 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-25 22:21:30.416 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598408490413, current=DOWN, previous=UP]
2020-08-25 22:21:30.431 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:21:30.597 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:21:30.668 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-25 22:21:30.705 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-25 22:21:33.379 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:21:33.714 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-25 22:21:33.724 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-25 22:21:33.755 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-25 22:21:33.758 INFO  com.zaxxer.hikari.HikariDataSource                :350  [32m        [0;39m HikariPool-18 - Shutdown initiated...
2020-08-25 22:21:33.781 INFO  com.zaxxer.hikari.HikariDataSource                :352  [32m        [0;39m HikariPool-18 - Shutdown completed.
2020-08-25 22:21:38.252 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:21:38.298 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-25 22:21:38.662 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=713f4e4c-adb7-32a1-ba85-bcdb62bef0ec
2020-08-25 22:21:38.684 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:21:38.703 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:21:38.801 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-25 22:21:38.843 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-25 22:21:38.844 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-25 22:21:38.844 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-25 22:21:38.844 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-25 22:21:38.852 INFO  o.a.c.c.C.[Tomcat-6].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-25 22:21:38.852 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 549 ms
2020-08-25 22:21:38.934 WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:558  [32m        [0;39m Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'categoryController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'categoryService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryMapper' defined in file [/Users/patrick/Projects/course/server/target/classes/com/course/server/mapper/CategoryMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/patrick/Projects/course/server/target/classes/mapper/CourseContentMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/Users/patrick/Projects/course/server/target/classes/mapper/CourseContentMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.course.server.domain.CourseContent'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.course.server.domain.CourseContent
2020-08-25 22:21:38.935 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Stopping service [Tomcat]
2020-08-25 22:21:38.938 INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener:136  [32m        [0;39m 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-25 22:21:38.940 ERROR org.springframework.boot.SpringApplication        :826  [32m        [0;39m Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'categoryController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'categoryService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryMapper' defined in file [/Users/patrick/Projects/course/server/target/classes/com/course/server/mapper/CategoryMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/patrick/Projects/course/server/target/classes/mapper/CourseContentMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/Users/patrick/Projects/course/server/target/classes/mapper/CourseContentMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.course.server.domain.CourseContent'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.course.server.domain.CourseContent
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at com.course.business.config.BusinessApplication.main(BusinessApplication.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'categoryService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryMapper' defined in file [/Users/patrick/Projects/course/server/target/classes/com/course/server/mapper/CategoryMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/patrick/Projects/course/server/target/classes/mapper/CourseContentMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/Users/patrick/Projects/course/server/target/classes/mapper/CourseContentMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.course.server.domain.CourseContent'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.course.server.domain.CourseContent
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:454)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:543)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:513)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:653)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:224)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:334)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryMapper' defined in file [/Users/patrick/Projects/course/server/target/classes/com/course/server/mapper/CategoryMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/patrick/Projects/course/server/target/classes/mapper/CourseContentMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/Users/patrick/Projects/course/server/target/classes/mapper/CourseContentMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.course.server.domain.CourseContent'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.course.server.domain.CourseContent
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1526)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1406)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:454)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:543)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:513)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:653)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:224)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:334)
	... 34 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/patrick/Projects/course/server/target/classes/mapper/CourseContentMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/Users/patrick/Projects/course/server/target/classes/mapper/CourseContentMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.course.server.domain.CourseContent'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.course.server.domain.CourseContent
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1511)
	... 48 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/patrick/Projects/course/server/target/classes/mapper/CourseContentMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/Users/patrick/Projects/course/server/target/classes/mapper/CourseContentMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.course.server.domain.CourseContent'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.course.server.domain.CourseContent
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 61 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/patrick/Projects/course/server/target/classes/mapper/CourseContentMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/Users/patrick/Projects/course/server/target/classes/mapper/CourseContentMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.course.server.domain.CourseContent'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.course.server.domain.CourseContent
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:523)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:380)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:547)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:153)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3fe6da9d.CGLIB$sqlSessionFactory$0(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3fe6da9d$$FastClassBySpringCGLIB$$440416fa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3fe6da9d.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 62 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/Users/patrick/Projects/course/server/target/classes/mapper/CourseContentMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.course.server.domain.CourseContent'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.course.server.domain.CourseContent
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:521)
	... 75 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.course.server.domain.CourseContent'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.course.server.domain.CourseContent
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:265)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:252)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:244)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:116)
	... 77 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.course.server.domain.CourseContent'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.course.server.domain.CourseContent
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 81 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.course.server.domain.CourseContent
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 83 common frames omitted
2020-08-25 22:21:40.427 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:21:40.453 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-25 22:21:40.867 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=6d710893-7d0b-32ba-803f-453323118848
2020-08-25 22:21:40.896 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:21:40.906 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:21:41.001 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-25 22:21:41.055 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-25 22:21:41.058 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-25 22:21:41.059 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-25 22:21:41.059 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-25 22:21:41.074 INFO  o.a.c.c.C.[Tomcat-7].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-25 22:21:41.074 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 618 ms
2020-08-25 22:21:41.378 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-25 22:21:41.378 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-25 22:21:41.595 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-25 22:21:41.955 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-25 22:21:42.047 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-25 22:21:42.072 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-25 22:21:42.099 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-25 22:21:42.102 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-25 22:21:42.105 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-25 22:21:42.105 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-25 22:21:42.105 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-25 22:21:42.105 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-25 22:21:42.177 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:21:42.178 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-25 22:21:42.179 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-25 22:21:42.179 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-25 22:21:42.179 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-25 22:21:42.179 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-25 22:21:42.179 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-25 22:21:42.179 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-25 22:21:42.195 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-25 22:21:42.196 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-25 22:21:42.197 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-25 22:21:42.211 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598408502211 with initial instances count: 3
2020-08-25 22:21:42.221 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-25 22:21:42.221 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598408502221, current=UP, previous=STARTING]
2020-08-25 22:21:42.223 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:21:42.229 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-25 22:21:42.232 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-25 22:21:42.233 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-25 22:21:42.235 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.87 seconds (JVM running for 178382.326)
2020-08-25 22:21:42.237 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-25 22:21:42.237 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-25 22:21:42.237 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-25 22:21:42.251 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:21:44.799 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-25 22:21:44.799 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598408504799, current=DOWN, previous=UP]
2020-08-25 22:21:44.800 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:21:44.800 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-25 22:21:44.801 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-25 22:21:44.806 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:21:44.806 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-25 22:21:44.810 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-25 22:21:44.813 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-25 22:21:45.136 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:21:45.156 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-25 22:21:45.494 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=6d710893-7d0b-32ba-803f-453323118848
2020-08-25 22:21:45.521 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:21:45.539 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:21:45.610 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-25 22:21:45.639 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-25 22:21:45.640 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-25 22:21:45.640 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-25 22:21:45.640 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-25 22:21:45.653 INFO  o.a.c.c.C.[Tomcat-7].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-25 22:21:45.653 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 495 ms
2020-08-25 22:21:45.808 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-25 22:21:45.808 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-25 22:21:45.908 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-25 22:21:46.061 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-25 22:21:46.116 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-25 22:21:46.138 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-25 22:21:46.160 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-25 22:21:46.162 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-25 22:21:46.164 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-25 22:21:46.164 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-25 22:21:46.164 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-25 22:21:46.165 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-25 22:21:46.230 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:21:46.230 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-25 22:21:46.231 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-25 22:21:46.231 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-25 22:21:46.231 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-25 22:21:46.231 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-25 22:21:46.231 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-25 22:21:46.231 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-25 22:21:46.234 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-25 22:21:46.234 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-25 22:21:46.235 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-25 22:21:46.235 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598408506235 with initial instances count: 3
2020-08-25 22:21:46.240 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-25 22:21:46.241 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598408506241, current=UP, previous=STARTING]
2020-08-25 22:21:46.241 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:21:46.247 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-25 22:21:46.248 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-25 22:21:46.248 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-25 22:21:46.250 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:21:46.251 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.157 seconds (JVM running for 178386.343)
2020-08-25 22:21:46.253 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-25 22:21:46.253 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-25 22:21:46.253 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-25 22:21:51.544 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-25 22:21:51.544 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598408511544, current=DOWN, previous=UP]
2020-08-25 22:21:51.544 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:21:51.545 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-25 22:21:51.546 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-25 22:21:51.550 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:21:51.551 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-25 22:21:51.557 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-25 22:21:51.561 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-25 22:21:52.023 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:21:52.061 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-25 22:21:52.364 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=6d710893-7d0b-32ba-803f-453323118848
2020-08-25 22:21:52.381 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:21:52.388 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:21:52.440 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-25 22:21:52.464 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-25 22:21:52.465 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-25 22:21:52.465 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-25 22:21:52.465 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-25 22:21:52.472 INFO  o.a.c.c.C.[Tomcat-7].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-25 22:21:52.472 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 405 ms
2020-08-25 22:21:52.584 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-25 22:21:52.584 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-25 22:21:52.689 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-25 22:21:52.884 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-25 22:21:52.958 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-25 22:21:52.978 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-25 22:21:52.998 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-25 22:21:53.000 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-25 22:21:53.002 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-25 22:21:53.002 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-25 22:21:53.002 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-25 22:21:53.002 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-25 22:21:53.053 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:21:53.054 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-25 22:21:53.054 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-25 22:21:53.054 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-25 22:21:53.054 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-25 22:21:53.054 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-25 22:21:53.054 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-25 22:21:53.054 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-25 22:21:53.057 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-25 22:21:53.057 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-25 22:21:53.058 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-25 22:21:53.058 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598408513058 with initial instances count: 3
2020-08-25 22:21:53.063 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-25 22:21:53.063 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598408513063, current=UP, previous=STARTING]
2020-08-25 22:21:53.064 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:21:53.069 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-25 22:21:53.071 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-25 22:21:53.071 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-25 22:21:53.073 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.169 seconds (JVM running for 178393.164)
2020-08-25 22:21:53.074 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-25 22:21:53.075 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-25 22:21:53.075 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-25 22:21:53.077 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:21:55.321 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-25 22:21:55.321 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598408515321, current=DOWN, previous=UP]
2020-08-25 22:21:55.321 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:21:55.322 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-25 22:21:55.323 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-25 22:21:55.325 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:21:55.326 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-25 22:21:55.335 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-25 22:21:55.338 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-25 22:21:55.714 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:21:55.754 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-25 22:21:56.285 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=6d710893-7d0b-32ba-803f-453323118848
2020-08-25 22:21:56.305 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:21:56.316 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:21:56.394 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-25 22:21:56.437 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-25 22:21:56.438 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-25 22:21:56.438 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-25 22:21:56.438 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-25 22:21:56.472 INFO  o.a.c.c.C.[Tomcat-7].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-25 22:21:56.473 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 717 ms
2020-08-25 22:21:56.839 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-25 22:21:56.839 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-25 22:21:57.010 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-25 22:21:57.347 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-25 22:21:57.414 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-25 22:21:57.433 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-25 22:21:57.456 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-25 22:21:57.458 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-25 22:21:57.461 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-25 22:21:57.461 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-25 22:21:57.461 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-25 22:21:57.461 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-25 22:21:57.557 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:21:57.558 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-25 22:21:57.558 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-25 22:21:57.559 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-25 22:21:57.559 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-25 22:21:57.559 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-25 22:21:57.559 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-25 22:21:57.559 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-25 22:21:57.569 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-25 22:21:57.570 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-25 22:21:57.572 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-25 22:21:57.573 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598408517573 with initial instances count: 3
2020-08-25 22:21:57.583 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-25 22:21:57.583 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598408517583, current=UP, previous=STARTING]
2020-08-25 22:21:57.584 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:21:57.592 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-25 22:21:57.594 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:21:57.596 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-25 22:21:57.596 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-25 22:21:57.603 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.964 seconds (JVM running for 178397.693)
2020-08-25 22:21:57.606 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-25 22:21:57.606 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-25 22:21:57.606 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-25 22:22:03.217 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-25 22:22:03.217 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598408523217, current=DOWN, previous=UP]
2020-08-25 22:22:03.218 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:22:03.219 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-25 22:22:03.219 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-25 22:22:03.229 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:22:03.230 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-25 22:22:03.235 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-25 22:22:03.239 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-25 22:22:03.625 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:22:03.693 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-25 22:22:03.957 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=6d710893-7d0b-32ba-803f-453323118848
2020-08-25 22:22:03.975 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:22:03.980 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:22:04.023 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-25 22:22:04.042 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-25 22:22:04.043 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-25 22:22:04.043 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-25 22:22:04.043 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-25 22:22:04.048 INFO  o.a.c.c.C.[Tomcat-7].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-25 22:22:04.048 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 351 ms
2020-08-25 22:22:04.180 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-25 22:22:04.180 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-25 22:22:04.268 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-25 22:22:04.411 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-25 22:22:04.464 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-25 22:22:04.479 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-25 22:22:04.492 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-25 22:22:04.493 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-25 22:22:04.495 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-25 22:22:04.495 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-25 22:22:04.495 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-25 22:22:04.495 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-25 22:22:04.534 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:22:04.535 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-25 22:22:04.535 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-25 22:22:04.535 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-25 22:22:04.535 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-25 22:22:04.535 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-25 22:22:04.535 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-25 22:22:04.535 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-25 22:22:04.537 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-25 22:22:04.537 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-25 22:22:04.538 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-25 22:22:04.538 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598408524538 with initial instances count: 3
2020-08-25 22:22:04.542 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-25 22:22:04.542 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598408524542, current=UP, previous=STARTING]
2020-08-25 22:22:04.543 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:22:04.547 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-25 22:22:04.548 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-25 22:22:04.549 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-25 22:22:04.549 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:22:04.550 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.01 seconds (JVM running for 178404.641)
2020-08-25 22:22:04.552 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-25 22:22:04.552 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-25 22:22:04.552 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-25 22:22:27.521 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-25 22:22:27.521 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598408547521, current=DOWN, previous=UP]
2020-08-25 22:22:27.521 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:22:27.522 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-25 22:22:27.523 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-25 22:22:27.531 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:22:27.532 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-25 22:22:27.538 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-25 22:22:27.542 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-25 22:22:27.859 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:22:27.905 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-25 22:22:28.232 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=b450b5d6-d585-3a41-814d-a3c2ad54d096
2020-08-25 22:22:28.247 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:22:28.253 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:22:28.310 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-25 22:22:28.338 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-25 22:22:28.339 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-25 22:22:28.339 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-25 22:22:28.339 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-25 22:22:28.346 INFO  o.a.c.c.C.[Tomcat-7].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-25 22:22:28.346 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 438 ms
2020-08-25 22:22:28.466 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-25 22:22:28.466 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-25 22:22:28.584 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-25 22:22:28.825 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-25 22:22:28.895 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-25 22:22:28.916 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-25 22:22:28.934 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-25 22:22:28.936 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-25 22:22:28.937 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-25 22:22:28.938 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-25 22:22:28.938 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-25 22:22:28.938 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-25 22:22:28.989 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:22:28.990 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-25 22:22:28.990 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-25 22:22:28.990 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-25 22:22:28.990 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-25 22:22:28.990 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-25 22:22:28.990 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-25 22:22:28.991 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-25 22:22:28.993 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-25 22:22:28.994 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-25 22:22:28.994 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-25 22:22:28.994 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598408548994 with initial instances count: 3
2020-08-25 22:22:29.000 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-25 22:22:29.000 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598408549000, current=UP, previous=STARTING]
2020-08-25 22:22:29.000 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:22:29.005 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-25 22:22:29.007 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-25 22:22:29.007 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-25 22:22:29.008 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:22:29.010 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.228 seconds (JVM running for 178429.1)
2020-08-25 22:22:29.012 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-25 22:22:29.012 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-25 22:22:29.012 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-25 22:25:05.282 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-25 22:25:05.282 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598408705282, current=DOWN, previous=UP]
2020-08-25 22:25:05.283 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:25:05.284 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-25 22:25:05.284 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-25 22:25:05.291 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:25:05.291 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-25 22:25:05.298 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-25 22:25:05.301 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-25 22:25:05.731 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:25:05.769 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-25 22:25:05.999 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=dc375b6b-501d-346b-8da3-173ac8e9caed
2020-08-25 22:25:06.015 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:25:06.022 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:25:06.073 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-25 22:25:06.104 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-25 22:25:06.105 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-25 22:25:06.106 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-25 22:25:06.106 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-25 22:25:06.115 INFO  o.a.c.c.C.[Tomcat-7].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-25 22:25:06.115 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 344 ms
2020-08-25 22:25:06.253 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-25 22:25:06.253 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-25 22:25:06.366 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-25 22:25:06.730 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-25 22:25:06.811 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-25 22:25:06.830 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-25 22:25:06.848 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-25 22:25:06.849 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-25 22:25:06.851 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-25 22:25:06.851 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-25 22:25:06.851 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-25 22:25:06.851 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-25 22:25:06.898 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:25:06.898 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-25 22:25:06.899 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-25 22:25:06.899 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-25 22:25:06.899 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-25 22:25:06.899 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-25 22:25:06.899 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-25 22:25:06.899 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-25 22:25:06.903 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-25 22:25:06.903 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-25 22:25:06.903 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-25 22:25:06.904 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598408706904 with initial instances count: 3
2020-08-25 22:25:06.909 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-25 22:25:06.909 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598408706909, current=UP, previous=STARTING]
2020-08-25 22:25:06.909 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:25:06.914 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-25 22:25:06.915 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-25 22:25:06.916 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-25 22:25:06.916 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:25:06.917 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.381 seconds (JVM running for 178587.002)
2020-08-25 22:25:06.919 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-25 22:25:06.919 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-25 22:25:06.919 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-25 22:25:18.269 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-25 22:25:18.269 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598408718269, current=DOWN, previous=UP]
2020-08-25 22:25:18.269 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:25:18.270 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-25 22:25:18.270 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-25 22:25:18.278 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:25:18.279 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-25 22:25:18.286 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-25 22:25:18.289 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-25 22:25:18.558 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:25:18.580 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-25 22:25:18.819 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=6d710893-7d0b-32ba-803f-453323118848
2020-08-25 22:25:18.842 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:25:18.854 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:25:18.909 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-25 22:25:18.934 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-25 22:25:18.934 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-25 22:25:18.935 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-25 22:25:18.935 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-25 22:25:18.942 INFO  o.a.c.c.C.[Tomcat-7].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-25 22:25:18.942 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 359 ms
2020-08-25 22:25:19.136 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-25 22:25:19.136 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-25 22:25:19.278 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-25 22:25:19.482 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-25 22:25:19.549 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-25 22:25:19.566 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-25 22:25:19.583 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-25 22:25:19.585 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-25 22:25:19.589 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-25 22:25:19.590 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-25 22:25:19.590 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-25 22:25:19.590 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-25 22:25:19.649 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:25:19.650 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-25 22:25:19.650 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-25 22:25:19.650 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-25 22:25:19.650 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-25 22:25:19.650 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-25 22:25:19.650 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-25 22:25:19.651 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-25 22:25:19.654 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-25 22:25:19.655 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-25 22:25:19.655 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-25 22:25:19.656 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598408719655 with initial instances count: 3
2020-08-25 22:25:19.661 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-25 22:25:19.661 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598408719661, current=UP, previous=STARTING]
2020-08-25 22:25:19.662 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:25:19.667 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-25 22:25:19.668 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-25 22:25:19.668 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-25 22:25:19.670 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.157 seconds (JVM running for 178599.755)
2020-08-25 22:25:19.671 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-25 22:25:19.672 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-25 22:25:19.672 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-25 22:25:19.672 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:28:29.597 INFO  o.a.c.c.C.[Tomcat-7].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-25 22:28:29.597 INFO  org.springframework.web.servlet.DispatcherServlet :525  [32m        [0;39m Initializing Servlet 'dispatcherServlet'
2020-08-25 22:28:29.601 INFO  org.springframework.web.servlet.DispatcherServlet :547  [32m        [0;39m Completed initialization in 4 ms
2020-08-25 22:28:29.614 INFO  com.course.server.config.LogAspect                :76   [32msWVpXJFk[0;39m ------------- 【category】操作开始 -------------
2020-08-25 22:28:29.614 INFO  com.course.server.config.LogAspect                :77   [32msWVpXJFk[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 22:28:29.614 INFO  com.course.server.config.LogAspect                :78   [32msWVpXJFk[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 22:28:29.614 INFO  com.course.server.config.LogAspect                :79   [32msWVpXJFk[0;39m 远程地址: 192.168.1.4
2020-08-25 22:28:29.615 INFO  com.course.server.config.LogAspect                :97   [32msWVpXJFk[0;39m 请求参数: []
2020-08-25 22:28:29.619 INFO  com.course.server.config.LogAspect                :76   [32mJZF3b2cT[0;39m ------------- 【course】查询开始 -------------
2020-08-25 22:28:29.619 INFO  com.course.server.config.LogAspect                :77   [32mJZF3b2cT[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 22:28:29.619 INFO  com.course.server.config.LogAspect                :78   [32mJZF3b2cT[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 22:28:29.619 INFO  com.course.server.config.LogAspect                :79   [32mJZF3b2cT[0;39m 远程地址: 192.168.1.4
2020-08-25 22:28:29.621 INFO  com.zaxxer.hikari.HikariDataSource                :110  [32msWVpXJFk[0;39m HikariPool-19 - Starting...
2020-08-25 22:28:29.622 INFO  com.course.server.config.LogAspect                :97   [32mJZF3b2cT[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 22:28:29.623 INFO  c.c.business.controller.admin.CourseController    :37   [32mJZF3b2cT[0;39m pageDto: 1
2020-08-25 22:28:29.633 INFO  com.zaxxer.hikari.HikariDataSource                :123  [32msWVpXJFk[0;39m HikariPool-19 - Start completed.
2020-08-25 22:28:29.635 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32msWVpXJFk[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 22:28:29.637 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32msWVpXJFk[0;39m ==> Parameters: 
2020-08-25 22:28:29.645 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mJZF3b2cT[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 22:28:29.648 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mJZF3b2cT[0;39m ==> Parameters: 
2020-08-25 22:28:29.648 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==    Columns: id, parent, name, sort
2020-08-25 22:28:29.649 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 22:28:29.650 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 22:28:29.650 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 22:28:29.650 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 22:28:29.650 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 22:28:29.650 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 22:28:29.650 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 22:28:29.651 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 22:28:29.651 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 22:28:29.651 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 22:28:29.651 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 22:28:29.651 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 22:28:29.651 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 22:28:29.652 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 22:28:29.652 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 22:28:29.652 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 22:28:29.653 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 22:28:29.653 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 22:28:29.653 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 22:28:29.653 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 22:28:29.653 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 22:28:29.654 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 22:28:29.654 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 22:28:29.654 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 22:28:29.654 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 22:28:29.654 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 22:28:29.654 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 22:28:29.654 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 22:28:29.655 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 22:28:29.655 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 22:28:29.655 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mJZF3b2cT[0;39m <==    Columns: count(0)
2020-08-25 22:28:29.655 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 22:28:29.655 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mJZF3b2cT[0;39m <==        Row: 3
2020-08-25 22:28:29.655 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 22:28:29.655 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 22:28:29.655 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 22:28:29.656 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 22:28:29.656 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 22:28:29.656 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mJZF3b2cT[0;39m <==      Total: 1
2020-08-25 22:28:29.656 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 22:28:29.656 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 22:28:29.656 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 22:28:29.656 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 22:28:29.656 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 22:28:29.657 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 22:28:29.657 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mJZF3b2cT[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 22:28:29.657 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 22:28:29.657 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mJZF3b2cT[0;39m ==> Parameters: 5(Integer)
2020-08-25 22:28:29.657 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 22:28:29.657 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 22:28:29.657 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msWVpXJFk[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 22:28:29.657 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32msWVpXJFk[0;39m <==      Total: 46
2020-08-25 22:28:29.659 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mJZF3b2cT[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 22:28:29.660 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mJZF3b2cT[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 22:28:29.661 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mJZF3b2cT[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 22:28:29.661 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mJZF3b2cT[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 22:28:29.661 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mJZF3b2cT[0;39m <==      Total: 3
2020-08-25 22:28:29.664 INFO  com.course.server.config.LogAspect                :109  [32msWVpXJFk[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 22:28:29.664 INFO  com.course.server.config.LogAspect                :110  [32msWVpXJFk[0;39m ------------- 结束 耗时：55 ms -------------
2020-08-25 22:28:29.665 INFO  com.course.server.config.LogAspect                :109  [32mJZF3b2cT[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 22:28:29.665 INFO  com.course.server.config.LogAspect                :110  [32mJZF3b2cT[0;39m ------------- 结束 耗时：46 ms -------------
2020-08-25 22:30:19.647 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:31:26.450 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-25 22:31:26.451 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598409086451, current=DOWN, previous=UP]
2020-08-25 22:31:26.452 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:31:26.453 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-25 22:31:26.454 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-25 22:31:26.466 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:31:26.475 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-25 22:31:26.483 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-25 22:31:26.488 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-25 22:31:26.489 INFO  com.zaxxer.hikari.HikariDataSource                :350  [32m        [0;39m HikariPool-19 - Shutdown initiated...
2020-08-25 22:31:26.499 INFO  com.zaxxer.hikari.HikariDataSource                :352  [32m        [0;39m HikariPool-19 - Shutdown completed.
2020-08-25 22:31:27.224 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:31:27.257 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-25 22:31:27.548 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=6d710893-7d0b-32ba-803f-453323118848
2020-08-25 22:31:27.564 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:31:27.571 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:31:27.619 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-25 22:31:27.644 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-25 22:31:27.644 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-25 22:31:27.644 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-25 22:31:27.645 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-25 22:31:27.651 INFO  o.a.c.c.C.[Tomcat-7].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-25 22:31:27.652 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 392 ms
2020-08-25 22:31:27.784 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-25 22:31:27.784 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-25 22:31:27.910 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-25 22:31:28.103 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-25 22:31:28.195 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-25 22:31:28.218 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-25 22:31:28.241 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-25 22:31:28.243 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-25 22:31:28.245 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-25 22:31:28.245 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-25 22:31:28.245 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-25 22:31:28.245 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-25 22:31:28.305 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:31:28.306 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-25 22:31:28.306 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-25 22:31:28.306 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-25 22:31:28.306 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-25 22:31:28.306 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-25 22:31:28.307 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-25 22:31:28.307 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-25 22:31:28.312 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-25 22:31:28.313 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-25 22:31:28.314 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-25 22:31:28.314 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598409088314 with initial instances count: 3
2020-08-25 22:31:28.322 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-25 22:31:28.322 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598409088322, current=UP, previous=STARTING]
2020-08-25 22:31:28.323 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:31:28.328 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-25 22:31:28.330 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-25 22:31:28.331 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-25 22:31:28.334 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.242 seconds (JVM running for 178968.425)
2020-08-25 22:31:28.335 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-25 22:31:28.335 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-25 22:31:28.335 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-25 22:31:28.337 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:31:31.533 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-25 22:31:31.534 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598409091534, current=DOWN, previous=UP]
2020-08-25 22:31:31.534 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:31:31.535 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-25 22:31:31.542 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-25 22:31:31.554 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:31:31.554 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-25 22:31:31.562 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-25 22:31:31.565 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-25 22:31:31.893 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:31:31.925 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-25 22:31:32.243 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=6d710893-7d0b-32ba-803f-453323118848
2020-08-25 22:31:32.262 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:31:32.269 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:31:32.333 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-25 22:31:32.369 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-25 22:31:32.370 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-25 22:31:32.370 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-25 22:31:32.370 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-25 22:31:32.379 INFO  o.a.c.c.C.[Tomcat-7].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-25 22:31:32.380 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 453 ms
2020-08-25 22:31:32.557 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-25 22:31:32.558 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-25 22:31:32.707 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-25 22:31:32.962 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-25 22:31:33.047 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-25 22:31:33.070 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-25 22:31:33.091 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-25 22:31:33.092 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-25 22:31:33.095 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-25 22:31:33.096 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-25 22:31:33.096 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-25 22:31:33.096 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-25 22:31:33.146 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:31:33.147 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-25 22:31:33.147 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-25 22:31:33.147 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-25 22:31:33.148 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-25 22:31:33.148 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-25 22:31:33.148 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-25 22:31:33.148 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-25 22:31:33.151 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-25 22:31:33.152 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-25 22:31:33.152 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-25 22:31:33.153 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598409093153 with initial instances count: 3
2020-08-25 22:31:33.159 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-25 22:31:33.159 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598409093159, current=UP, previous=STARTING]
2020-08-25 22:31:33.160 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:31:33.169 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-25 22:31:33.171 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-25 22:31:33.172 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-25 22:31:33.175 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.338 seconds (JVM running for 178973.266)
2020-08-25 22:31:33.177 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:31:33.178 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-25 22:31:33.178 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-25 22:31:33.178 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-25 22:32:46.349 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-25 22:32:46.349 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598409166349, current=DOWN, previous=UP]
2020-08-25 22:32:46.349 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:32:46.350 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-25 22:32:46.351 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-25 22:32:46.356 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:32:46.357 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-25 22:32:46.366 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-25 22:32:46.370 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-25 22:32:46.713 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:32:46.741 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-25 22:32:47.011 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=3722bb32-51ea-3623-b182-de8407c52751
2020-08-25 22:32:47.027 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:32:47.034 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:32:47.083 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-25 22:32:47.105 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-25 22:32:47.106 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-25 22:32:47.106 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-25 22:32:47.106 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-25 22:32:47.113 INFO  o.a.c.c.C.[Tomcat-7].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-25 22:32:47.113 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 370 ms
2020-08-25 22:32:47.208 WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:558  [32m        [0;39m Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'courseController' defined in file [/Users/patrick/Projects/course/business/target/classes/com/course/business/controller/admin/CourseController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.course.business.controller.admin.CourseController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6abb517e]
2020-08-25 22:32:47.209 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Stopping service [Tomcat]
2020-08-25 22:32:47.213 INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener:136  [32m        [0;39m 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-25 22:32:47.214 ERROR org.springframework.boot.SpringApplication        :826  [32m        [0;39m Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'courseController' defined in file [/Users/patrick/Projects/course/business/target/classes/com/course/business/controller/admin/CourseController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.course.business.controller.admin.CourseController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6abb517e]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at com.course.business.config.BusinessApplication.main(BusinessApplication.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.IllegalStateException: Failed to introspect Class [com.course.business.controller.admin.CourseController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6abb517e]
	at org.springframework.util.ReflectionUtils.getDeclaredFields(ReflectionUtils.java:734)
	at org.springframework.util.ReflectionUtils.doWithLocalFields(ReflectionUtils.java:666)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.buildResourceMetadata(CommonAnnotationBeanPostProcessor.java:382)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.findResourceMetadata(CommonAnnotationBeanPostProcessor.java:363)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessMergedBeanDefinition(CommonAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyMergedBeanDefinitionPostProcessors(AbstractAutowireCapableBeanFactory.java:1094)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	... 18 common frames omitted
Caused by: java.lang.NoClassDefFoundError: Lcom/course/server/service/CourseService;
	at java.lang.Class.getDeclaredFields0(Native Method)
	at java.lang.Class.privateGetDeclaredFields(Class.java:2583)
	at java.lang.Class.getDeclaredFields(Class.java:1916)
	at org.springframework.util.ReflectionUtils.getDeclaredFields(ReflectionUtils.java:729)
	... 24 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.course.server.service.CourseService
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:144)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 28 common frames omitted
2020-08-25 22:33:16.027 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:33:16.050 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-25 22:33:16.313 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=6d710893-7d0b-32ba-803f-453323118848
2020-08-25 22:33:16.332 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:33:16.341 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:33:16.397 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-25 22:33:16.422 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-25 22:33:16.423 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-25 22:33:16.423 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-25 22:33:16.423 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-25 22:33:16.430 INFO  o.a.c.c.C.[Tomcat-8].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-25 22:33:16.430 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 378 ms
2020-08-25 22:33:16.566 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-25 22:33:16.566 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-25 22:33:16.680 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-25 22:33:16.850 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-25 22:33:16.914 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-25 22:33:16.932 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-25 22:33:16.952 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-25 22:33:16.954 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-25 22:33:16.955 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-25 22:33:16.955 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-25 22:33:16.956 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-25 22:33:16.956 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-25 22:33:17.006 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:33:17.006 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-25 22:33:17.006 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-25 22:33:17.006 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-25 22:33:17.007 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-25 22:33:17.007 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-25 22:33:17.007 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-25 22:33:17.007 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-25 22:33:17.012 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-25 22:33:17.013 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-25 22:33:17.013 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-25 22:33:17.013 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598409197013 with initial instances count: 1
2020-08-25 22:33:17.018 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-25 22:33:17.018 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598409197018, current=UP, previous=STARTING]
2020-08-25 22:33:17.019 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:33:17.023 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-25 22:33:17.025 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-25 22:33:17.025 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-25 22:33:17.027 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.052 seconds (JVM running for 179077.115)
2020-08-25 22:33:17.028 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-25 22:33:17.028 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-25 22:33:17.028 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-25 22:33:17.029 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:34:46.427 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-25 22:34:46.427 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598409286427, current=DOWN, previous=UP]
2020-08-25 22:34:46.428 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:34:46.431 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-25 22:34:46.432 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-25 22:34:46.438 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:34:46.438 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-25 22:34:46.448 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-25 22:34:46.451 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-25 22:34:46.935 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:34:46.957 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-25 22:34:47.260 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=6d710893-7d0b-32ba-803f-453323118848
2020-08-25 22:34:47.277 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:34:47.284 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-25 22:34:47.341 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-25 22:34:47.368 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-25 22:34:47.368 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-25 22:34:47.369 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-25 22:34:47.369 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-25 22:34:47.378 INFO  o.a.c.c.C.[Tomcat-8].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-25 22:34:47.378 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 419 ms
2020-08-25 22:34:47.522 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-25 22:34:47.523 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-25 22:34:47.629 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-25 22:34:47.801 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-25 22:34:47.872 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-25 22:34:47.891 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-25 22:34:47.912 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-25 22:34:47.914 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-25 22:34:47.915 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-25 22:34:47.915 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-25 22:34:47.915 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-25 22:34:47.915 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-25 22:34:47.968 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:34:47.969 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-25 22:34:47.970 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-25 22:34:47.970 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-25 22:34:47.970 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-25 22:34:47.970 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-25 22:34:47.970 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-25 22:34:47.970 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-25 22:34:47.980 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-25 22:34:47.981 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-25 22:34:47.982 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-25 22:34:47.982 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598409287982 with initial instances count: 3
2020-08-25 22:34:47.989 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-25 22:34:47.989 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598409287989, current=UP, previous=STARTING]
2020-08-25 22:34:47.990 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-25 22:34:47.996 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-25 22:34:47.998 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-25 22:34:47.998 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-25 22:34:48.001 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.107 seconds (JVM running for 179168.086)
2020-08-25 22:34:48.002 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-25 22:34:48.002 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-25 22:34:48.003 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-25 22:34:48.003 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-25 22:39:47.984 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:44:47.981 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:49:47.991 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:54:48.003 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 22:59:15.796 INFO  o.a.c.c.C.[Tomcat-8].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-25 22:59:15.800 INFO  org.springframework.web.servlet.DispatcherServlet :525  [32m        [0;39m Initializing Servlet 'dispatcherServlet'
2020-08-25 22:59:15.879 INFO  org.springframework.web.servlet.DispatcherServlet :547  [32m        [0;39m Completed initialization in 78 ms
2020-08-25 22:59:15.908 INFO  com.course.server.config.LogAspect                :76   [32mea1yTxwb[0;39m ------------- 【category】操作开始 -------------
2020-08-25 22:59:15.909 INFO  com.course.server.config.LogAspect                :77   [32mea1yTxwb[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 22:59:15.909 INFO  com.course.server.config.LogAspect                :78   [32mea1yTxwb[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 22:59:15.910 INFO  com.course.server.config.LogAspect                :79   [32mea1yTxwb[0;39m 远程地址: 192.168.1.4
2020-08-25 22:59:15.911 INFO  com.course.server.config.LogAspect                :76   [32mQLRv7eF0[0;39m ------------- 【course】查询开始 -------------
2020-08-25 22:59:15.911 INFO  com.course.server.config.LogAspect                :77   [32mQLRv7eF0[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 22:59:15.911 INFO  com.course.server.config.LogAspect                :97   [32mea1yTxwb[0;39m 请求参数: []
2020-08-25 22:59:15.911 INFO  com.course.server.config.LogAspect                :78   [32mQLRv7eF0[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 22:59:15.911 INFO  com.course.server.config.LogAspect                :79   [32mQLRv7eF0[0;39m 远程地址: 192.168.1.4
2020-08-25 22:59:15.917 INFO  com.course.server.config.LogAspect                :97   [32mQLRv7eF0[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 22:59:15.923 INFO  c.c.business.controller.admin.CourseController    :34   [32mQLRv7eF0[0;39m pageDto: 1
2020-08-25 22:59:15.933 INFO  com.zaxxer.hikari.HikariDataSource                :110  [32mQLRv7eF0[0;39m HikariPool-20 - Starting...
2020-08-25 22:59:15.941 INFO  com.zaxxer.hikari.HikariDataSource                :123  [32mQLRv7eF0[0;39m HikariPool-20 - Start completed.
2020-08-25 22:59:15.943 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mea1yTxwb[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 22:59:15.947 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mea1yTxwb[0;39m ==> Parameters: 
2020-08-25 22:59:15.951 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mQLRv7eF0[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 22:59:15.953 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mQLRv7eF0[0;39m ==> Parameters: 
2020-08-25 22:59:15.957 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mQLRv7eF0[0;39m <==    Columns: count(0)
2020-08-25 22:59:15.956 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==    Columns: id, parent, name, sort
2020-08-25 22:59:15.958 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mQLRv7eF0[0;39m <==        Row: 3
2020-08-25 22:59:15.958 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 22:59:15.958 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 22:59:15.958 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 22:59:15.958 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 22:59:15.958 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 22:59:15.958 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mQLRv7eF0[0;39m <==      Total: 1
2020-08-25 22:59:15.958 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 22:59:15.959 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 22:59:15.959 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 22:59:15.959 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 22:59:15.959 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 22:59:15.959 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 22:59:15.959 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 22:59:15.959 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mQLRv7eF0[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 22:59:15.960 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 22:59:15.960 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 22:59:15.960 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mQLRv7eF0[0;39m ==> Parameters: 5(Integer)
2020-08-25 22:59:15.960 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 22:59:15.960 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 22:59:15.960 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mQLRv7eF0[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 22:59:15.961 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mQLRv7eF0[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 22:59:15.961 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mQLRv7eF0[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 22:59:15.961 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mQLRv7eF0[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 22:59:15.961 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mQLRv7eF0[0;39m <==      Total: 3
2020-08-25 22:59:15.962 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 22:59:15.962 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 22:59:15.962 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 22:59:15.962 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 22:59:15.963 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 22:59:15.963 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 22:59:15.963 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 22:59:15.963 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 22:59:15.963 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 22:59:15.963 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 22:59:15.964 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 22:59:15.964 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 22:59:15.964 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 22:59:15.964 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 22:59:15.964 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 22:59:15.964 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 22:59:15.965 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 22:59:15.965 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 22:59:15.965 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 22:59:15.965 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 22:59:15.966 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 22:59:15.966 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 22:59:15.966 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 22:59:15.966 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 22:59:15.966 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 22:59:15.967 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 22:59:15.967 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 22:59:15.967 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 22:59:15.967 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 22:59:15.968 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mea1yTxwb[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 22:59:15.968 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mea1yTxwb[0;39m <==      Total: 46
2020-08-25 22:59:15.974 INFO  com.course.server.config.LogAspect                :109  [32mQLRv7eF0[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 22:59:15.974 INFO  com.course.server.config.LogAspect                :110  [32mQLRv7eF0[0;39m ------------- 结束 耗时：63 ms -------------
2020-08-25 22:59:15.975 INFO  com.course.server.config.LogAspect                :109  [32mea1yTxwb[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 22:59:15.975 INFO  com.course.server.config.LogAspect                :110  [32mea1yTxwb[0;39m ------------- 结束 耗时：79 ms -------------
2020-08-25 22:59:48.021 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 23:00:54.819 INFO  com.course.server.config.LogAspect                :76   [32mmhrVubLG[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:00:54.820 INFO  com.course.server.config.LogAspect                :77   [32mmhrVubLG[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:00:54.820 INFO  com.course.server.config.LogAspect                :78   [32mmhrVubLG[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:00:54.820 INFO  com.course.server.config.LogAspect                :79   [32mmhrVubLG[0;39m 远程地址: 192.168.1.4
2020-08-25 23:00:54.821 INFO  com.course.server.config.LogAspect                :97   [32mmhrVubLG[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:00:54.821 INFO  c.c.business.controller.admin.CourseController    :34   [32mmhrVubLG[0;39m pageDto: 1
2020-08-25 23:00:54.821 INFO  com.course.server.config.LogAspect                :76   [32m6BPCCthq[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:00:54.821 INFO  com.course.server.config.LogAspect                :77   [32m6BPCCthq[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:00:54.822 INFO  com.course.server.config.LogAspect                :78   [32m6BPCCthq[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:00:54.822 INFO  com.course.server.config.LogAspect                :79   [32m6BPCCthq[0;39m 远程地址: 192.168.1.4
2020-08-25 23:00:54.823 INFO  com.course.server.config.LogAspect                :97   [32m6BPCCthq[0;39m 请求参数: []
2020-08-25 23:00:54.825 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m6BPCCthq[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:00:54.826 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mmhrVubLG[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:00:54.826 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m6BPCCthq[0;39m ==> Parameters: 
2020-08-25 23:00:54.826 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mmhrVubLG[0;39m ==> Parameters: 
2020-08-25 23:00:54.828 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mmhrVubLG[0;39m <==    Columns: count(0)
2020-08-25 23:00:54.828 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:00:54.830 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:00:54.829 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mmhrVubLG[0;39m <==        Row: 3
2020-08-25 23:00:54.830 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mmhrVubLG[0;39m <==      Total: 1
2020-08-25 23:00:54.830 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:00:54.832 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mmhrVubLG[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:00:54.832 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:00:54.834 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:00:54.834 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mmhrVubLG[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:00:54.835 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:00:54.835 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:00:54.836 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:00:54.836 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mmhrVubLG[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:00:54.836 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:00:54.837 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:00:54.845 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mmhrVubLG[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:00:54.845 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:00:54.845 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mmhrVubLG[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:00:54.845 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:00:54.846 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mmhrVubLG[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:00:54.846 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:00:54.847 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mmhrVubLG[0;39m <==      Total: 3
2020-08-25 23:00:54.847 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:00:54.849 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:00:54.850 INFO  com.course.server.config.LogAspect                :109  [32mmhrVubLG[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:00:54.851 INFO  com.course.server.config.LogAspect                :110  [32mmhrVubLG[0;39m ------------- 结束 耗时：32 ms -------------
2020-08-25 23:00:54.851 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:00:54.851 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:00:54.852 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:00:54.853 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:00:54.853 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:00:54.854 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:00:54.854 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:00:54.854 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:00:54.855 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:00:54.855 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:00:54.855 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:00:54.855 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:00:54.856 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:00:54.856 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:00:54.856 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:00:54.857 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:00:54.857 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:00:54.857 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:00:54.857 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:00:54.858 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:00:54.858 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:00:54.858 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:00:54.859 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:00:54.859 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:00:54.860 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:00:54.860 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:00:54.860 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:00:54.861 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:00:54.862 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:00:54.863 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:00:54.864 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:00:54.866 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6BPCCthq[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:00:54.868 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m6BPCCthq[0;39m <==      Total: 46
2020-08-25 23:00:54.870 INFO  com.course.server.config.LogAspect                :109  [32m6BPCCthq[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:00:54.871 INFO  com.course.server.config.LogAspect                :110  [32m6BPCCthq[0;39m ------------- 结束 耗时：50 ms -------------
2020-08-25 23:01:38.999 INFO  com.course.server.config.LogAspect                :76   [32mSxUBpglz[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:01:39.000 INFO  com.course.server.config.LogAspect                :76   [32mq0DwxFPn[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:01:39.000 INFO  com.course.server.config.LogAspect                :77   [32mq0DwxFPn[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:01:39.000 INFO  com.course.server.config.LogAspect                :77   [32mSxUBpglz[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:01:39.002 INFO  com.course.server.config.LogAspect                :78   [32mq0DwxFPn[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:01:39.002 INFO  com.course.server.config.LogAspect                :78   [32mSxUBpglz[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:01:39.003 INFO  com.course.server.config.LogAspect                :79   [32mSxUBpglz[0;39m 远程地址: 192.168.1.4
2020-08-25 23:01:39.003 INFO  com.course.server.config.LogAspect                :79   [32mq0DwxFPn[0;39m 远程地址: 192.168.1.4
2020-08-25 23:01:39.004 INFO  com.course.server.config.LogAspect                :97   [32mSxUBpglz[0;39m 请求参数: []
2020-08-25 23:01:39.006 INFO  com.course.server.config.LogAspect                :97   [32mq0DwxFPn[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:01:39.008 INFO  c.c.business.controller.admin.CourseController    :34   [32mq0DwxFPn[0;39m pageDto: 1
2020-08-25 23:01:39.009 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mSxUBpglz[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:01:39.009 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mSxUBpglz[0;39m ==> Parameters: 
2020-08-25 23:01:39.010 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mq0DwxFPn[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:01:39.010 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mq0DwxFPn[0;39m ==> Parameters: 
2020-08-25 23:01:39.012 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mq0DwxFPn[0;39m <==    Columns: count(0)
2020-08-25 23:01:39.012 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:01:39.013 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mq0DwxFPn[0;39m <==        Row: 3
2020-08-25 23:01:39.013 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:01:39.014 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:01:39.014 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mq0DwxFPn[0;39m <==      Total: 1
2020-08-25 23:01:39.015 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:01:39.016 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mq0DwxFPn[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:01:39.017 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:01:39.018 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:01:39.018 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mq0DwxFPn[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:01:39.018 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:01:39.019 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:01:39.019 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:01:39.019 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:01:39.020 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:01:39.022 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mq0DwxFPn[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:01:39.023 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:01:39.026 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:01:39.025 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mq0DwxFPn[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:01:39.028 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mq0DwxFPn[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:01:39.028 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:01:39.029 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mq0DwxFPn[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:01:39.029 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:01:39.029 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mq0DwxFPn[0;39m <==      Total: 3
2020-08-25 23:01:39.029 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:01:39.029 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:01:39.030 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:01:39.030 INFO  com.course.server.config.LogAspect                :109  [32mq0DwxFPn[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:01:39.030 INFO  com.course.server.config.LogAspect                :110  [32mq0DwxFPn[0;39m ------------- 结束 耗时：30 ms -------------
2020-08-25 23:01:39.030 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:01:39.031 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:01:39.031 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:01:39.032 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:01:39.032 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:01:39.033 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:01:39.033 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:01:39.033 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:01:39.033 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:01:39.034 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:01:39.034 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:01:39.034 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:01:39.034 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:01:39.035 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:01:39.035 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:01:39.035 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:01:39.036 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:01:39.036 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:01:39.036 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:01:39.036 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:01:39.037 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:01:39.037 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:01:39.037 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:01:39.037 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:01:39.037 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:01:39.038 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:01:39.038 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:01:39.039 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:01:39.039 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSxUBpglz[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:01:39.039 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mSxUBpglz[0;39m <==      Total: 46
2020-08-25 23:01:39.041 INFO  com.course.server.config.LogAspect                :109  [32mSxUBpglz[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:01:39.041 INFO  com.course.server.config.LogAspect                :110  [32mSxUBpglz[0;39m ------------- 结束 耗时：42 ms -------------
2020-08-25 23:02:35.560 INFO  com.course.server.config.LogAspect                :76   [32mOM3MZKxK[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:02:35.561 INFO  com.course.server.config.LogAspect                :77   [32mOM3MZKxK[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:02:35.561 INFO  com.course.server.config.LogAspect                :78   [32mOM3MZKxK[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:02:35.561 INFO  com.course.server.config.LogAspect                :79   [32mOM3MZKxK[0;39m 远程地址: 192.168.1.4
2020-08-25 23:02:35.561 INFO  com.course.server.config.LogAspect                :97   [32mOM3MZKxK[0;39m 请求参数: []
2020-08-25 23:02:35.562 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mOM3MZKxK[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:02:35.562 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mOM3MZKxK[0;39m ==> Parameters: 
2020-08-25 23:02:35.562 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:02:35.563 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:02:35.563 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:02:35.563 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:02:35.563 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:02:35.563 INFO  com.course.server.config.LogAspect                :76   [32mVyGNAf6W[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:02:35.564 INFO  com.course.server.config.LogAspect                :77   [32mVyGNAf6W[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:02:35.564 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:02:35.564 INFO  com.course.server.config.LogAspect                :78   [32mVyGNAf6W[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:02:35.564 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:02:35.564 INFO  com.course.server.config.LogAspect                :79   [32mVyGNAf6W[0;39m 远程地址: 192.168.1.4
2020-08-25 23:02:35.564 INFO  com.course.server.config.LogAspect                :97   [32mVyGNAf6W[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:02:35.564 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:02:35.564 INFO  c.c.business.controller.admin.CourseController    :34   [32mVyGNAf6W[0;39m pageDto: 1
2020-08-25 23:02:35.564 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:02:35.564 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:02:35.564 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:02:35.565 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:02:35.565 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mVyGNAf6W[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:02:35.565 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:02:35.565 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:02:35.565 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mVyGNAf6W[0;39m ==> Parameters: 
2020-08-25 23:02:35.565 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:02:35.566 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:02:35.566 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mVyGNAf6W[0;39m <==    Columns: count(0)
2020-08-25 23:02:35.566 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:02:35.566 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mVyGNAf6W[0;39m <==        Row: 3
2020-08-25 23:02:35.566 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:02:35.566 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mVyGNAf6W[0;39m <==      Total: 1
2020-08-25 23:02:35.567 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:02:35.567 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:02:35.567 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mVyGNAf6W[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:02:35.567 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:02:35.567 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mVyGNAf6W[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:02:35.567 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:02:35.568 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:02:35.568 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mVyGNAf6W[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:02:35.568 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:02:35.568 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mVyGNAf6W[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:02:35.568 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:02:35.569 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mVyGNAf6W[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:02:35.569 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:02:35.569 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:02:35.569 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mVyGNAf6W[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:02:35.569 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:02:35.570 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mVyGNAf6W[0;39m <==      Total: 3
2020-08-25 23:02:35.570 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:02:35.570 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:02:35.570 INFO  com.course.server.config.LogAspect                :109  [32mVyGNAf6W[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:02:35.570 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:02:35.570 INFO  com.course.server.config.LogAspect                :110  [32mVyGNAf6W[0;39m ------------- 结束 耗时：7 ms -------------
2020-08-25 23:02:35.571 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:02:35.571 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:02:35.572 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:02:35.572 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:02:35.573 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:02:35.573 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:02:35.574 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:02:35.577 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:02:35.577 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:02:35.578 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:02:35.578 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:02:35.578 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:02:35.578 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:02:35.578 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:02:35.579 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:02:35.579 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mOM3MZKxK[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:02:35.579 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mOM3MZKxK[0;39m <==      Total: 46
2020-08-25 23:02:35.580 INFO  com.course.server.config.LogAspect                :109  [32mOM3MZKxK[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:02:35.580 INFO  com.course.server.config.LogAspect                :110  [32mOM3MZKxK[0;39m ------------- 结束 耗时：20 ms -------------
2020-08-25 23:03:18.564 INFO  com.course.server.config.LogAspect                :76   [32minpkBDWt[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:03:18.564 INFO  com.course.server.config.LogAspect                :76   [32mdthCIAJJ[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:03:18.564 INFO  com.course.server.config.LogAspect                :77   [32minpkBDWt[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:03:18.565 INFO  com.course.server.config.LogAspect                :78   [32minpkBDWt[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:03:18.564 INFO  com.course.server.config.LogAspect                :77   [32mdthCIAJJ[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:03:18.565 INFO  com.course.server.config.LogAspect                :78   [32mdthCIAJJ[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:03:18.565 INFO  com.course.server.config.LogAspect                :79   [32minpkBDWt[0;39m 远程地址: 192.168.1.4
2020-08-25 23:03:18.565 INFO  com.course.server.config.LogAspect                :79   [32mdthCIAJJ[0;39m 远程地址: 192.168.1.4
2020-08-25 23:03:18.566 INFO  com.course.server.config.LogAspect                :97   [32minpkBDWt[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:03:18.566 INFO  com.course.server.config.LogAspect                :97   [32mdthCIAJJ[0;39m 请求参数: []
2020-08-25 23:03:18.566 INFO  c.c.business.controller.admin.CourseController    :34   [32minpkBDWt[0;39m pageDto: 1
2020-08-25 23:03:18.572 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32minpkBDWt[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:03:18.572 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mdthCIAJJ[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:03:18.575 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32minpkBDWt[0;39m ==> Parameters: 
2020-08-25 23:03:18.575 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mdthCIAJJ[0;39m ==> Parameters: 
2020-08-25 23:03:18.578 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:03:18.579 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:03:18.579 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32minpkBDWt[0;39m <==    Columns: count(0)
2020-08-25 23:03:18.579 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32minpkBDWt[0;39m <==        Row: 3
2020-08-25 23:03:18.579 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:03:18.580 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32minpkBDWt[0;39m <==      Total: 1
2020-08-25 23:03:18.580 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:03:18.580 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:03:18.581 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32minpkBDWt[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:03:18.581 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:03:18.581 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32minpkBDWt[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:03:18.581 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:03:18.582 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:03:18.583 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:03:18.583 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32minpkBDWt[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:03:18.584 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32minpkBDWt[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:03:18.584 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:03:18.584 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:03:18.584 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32minpkBDWt[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:03:18.585 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:03:18.586 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32minpkBDWt[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:03:18.588 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32minpkBDWt[0;39m <==      Total: 3
2020-08-25 23:03:18.588 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:03:18.589 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:03:18.590 INFO  com.course.server.config.LogAspect                :109  [32minpkBDWt[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:03:18.590 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:03:18.590 INFO  com.course.server.config.LogAspect                :110  [32minpkBDWt[0;39m ------------- 结束 耗时：26 ms -------------
2020-08-25 23:03:18.590 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:03:18.590 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:03:18.591 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:03:18.591 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:03:18.592 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:03:18.592 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:03:18.593 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:03:18.593 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:03:18.593 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:03:18.594 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:03:18.594 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:03:18.595 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:03:18.595 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:03:18.596 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:03:18.596 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:03:18.596 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:03:18.597 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:03:18.598 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:03:18.599 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:03:18.600 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:03:18.600 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:03:18.600 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:03:18.601 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:03:18.601 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:03:18.601 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:03:18.602 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:03:18.602 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:03:18.602 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:03:18.602 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:03:18.603 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:03:18.603 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:03:18.603 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdthCIAJJ[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:03:18.603 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mdthCIAJJ[0;39m <==      Total: 46
2020-08-25 23:03:18.604 INFO  com.course.server.config.LogAspect                :109  [32mdthCIAJJ[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:03:18.604 INFO  com.course.server.config.LogAspect                :110  [32mdthCIAJJ[0;39m ------------- 结束 耗时：41 ms -------------
2020-08-25 23:03:55.143 INFO  com.course.server.config.LogAspect                :76   [32mQT4V4GSE[0;39m ------------- 【course】操作开始 -------------
2020-08-25 23:03:55.144 INFO  com.course.server.config.LogAspect                :77   [32mQT4V4GSE[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/find-content/D5n6XQsE GET
2020-08-25 23:03:55.144 INFO  com.course.server.config.LogAspect                :78   [32mQT4V4GSE[0;39m 类名方法: com.course.business.controller.admin.CourseController.findContent
2020-08-25 23:03:55.144 INFO  com.course.server.config.LogAspect                :79   [32mQT4V4GSE[0;39m 远程地址: 192.168.1.4
2020-08-25 23:03:55.144 INFO  com.course.server.config.LogAspect                :97   [32mQT4V4GSE[0;39m 请求参数: ["D5n6XQsE"]
2020-08-25 23:03:55.148 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mQT4V4GSE[0;39m ==>  Preparing: select id , content from course_content where id = ? 
2020-08-25 23:03:55.149 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mQT4V4GSE[0;39m ==> Parameters: D5n6XQsE(String)
2020-08-25 23:03:55.158 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mQT4V4GSE[0;39m <==      Total: 0
2020-08-25 23:03:55.159 INFO  com.course.server.config.LogAspect                :109  [32mQT4V4GSE[0;39m 返回结果: {"success":true}
2020-08-25 23:03:55.160 INFO  com.course.server.config.LogAspect                :110  [32mQT4V4GSE[0;39m ------------- 结束 耗时：17 ms -------------
2020-08-25 23:04:48.016 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 23:09:48.026 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 23:11:15.331 INFO  com.course.server.config.LogAspect                :76   [32mjE0jRuX4[0;39m ------------- 【course】保存开始 -------------
2020-08-25 23:11:15.332 INFO  com.course.server.config.LogAspect                :77   [32mjE0jRuX4[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/save-content POST
2020-08-25 23:11:15.332 INFO  com.course.server.config.LogAspect                :78   [32mjE0jRuX4[0;39m 类名方法: com.course.business.controller.admin.CourseController.saveContent
2020-08-25 23:11:15.332 INFO  com.course.server.config.LogAspect                :79   [32mjE0jRuX4[0;39m 远程地址: 192.168.1.4
2020-08-25 23:11:15.333 INFO  com.course.server.config.LogAspect                :97   [32mjE0jRuX4[0;39m 请求参数: [{"content":"eeeeee","id":"D5n6XQsE"}]
2020-08-25 23:11:15.346 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mjE0jRuX4[0;39m ==>  Preparing: update course_content set content = ? where id = ? 
2020-08-25 23:11:15.354 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mjE0jRuX4[0;39m ==> Parameters: java.io.StringReader@142120e0(StringReader), D5n6XQsE(String)
2020-08-25 23:11:15.360 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mjE0jRuX4[0;39m <==    Updates: 0
2020-08-25 23:11:15.363 DEBUG c.course.server.mapper.CourseContentMapper.insert :159  [32mjE0jRuX4[0;39m ==>  Preparing: insert into course_content (id, content) values (?, ?) 
2020-08-25 23:11:15.364 DEBUG c.course.server.mapper.CourseContentMapper.insert :159  [32mjE0jRuX4[0;39m ==> Parameters: D5n6XQsE(String), java.io.StringReader@3add8907(StringReader)
2020-08-25 23:11:15.371 DEBUG c.course.server.mapper.CourseContentMapper.insert :159  [32mjE0jRuX4[0;39m <==    Updates: 1
2020-08-25 23:11:15.372 INFO  com.course.server.config.LogAspect                :109  [32mjE0jRuX4[0;39m 返回结果: {"success":true}
2020-08-25 23:11:15.372 INFO  com.course.server.config.LogAspect                :110  [32mjE0jRuX4[0;39m ------------- 结束 耗时：41 ms -------------
2020-08-25 23:11:25.889 INFO  com.course.server.config.LogAspect                :76   [32mqWyxITnC[0;39m ------------- 【course】操作开始 -------------
2020-08-25 23:11:25.890 INFO  com.course.server.config.LogAspect                :77   [32mqWyxITnC[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/find-content/D5n6XQsE GET
2020-08-25 23:11:25.890 INFO  com.course.server.config.LogAspect                :78   [32mqWyxITnC[0;39m 类名方法: com.course.business.controller.admin.CourseController.findContent
2020-08-25 23:11:25.890 INFO  com.course.server.config.LogAspect                :79   [32mqWyxITnC[0;39m 远程地址: 192.168.1.4
2020-08-25 23:11:25.890 INFO  com.course.server.config.LogAspect                :97   [32mqWyxITnC[0;39m 请求参数: ["D5n6XQsE"]
2020-08-25 23:11:25.893 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mqWyxITnC[0;39m ==>  Preparing: select id , content from course_content where id = ? 
2020-08-25 23:11:25.894 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mqWyxITnC[0;39m ==> Parameters: D5n6XQsE(String)
2020-08-25 23:11:25.909 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32mqWyxITnC[0;39m <==    Columns: id, content
2020-08-25 23:11:25.911 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32mqWyxITnC[0;39m <==        Row: D5n6XQsE, <<BLOB>>
2020-08-25 23:11:25.919 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mqWyxITnC[0;39m <==      Total: 1
2020-08-25 23:11:25.920 INFO  com.course.server.config.LogAspect                :109  [32mqWyxITnC[0;39m 返回结果: {"content":{"content":"eeeeee","id":"D5n6XQsE"},"success":true}
2020-08-25 23:11:25.920 INFO  com.course.server.config.LogAspect                :110  [32mqWyxITnC[0;39m ------------- 结束 耗时：31 ms -------------
2020-08-25 23:11:34.957 INFO  com.course.server.config.LogAspect                :76   [32mPq3tWXTt[0;39m ------------- 【course】保存开始 -------------
2020-08-25 23:11:34.957 INFO  com.course.server.config.LogAspect                :77   [32mPq3tWXTt[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/save-content POST
2020-08-25 23:11:34.957 INFO  com.course.server.config.LogAspect                :78   [32mPq3tWXTt[0;39m 类名方法: com.course.business.controller.admin.CourseController.saveContent
2020-08-25 23:11:34.958 INFO  com.course.server.config.LogAspect                :79   [32mPq3tWXTt[0;39m 远程地址: 192.168.1.4
2020-08-25 23:11:34.958 INFO  com.course.server.config.LogAspect                :97   [32mPq3tWXTt[0;39m 请求参数: [{"content":"<p style=\"text-align: center; \">eeeeee</p>","id":"D5n6XQsE"}]
2020-08-25 23:11:34.958 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mPq3tWXTt[0;39m ==>  Preparing: update course_content set content = ? where id = ? 
2020-08-25 23:11:34.961 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mPq3tWXTt[0;39m ==> Parameters: java.io.StringReader@71882222(StringReader), D5n6XQsE(String)
2020-08-25 23:11:34.968 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mPq3tWXTt[0;39m <==    Updates: 1
2020-08-25 23:11:34.968 INFO  com.course.server.config.LogAspect                :109  [32mPq3tWXTt[0;39m 返回结果: {"success":true}
2020-08-25 23:11:34.968 INFO  com.course.server.config.LogAspect                :110  [32mPq3tWXTt[0;39m ------------- 结束 耗时：11 ms -------------
2020-08-25 23:11:37.327 INFO  com.course.server.config.LogAspect                :76   [32mJkTUoCt0[0;39m ------------- 【Chapter】查询开始 -------------
2020-08-25 23:11:37.328 INFO  com.course.server.config.LogAspect                :77   [32mJkTUoCt0[0;39m 请求地址: http://192.168.1.4:9002/business/admin/chapter/list POST
2020-08-25 23:11:37.328 INFO  com.course.server.config.LogAspect                :78   [32mJkTUoCt0[0;39m 类名方法: com.course.business.controller.admin.ChapterController.list
2020-08-25 23:11:37.329 INFO  com.course.server.config.LogAspect                :79   [32mJkTUoCt0[0;39m 远程地址: 192.168.1.4
2020-08-25 23:11:37.329 INFO  com.course.server.config.LogAspect                :97   [32mJkTUoCt0[0;39m 请求参数: [{"courseId":"D5n6XQsE","page":1,"size":5,"total":0}]
2020-08-25 23:11:37.369 DEBUG c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :159  [32mJkTUoCt0[0;39m ==>  Preparing: SELECT count(0) FROM chapter WHERE (course_id = ?) 
2020-08-25 23:11:37.370 DEBUG c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :159  [32mJkTUoCt0[0;39m ==> Parameters: D5n6XQsE(String)
2020-08-25 23:11:37.376 TRACE c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :165  [32mJkTUoCt0[0;39m <==    Columns: count(0)
2020-08-25 23:11:37.376 TRACE c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :165  [32mJkTUoCt0[0;39m <==        Row: 0
2020-08-25 23:11:37.377 DEBUG c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :159  [32mJkTUoCt0[0;39m <==      Total: 1
2020-08-25 23:11:37.377 INFO  com.course.server.config.LogAspect                :109  [32mJkTUoCt0[0;39m 返回结果: {"content":{"courseId":"D5n6XQsE","list":[],"page":1,"size":5,"total":0},"success":true}
2020-08-25 23:11:37.378 INFO  com.course.server.config.LogAspect                :110  [32mJkTUoCt0[0;39m ------------- 结束 耗时：51 ms -------------
2020-08-25 23:11:39.629 INFO  com.course.server.config.LogAspect                :76   [32ms54zeAeL[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:11:39.630 INFO  com.course.server.config.LogAspect                :77   [32ms54zeAeL[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:11:39.630 INFO  com.course.server.config.LogAspect                :78   [32ms54zeAeL[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:11:39.630 INFO  com.course.server.config.LogAspect                :79   [32ms54zeAeL[0;39m 远程地址: 192.168.1.4
2020-08-25 23:11:39.630 INFO  com.course.server.config.LogAspect                :97   [32ms54zeAeL[0;39m 请求参数: []
2020-08-25 23:11:39.631 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32ms54zeAeL[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:11:39.631 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32ms54zeAeL[0;39m ==> Parameters: 
2020-08-25 23:11:39.632 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:11:39.632 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:11:39.632 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:11:39.632 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:11:39.633 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:11:39.633 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:11:39.633 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:11:39.633 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:11:39.634 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:11:39.634 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:11:39.634 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:11:39.634 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:11:39.634 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:11:39.635 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:11:39.635 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:11:39.635 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:11:39.635 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:11:39.635 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:11:39.636 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:11:39.636 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:11:39.636 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:11:39.636 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:11:39.636 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:11:39.637 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:11:39.637 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:11:39.637 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:11:39.637 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:11:39.638 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:11:39.638 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:11:39.638 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:11:39.638 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:11:39.638 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:11:39.639 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:11:39.639 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:11:39.639 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:11:39.640 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:11:39.640 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:11:39.640 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:11:39.640 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:11:39.641 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:11:39.641 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:11:39.641 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:11:39.641 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:11:39.642 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:11:39.642 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:11:39.642 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:11:39.642 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32ms54zeAeL[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:11:39.642 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32ms54zeAeL[0;39m <==      Total: 46
2020-08-25 23:11:39.644 INFO  com.course.server.config.LogAspect                :109  [32ms54zeAeL[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:11:39.645 INFO  com.course.server.config.LogAspect                :110  [32ms54zeAeL[0;39m ------------- 结束 耗时：16 ms -------------
2020-08-25 23:11:41.535 INFO  com.course.server.config.LogAspect                :76   [32mG9yugPn6[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:11:41.535 INFO  com.course.server.config.LogAspect                :77   [32mG9yugPn6[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:11:41.536 INFO  com.course.server.config.LogAspect                :78   [32mG9yugPn6[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:11:41.539 INFO  com.course.server.config.LogAspect                :79   [32mG9yugPn6[0;39m 远程地址: 192.168.1.4
2020-08-25 23:11:41.540 INFO  com.course.server.config.LogAspect                :97   [32mG9yugPn6[0;39m 请求参数: []
2020-08-25 23:11:41.541 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mG9yugPn6[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:11:41.541 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mG9yugPn6[0;39m ==> Parameters: 
2020-08-25 23:11:41.543 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:11:41.543 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:11:41.544 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:11:41.544 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:11:41.544 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:11:41.544 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:11:41.544 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:11:41.545 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:11:41.545 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:11:41.545 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:11:41.545 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:11:41.545 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:11:41.546 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:11:41.546 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:11:41.546 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:11:41.546 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:11:41.546 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:11:41.547 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:11:41.547 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:11:41.547 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:11:41.548 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:11:41.548 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:11:41.548 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:11:41.548 INFO  com.course.server.config.LogAspect                :76   [32m5FPmde4S[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:11:41.548 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:11:41.549 INFO  com.course.server.config.LogAspect                :77   [32m5FPmde4S[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:11:41.549 INFO  com.course.server.config.LogAspect                :78   [32m5FPmde4S[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:11:41.549 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:11:41.549 INFO  com.course.server.config.LogAspect                :79   [32m5FPmde4S[0;39m 远程地址: 192.168.1.4
2020-08-25 23:11:41.549 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:11:41.549 INFO  com.course.server.config.LogAspect                :97   [32m5FPmde4S[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:11:41.549 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:11:41.549 INFO  c.c.business.controller.admin.CourseController    :34   [32m5FPmde4S[0;39m pageDto: 1
2020-08-25 23:11:41.549 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:11:41.549 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:11:41.550 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:11:41.550 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:11:41.550 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m5FPmde4S[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:11:41.550 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:11:41.550 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m5FPmde4S[0;39m ==> Parameters: 
2020-08-25 23:11:41.550 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:11:41.551 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:11:41.551 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:11:41.551 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:11:41.551 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:11:41.552 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m5FPmde4S[0;39m <==    Columns: count(0)
2020-08-25 23:11:41.552 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:11:41.552 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:11:41.552 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m5FPmde4S[0;39m <==        Row: 3
2020-08-25 23:11:41.552 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:11:41.552 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m5FPmde4S[0;39m <==      Total: 1
2020-08-25 23:11:41.552 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:11:41.552 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:11:41.553 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m5FPmde4S[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:11:41.553 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:11:41.553 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m5FPmde4S[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:11:41.553 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:11:41.553 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:11:41.553 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:11:41.553 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mG9yugPn6[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:11:41.554 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mG9yugPn6[0;39m <==      Total: 46
2020-08-25 23:11:41.554 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m5FPmde4S[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:11:41.554 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m5FPmde4S[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:11:41.554 INFO  com.course.server.config.LogAspect                :109  [32mG9yugPn6[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:11:41.555 INFO  com.course.server.config.LogAspect                :110  [32mG9yugPn6[0;39m ------------- 结束 耗时：21 ms -------------
2020-08-25 23:11:41.555 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m5FPmde4S[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:11:41.556 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m5FPmde4S[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:11:41.556 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m5FPmde4S[0;39m <==      Total: 3
2020-08-25 23:11:41.563 INFO  com.course.server.config.LogAspect                :109  [32m5FPmde4S[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:11:41.564 INFO  com.course.server.config.LogAspect                :110  [32m5FPmde4S[0;39m ------------- 结束 耗时：16 ms -------------
2020-08-25 23:11:43.796 INFO  com.course.server.config.LogAspect                :76   [32miY7PWeoi[0;39m ------------- 【course】操作开始 -------------
2020-08-25 23:11:43.797 INFO  com.course.server.config.LogAspect                :77   [32miY7PWeoi[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/find-content/D5n6XQsE GET
2020-08-25 23:11:43.798 INFO  com.course.server.config.LogAspect                :78   [32miY7PWeoi[0;39m 类名方法: com.course.business.controller.admin.CourseController.findContent
2020-08-25 23:11:43.798 INFO  com.course.server.config.LogAspect                :79   [32miY7PWeoi[0;39m 远程地址: 192.168.1.4
2020-08-25 23:11:43.798 INFO  com.course.server.config.LogAspect                :97   [32miY7PWeoi[0;39m 请求参数: ["D5n6XQsE"]
2020-08-25 23:11:43.800 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32miY7PWeoi[0;39m ==>  Preparing: select id , content from course_content where id = ? 
2020-08-25 23:11:43.800 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32miY7PWeoi[0;39m ==> Parameters: D5n6XQsE(String)
2020-08-25 23:11:43.801 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32miY7PWeoi[0;39m <==    Columns: id, content
2020-08-25 23:11:43.801 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32miY7PWeoi[0;39m <==        Row: D5n6XQsE, <<BLOB>>
2020-08-25 23:11:43.801 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32miY7PWeoi[0;39m <==      Total: 1
2020-08-25 23:11:43.802 INFO  com.course.server.config.LogAspect                :109  [32miY7PWeoi[0;39m 返回结果: {"content":{"content":"<p style=\"text-align: center; \">eeeeee</p>","id":"D5n6XQsE"},"success":true}
2020-08-25 23:11:43.802 INFO  com.course.server.config.LogAspect                :110  [32miY7PWeoi[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-25 23:11:47.114 INFO  com.course.server.config.LogAspect                :76   [32mcqkUQZDo[0;39m ------------- 【course】操作开始 -------------
2020-08-25 23:11:47.114 INFO  com.course.server.config.LogAspect                :77   [32mcqkUQZDo[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/find-content/K59dWr5W GET
2020-08-25 23:11:47.114 INFO  com.course.server.config.LogAspect                :78   [32mcqkUQZDo[0;39m 类名方法: com.course.business.controller.admin.CourseController.findContent
2020-08-25 23:11:47.114 INFO  com.course.server.config.LogAspect                :79   [32mcqkUQZDo[0;39m 远程地址: 192.168.1.4
2020-08-25 23:11:47.115 INFO  com.course.server.config.LogAspect                :97   [32mcqkUQZDo[0;39m 请求参数: ["K59dWr5W"]
2020-08-25 23:11:47.115 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mcqkUQZDo[0;39m ==>  Preparing: select id , content from course_content where id = ? 
2020-08-25 23:11:47.116 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mcqkUQZDo[0;39m ==> Parameters: K59dWr5W(String)
2020-08-25 23:11:47.116 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mcqkUQZDo[0;39m <==      Total: 0
2020-08-25 23:11:47.116 INFO  com.course.server.config.LogAspect                :109  [32mcqkUQZDo[0;39m 返回结果: {"success":true}
2020-08-25 23:11:47.117 INFO  com.course.server.config.LogAspect                :110  [32mcqkUQZDo[0;39m ------------- 结束 耗时：4 ms -------------
2020-08-25 23:11:50.971 INFO  com.course.server.config.LogAspect                :76   [32mU8WuC8v6[0;39m ------------- 【course】操作开始 -------------
2020-08-25 23:11:50.972 INFO  com.course.server.config.LogAspect                :77   [32mU8WuC8v6[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/find-content/00000001 GET
2020-08-25 23:11:50.972 INFO  com.course.server.config.LogAspect                :78   [32mU8WuC8v6[0;39m 类名方法: com.course.business.controller.admin.CourseController.findContent
2020-08-25 23:11:50.972 INFO  com.course.server.config.LogAspect                :79   [32mU8WuC8v6[0;39m 远程地址: 192.168.1.4
2020-08-25 23:11:50.973 INFO  com.course.server.config.LogAspect                :97   [32mU8WuC8v6[0;39m 请求参数: ["00000001"]
2020-08-25 23:11:50.973 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mU8WuC8v6[0;39m ==>  Preparing: select id , content from course_content where id = ? 
2020-08-25 23:11:50.974 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mU8WuC8v6[0;39m ==> Parameters: 00000001(String)
2020-08-25 23:11:50.976 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mU8WuC8v6[0;39m <==      Total: 0
2020-08-25 23:11:50.977 INFO  com.course.server.config.LogAspect                :109  [32mU8WuC8v6[0;39m 返回结果: {"success":true}
2020-08-25 23:11:50.977 INFO  com.course.server.config.LogAspect                :110  [32mU8WuC8v6[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-25 23:11:58.454 INFO  com.course.server.config.LogAspect                :76   [32mg0UeJ8bs[0;39m ------------- 【course】保存开始 -------------
2020-08-25 23:11:58.454 INFO  com.course.server.config.LogAspect                :77   [32mg0UeJ8bs[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/save-content POST
2020-08-25 23:11:58.455 INFO  com.course.server.config.LogAspect                :78   [32mg0UeJ8bs[0;39m 类名方法: com.course.business.controller.admin.CourseController.saveContent
2020-08-25 23:11:58.455 INFO  com.course.server.config.LogAspect                :79   [32mg0UeJ8bs[0;39m 远程地址: 192.168.1.4
2020-08-25 23:11:58.455 INFO  com.course.server.config.LogAspect                :97   [32mg0UeJ8bs[0;39m 请求参数: [{"content":"this is course 00000001","id":"00000001"}]
2020-08-25 23:11:58.455 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mg0UeJ8bs[0;39m ==>  Preparing: update course_content set content = ? where id = ? 
2020-08-25 23:11:58.456 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mg0UeJ8bs[0;39m ==> Parameters: java.io.StringReader@2c69c5f7(StringReader), 00000001(String)
2020-08-25 23:11:58.456 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mg0UeJ8bs[0;39m <==    Updates: 0
2020-08-25 23:11:58.457 DEBUG c.course.server.mapper.CourseContentMapper.insert :159  [32mg0UeJ8bs[0;39m ==>  Preparing: insert into course_content (id, content) values (?, ?) 
2020-08-25 23:11:58.457 DEBUG c.course.server.mapper.CourseContentMapper.insert :159  [32mg0UeJ8bs[0;39m ==> Parameters: 00000001(String), java.io.StringReader@2fea4e21(StringReader)
2020-08-25 23:11:58.465 DEBUG c.course.server.mapper.CourseContentMapper.insert :159  [32mg0UeJ8bs[0;39m <==    Updates: 1
2020-08-25 23:11:58.465 INFO  com.course.server.config.LogAspect                :109  [32mg0UeJ8bs[0;39m 返回结果: {"success":true}
2020-08-25 23:11:58.465 INFO  com.course.server.config.LogAspect                :110  [32mg0UeJ8bs[0;39m ------------- 结束 耗时：11 ms -------------
2020-08-25 23:12:02.037 INFO  com.course.server.config.LogAspect                :76   [32mDec33jUd[0;39m ------------- 【course】操作开始 -------------
2020-08-25 23:12:02.038 INFO  com.course.server.config.LogAspect                :77   [32mDec33jUd[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/find-content/00000001 GET
2020-08-25 23:12:02.038 INFO  com.course.server.config.LogAspect                :78   [32mDec33jUd[0;39m 类名方法: com.course.business.controller.admin.CourseController.findContent
2020-08-25 23:12:02.038 INFO  com.course.server.config.LogAspect                :79   [32mDec33jUd[0;39m 远程地址: 192.168.1.4
2020-08-25 23:12:02.039 INFO  com.course.server.config.LogAspect                :97   [32mDec33jUd[0;39m 请求参数: ["00000001"]
2020-08-25 23:12:02.039 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mDec33jUd[0;39m ==>  Preparing: select id , content from course_content where id = ? 
2020-08-25 23:12:02.042 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mDec33jUd[0;39m ==> Parameters: 00000001(String)
2020-08-25 23:12:02.043 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32mDec33jUd[0;39m <==    Columns: id, content
2020-08-25 23:12:02.043 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32mDec33jUd[0;39m <==        Row: 00000001, <<BLOB>>
2020-08-25 23:12:02.044 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mDec33jUd[0;39m <==      Total: 1
2020-08-25 23:12:02.044 INFO  com.course.server.config.LogAspect                :109  [32mDec33jUd[0;39m 返回结果: {"content":{"content":"this is course 00000001","id":"00000001"},"success":true}
2020-08-25 23:12:02.044 INFO  com.course.server.config.LogAspect                :110  [32mDec33jUd[0;39m ------------- 结束 耗时：7 ms -------------
2020-08-25 23:14:06.022 INFO  com.course.server.config.LogAspect                :76   [32m0TYZkkiu[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:14:06.023 INFO  com.course.server.config.LogAspect                :76   [32mlS9jXWql[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:14:06.023 INFO  com.course.server.config.LogAspect                :77   [32m0TYZkkiu[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:14:06.023 INFO  com.course.server.config.LogAspect                :77   [32mlS9jXWql[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:14:06.023 INFO  com.course.server.config.LogAspect                :78   [32m0TYZkkiu[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:14:06.023 INFO  com.course.server.config.LogAspect                :78   [32mlS9jXWql[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:14:06.023 INFO  com.course.server.config.LogAspect                :79   [32m0TYZkkiu[0;39m 远程地址: 192.168.1.4
2020-08-25 23:14:06.023 INFO  com.course.server.config.LogAspect                :79   [32mlS9jXWql[0;39m 远程地址: 192.168.1.4
2020-08-25 23:14:06.023 INFO  com.course.server.config.LogAspect                :97   [32m0TYZkkiu[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:14:06.023 INFO  com.course.server.config.LogAspect                :97   [32mlS9jXWql[0;39m 请求参数: []
2020-08-25 23:14:06.024 INFO  c.c.business.controller.admin.CourseController    :34   [32m0TYZkkiu[0;39m pageDto: 1
2020-08-25 23:14:06.024 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mlS9jXWql[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:14:06.024 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m0TYZkkiu[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:14:06.025 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mlS9jXWql[0;39m ==> Parameters: 
2020-08-25 23:14:06.025 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m0TYZkkiu[0;39m ==> Parameters: 
2020-08-25 23:14:06.025 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m0TYZkkiu[0;39m <==    Columns: count(0)
2020-08-25 23:14:06.025 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:14:06.025 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m0TYZkkiu[0;39m <==        Row: 3
2020-08-25 23:14:06.025 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:14:06.026 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m0TYZkkiu[0;39m <==      Total: 1
2020-08-25 23:14:06.026 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:14:06.026 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:14:06.026 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m0TYZkkiu[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:14:06.026 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:14:06.026 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m0TYZkkiu[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:14:06.026 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:14:06.026 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:14:06.027 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:14:06.027 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m0TYZkkiu[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:14:06.027 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:14:06.027 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m0TYZkkiu[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:14:06.027 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:14:06.027 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m0TYZkkiu[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:14:06.027 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:14:06.028 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m0TYZkkiu[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:14:06.028 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:14:06.028 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m0TYZkkiu[0;39m <==      Total: 3
2020-08-25 23:14:06.028 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:14:06.028 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:14:06.029 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:14:06.029 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:14:06.029 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:14:06.029 INFO  com.course.server.config.LogAspect                :109  [32m0TYZkkiu[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:14:06.029 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:14:06.029 INFO  com.course.server.config.LogAspect                :110  [32m0TYZkkiu[0;39m ------------- 结束 耗时：7 ms -------------
2020-08-25 23:14:06.029 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:14:06.030 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:14:06.030 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:14:06.030 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:14:06.030 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:14:06.030 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:14:06.031 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:14:06.031 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:14:06.031 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:14:06.031 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:14:06.031 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:14:06.032 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:14:06.032 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:14:06.032 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:14:06.032 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:14:06.032 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:14:06.033 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:14:06.033 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:14:06.033 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:14:06.033 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:14:06.033 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:14:06.034 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:14:06.034 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:14:06.034 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:14:06.034 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:14:06.034 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:14:06.035 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:14:06.035 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:14:06.035 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mlS9jXWql[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:14:06.035 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mlS9jXWql[0;39m <==      Total: 46
2020-08-25 23:14:06.036 INFO  com.course.server.config.LogAspect                :109  [32mlS9jXWql[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:14:06.036 INFO  com.course.server.config.LogAspect                :110  [32mlS9jXWql[0;39m ------------- 结束 耗时：13 ms -------------
2020-08-25 23:14:32.062 INFO  com.course.server.config.LogAspect                :76   [32mqjwwjizH[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:14:32.062 INFO  com.course.server.config.LogAspect                :77   [32mqjwwjizH[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:14:32.062 INFO  com.course.server.config.LogAspect                :78   [32mqjwwjizH[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:14:32.062 INFO  com.course.server.config.LogAspect                :79   [32mqjwwjizH[0;39m 远程地址: 192.168.1.4
2020-08-25 23:14:32.063 INFO  com.course.server.config.LogAspect                :97   [32mqjwwjizH[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:14:32.063 INFO  c.c.business.controller.admin.CourseController    :34   [32mqjwwjizH[0;39m pageDto: 1
2020-08-25 23:14:32.064 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mqjwwjizH[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:14:32.065 INFO  com.course.server.config.LogAspect                :76   [32mtw1p8QqU[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:14:32.065 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mqjwwjizH[0;39m ==> Parameters: 
2020-08-25 23:14:32.065 INFO  com.course.server.config.LogAspect                :77   [32mtw1p8QqU[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:14:32.065 INFO  com.course.server.config.LogAspect                :78   [32mtw1p8QqU[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:14:32.065 INFO  com.course.server.config.LogAspect                :79   [32mtw1p8QqU[0;39m 远程地址: 192.168.1.4
2020-08-25 23:14:32.065 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mqjwwjizH[0;39m <==    Columns: count(0)
2020-08-25 23:14:32.065 INFO  com.course.server.config.LogAspect                :97   [32mtw1p8QqU[0;39m 请求参数: []
2020-08-25 23:14:32.066 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mqjwwjizH[0;39m <==        Row: 3
2020-08-25 23:14:32.066 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mqjwwjizH[0;39m <==      Total: 1
2020-08-25 23:14:32.066 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mtw1p8QqU[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:14:32.066 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mtw1p8QqU[0;39m ==> Parameters: 
2020-08-25 23:14:32.067 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mqjwwjizH[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:14:32.067 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:14:32.068 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mqjwwjizH[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:14:32.068 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:14:32.069 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:14:32.071 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:14:32.071 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mqjwwjizH[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:14:32.072 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:14:32.072 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mqjwwjizH[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:14:32.072 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:14:32.073 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mqjwwjizH[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:14:32.073 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:14:32.073 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:14:32.073 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mqjwwjizH[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:14:32.073 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:14:32.074 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:14:32.074 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:14:32.074 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:14:32.074 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:14:32.074 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mqjwwjizH[0;39m <==      Total: 3
2020-08-25 23:14:32.074 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:14:32.075 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:14:32.075 INFO  com.course.server.config.LogAspect                :109  [32mqjwwjizH[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:14:32.075 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:14:32.075 INFO  com.course.server.config.LogAspect                :110  [32mqjwwjizH[0;39m ------------- 结束 耗时：14 ms -------------
2020-08-25 23:14:32.075 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:14:32.075 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:14:32.076 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:14:32.076 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:14:32.076 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:14:32.077 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:14:32.077 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:14:32.077 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:14:32.078 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:14:32.078 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:14:32.078 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:14:32.078 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:14:32.079 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:14:32.079 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:14:32.080 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:14:32.080 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:14:32.080 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:14:32.081 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:14:32.081 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:14:32.081 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:14:32.082 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:14:32.084 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:14:32.086 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:14:32.087 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:14:32.089 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:14:32.092 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:14:32.092 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:14:32.093 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:14:32.095 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:14:32.097 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:14:32.097 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mtw1p8QqU[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:14:32.097 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mtw1p8QqU[0;39m <==      Total: 46
2020-08-25 23:14:32.099 INFO  com.course.server.config.LogAspect                :109  [32mtw1p8QqU[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:14:32.099 INFO  com.course.server.config.LogAspect                :110  [32mtw1p8QqU[0;39m ------------- 结束 耗时：34 ms -------------
2020-08-25 23:14:48.044 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 23:16:16.581 INFO  com.course.server.config.LogAspect                :76   [32m1ukWJstp[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:16:16.581 INFO  com.course.server.config.LogAspect                :77   [32m1ukWJstp[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:16:16.582 INFO  com.course.server.config.LogAspect                :78   [32m1ukWJstp[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:16:16.582 INFO  com.course.server.config.LogAspect                :79   [32m1ukWJstp[0;39m 远程地址: 192.168.1.4
2020-08-25 23:16:16.582 INFO  com.course.server.config.LogAspect                :97   [32m1ukWJstp[0;39m 请求参数: []
2020-08-25 23:16:16.583 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m1ukWJstp[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:16:16.583 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m1ukWJstp[0;39m ==> Parameters: 
2020-08-25 23:16:16.585 INFO  com.course.server.config.LogAspect                :76   [32mqsRLhUMY[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:16:16.585 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:16:16.585 INFO  com.course.server.config.LogAspect                :77   [32mqsRLhUMY[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:16:16.586 INFO  com.course.server.config.LogAspect                :78   [32mqsRLhUMY[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:16:16.586 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:16:16.586 INFO  com.course.server.config.LogAspect                :79   [32mqsRLhUMY[0;39m 远程地址: 192.168.1.4
2020-08-25 23:16:16.586 INFO  com.course.server.config.LogAspect                :97   [32mqsRLhUMY[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:16:16.586 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:16:16.586 INFO  c.c.business.controller.admin.CourseController    :34   [32mqsRLhUMY[0;39m pageDto: 1
2020-08-25 23:16:16.586 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:16:16.587 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:16:16.587 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:16:16.587 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mqsRLhUMY[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:16:16.587 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:16:16.588 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mqsRLhUMY[0;39m ==> Parameters: 
2020-08-25 23:16:16.588 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:16:16.588 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:16:16.588 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mqsRLhUMY[0;39m <==    Columns: count(0)
2020-08-25 23:16:16.588 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:16:16.589 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mqsRLhUMY[0;39m <==        Row: 3
2020-08-25 23:16:16.589 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:16:16.589 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mqsRLhUMY[0;39m <==      Total: 1
2020-08-25 23:16:16.589 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:16:16.589 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:16:16.589 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mqsRLhUMY[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:16:16.590 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:16:16.590 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mqsRLhUMY[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:16:16.590 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:16:16.590 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:16:16.591 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:16:16.591 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:16:16.591 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:16:16.591 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mqsRLhUMY[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:16:16.591 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:16:16.591 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mqsRLhUMY[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:16:16.592 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:16:16.592 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mqsRLhUMY[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:16:16.592 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:16:16.592 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mqsRLhUMY[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:16:16.592 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:16:16.592 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mqsRLhUMY[0;39m <==      Total: 3
2020-08-25 23:16:16.593 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:16:16.593 INFO  com.course.server.config.LogAspect                :109  [32mqsRLhUMY[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:16:16.593 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:16:16.593 INFO  com.course.server.config.LogAspect                :110  [32mqsRLhUMY[0;39m ------------- 结束 耗时：8 ms -------------
2020-08-25 23:16:16.593 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:16:16.593 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:16:16.594 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:16:16.594 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:16:16.594 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:16:16.595 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:16:16.595 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:16:16.595 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:16:16.595 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:16:16.596 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:16:16.596 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:16:16.596 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:16:16.597 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:16:16.597 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:16:16.597 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:16:16.598 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:16:16.598 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:16:16.598 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:16:16.599 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:16:16.599 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:16:16.602 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:16:16.603 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m1ukWJstp[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:16:16.604 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m1ukWJstp[0;39m <==      Total: 46
2020-08-25 23:16:16.605 INFO  com.course.server.config.LogAspect                :109  [32m1ukWJstp[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:16:16.605 INFO  com.course.server.config.LogAspect                :110  [32m1ukWJstp[0;39m ------------- 结束 耗时：24 ms -------------
2020-08-25 23:16:24.747 INFO  com.course.server.config.LogAspect                :76   [32m08YM2N14[0;39m ------------- 【Chapter】查询开始 -------------
2020-08-25 23:16:24.747 INFO  com.course.server.config.LogAspect                :77   [32m08YM2N14[0;39m 请求地址: http://192.168.1.4:9002/business/admin/chapter/list POST
2020-08-25 23:16:24.747 INFO  com.course.server.config.LogAspect                :78   [32m08YM2N14[0;39m 类名方法: com.course.business.controller.admin.ChapterController.list
2020-08-25 23:16:24.748 INFO  com.course.server.config.LogAspect                :79   [32m08YM2N14[0;39m 远程地址: 192.168.1.4
2020-08-25 23:16:24.748 INFO  com.course.server.config.LogAspect                :97   [32m08YM2N14[0;39m 请求参数: [{"courseId":"D5n6XQsE","page":1,"size":5,"total":0}]
2020-08-25 23:16:24.749 DEBUG c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :159  [32m08YM2N14[0;39m ==>  Preparing: SELECT count(0) FROM chapter WHERE (course_id = ?) 
2020-08-25 23:16:24.749 DEBUG c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :159  [32m08YM2N14[0;39m ==> Parameters: D5n6XQsE(String)
2020-08-25 23:16:24.752 TRACE c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :165  [32m08YM2N14[0;39m <==    Columns: count(0)
2020-08-25 23:16:24.753 TRACE c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :165  [32m08YM2N14[0;39m <==        Row: 0
2020-08-25 23:16:24.753 DEBUG c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :159  [32m08YM2N14[0;39m <==      Total: 1
2020-08-25 23:16:24.753 INFO  com.course.server.config.LogAspect                :109  [32m08YM2N14[0;39m 返回结果: {"content":{"courseId":"D5n6XQsE","list":[],"page":1,"size":5,"total":0},"success":true}
2020-08-25 23:16:24.753 INFO  com.course.server.config.LogAspect                :110  [32m08YM2N14[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-25 23:16:26.378 INFO  com.course.server.config.LogAspect                :76   [32msRTXd58j[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:16:26.378 INFO  com.course.server.config.LogAspect                :76   [32mMBwLqLK0[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:16:26.379 INFO  com.course.server.config.LogAspect                :77   [32msRTXd58j[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:16:26.379 INFO  com.course.server.config.LogAspect                :77   [32mMBwLqLK0[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:16:26.379 INFO  com.course.server.config.LogAspect                :78   [32msRTXd58j[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:16:26.379 INFO  com.course.server.config.LogAspect                :78   [32mMBwLqLK0[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:16:26.379 INFO  com.course.server.config.LogAspect                :79   [32msRTXd58j[0;39m 远程地址: 192.168.1.4
2020-08-25 23:16:26.379 INFO  com.course.server.config.LogAspect                :79   [32mMBwLqLK0[0;39m 远程地址: 192.168.1.4
2020-08-25 23:16:26.379 INFO  com.course.server.config.LogAspect                :97   [32msRTXd58j[0;39m 请求参数: []
2020-08-25 23:16:26.379 INFO  com.course.server.config.LogAspect                :97   [32mMBwLqLK0[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:16:26.379 INFO  c.c.business.controller.admin.CourseController    :34   [32mMBwLqLK0[0;39m pageDto: 1
2020-08-25 23:16:26.379 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32msRTXd58j[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:16:26.380 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32msRTXd58j[0;39m ==> Parameters: 
2020-08-25 23:16:26.380 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mMBwLqLK0[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:16:26.380 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mMBwLqLK0[0;39m ==> Parameters: 
2020-08-25 23:16:26.380 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:16:26.381 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mMBwLqLK0[0;39m <==    Columns: count(0)
2020-08-25 23:16:26.381 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:16:26.381 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mMBwLqLK0[0;39m <==        Row: 3
2020-08-25 23:16:26.381 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:16:26.381 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mMBwLqLK0[0;39m <==      Total: 1
2020-08-25 23:16:26.381 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:16:26.381 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:16:26.381 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mMBwLqLK0[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:16:26.382 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:16:26.382 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mMBwLqLK0[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:16:26.382 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:16:26.382 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:16:26.382 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mMBwLqLK0[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:16:26.382 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:16:26.382 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:16:26.382 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mMBwLqLK0[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:16:26.383 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:16:26.383 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mMBwLqLK0[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:16:26.383 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:16:26.383 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mMBwLqLK0[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:16:26.383 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:16:26.383 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mMBwLqLK0[0;39m <==      Total: 3
2020-08-25 23:16:26.383 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:16:26.384 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:16:26.384 INFO  com.course.server.config.LogAspect                :109  [32mMBwLqLK0[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:16:26.384 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:16:26.384 INFO  com.course.server.config.LogAspect                :110  [32mMBwLqLK0[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-25 23:16:26.384 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:16:26.384 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:16:26.384 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:16:26.385 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:16:26.385 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:16:26.385 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:16:26.385 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:16:26.385 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:16:26.386 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:16:26.386 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:16:26.386 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:16:26.386 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:16:26.387 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:16:26.387 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:16:26.387 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:16:26.387 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:16:26.388 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:16:26.388 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:16:26.388 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:16:26.388 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:16:26.388 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:16:26.389 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:16:26.389 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:16:26.389 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:16:26.389 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:16:26.390 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:16:26.390 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:16:26.390 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:16:26.391 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:16:26.391 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:16:26.391 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32msRTXd58j[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:16:26.391 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32msRTXd58j[0;39m <==      Total: 46
2020-08-25 23:16:26.392 INFO  com.course.server.config.LogAspect                :109  [32msRTXd58j[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:16:26.392 INFO  com.course.server.config.LogAspect                :110  [32msRTXd58j[0;39m ------------- 结束 耗时：14 ms -------------
2020-08-25 23:16:27.501 INFO  com.course.server.config.LogAspect                :76   [32mr53IveUd[0;39m ------------- 【course】操作开始 -------------
2020-08-25 23:16:27.501 INFO  com.course.server.config.LogAspect                :77   [32mr53IveUd[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/find-content/D5n6XQsE GET
2020-08-25 23:16:27.502 INFO  com.course.server.config.LogAspect                :78   [32mr53IveUd[0;39m 类名方法: com.course.business.controller.admin.CourseController.findContent
2020-08-25 23:16:27.502 INFO  com.course.server.config.LogAspect                :79   [32mr53IveUd[0;39m 远程地址: 192.168.1.4
2020-08-25 23:16:27.502 INFO  com.course.server.config.LogAspect                :97   [32mr53IveUd[0;39m 请求参数: ["D5n6XQsE"]
2020-08-25 23:16:27.503 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mr53IveUd[0;39m ==>  Preparing: select id , content from course_content where id = ? 
2020-08-25 23:16:27.503 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mr53IveUd[0;39m ==> Parameters: D5n6XQsE(String)
2020-08-25 23:16:27.507 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32mr53IveUd[0;39m <==    Columns: id, content
2020-08-25 23:16:27.507 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32mr53IveUd[0;39m <==        Row: D5n6XQsE, <<BLOB>>
2020-08-25 23:16:27.508 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mr53IveUd[0;39m <==      Total: 1
2020-08-25 23:16:27.508 INFO  com.course.server.config.LogAspect                :109  [32mr53IveUd[0;39m 返回结果: {"content":{"content":"<p style=\"text-align: center; \">eeeeee</p>","id":"D5n6XQsE"},"success":true}
2020-08-25 23:16:27.508 INFO  com.course.server.config.LogAspect                :110  [32mr53IveUd[0;39m ------------- 结束 耗时：7 ms -------------
2020-08-25 23:16:32.533 INFO  com.course.server.config.LogAspect                :76   [32m5kDpAPuo[0;39m ------------- 【course】保存开始 -------------
2020-08-25 23:16:32.534 INFO  com.course.server.config.LogAspect                :77   [32m5kDpAPuo[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/save-content POST
2020-08-25 23:16:32.534 INFO  com.course.server.config.LogAspect                :78   [32m5kDpAPuo[0;39m 类名方法: com.course.business.controller.admin.CourseController.saveContent
2020-08-25 23:16:32.534 INFO  com.course.server.config.LogAspect                :79   [32m5kDpAPuo[0;39m 远程地址: 192.168.1.4
2020-08-25 23:16:32.534 INFO  com.course.server.config.LogAspect                :97   [32m5kDpAPuo[0;39m 请求参数: [{"content":"<p style=\"text-align: center; \">eeeeeedddd</p>","id":"D5n6XQsE"}]
2020-08-25 23:16:32.535 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32m5kDpAPuo[0;39m ==>  Preparing: update course_content set content = ? where id = ? 
2020-08-25 23:16:32.536 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32m5kDpAPuo[0;39m ==> Parameters: java.io.StringReader@49c1c889(StringReader), D5n6XQsE(String)
2020-08-25 23:16:32.538 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32m5kDpAPuo[0;39m <==    Updates: 1
2020-08-25 23:16:32.539 INFO  com.course.server.config.LogAspect                :109  [32m5kDpAPuo[0;39m 返回结果: {"success":true}
2020-08-25 23:16:32.539 INFO  com.course.server.config.LogAspect                :110  [32m5kDpAPuo[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-25 23:16:32.881 INFO  com.course.server.config.LogAspect                :76   [32mueOIgmTz[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:16:32.881 INFO  com.course.server.config.LogAspect                :77   [32mueOIgmTz[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:16:32.881 INFO  com.course.server.config.LogAspect                :78   [32mueOIgmTz[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:16:32.881 INFO  com.course.server.config.LogAspect                :79   [32mueOIgmTz[0;39m 远程地址: 192.168.1.4
2020-08-25 23:16:32.881 INFO  com.course.server.config.LogAspect                :97   [32mueOIgmTz[0;39m 请求参数: []
2020-08-25 23:16:32.882 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mueOIgmTz[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:16:32.882 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mueOIgmTz[0;39m ==> Parameters: 
2020-08-25 23:16:32.883 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:16:32.883 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:16:32.883 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:16:32.883 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:16:32.883 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:16:32.884 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:16:32.884 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:16:32.884 INFO  com.course.server.config.LogAspect                :76   [32mT73nzqRf[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:16:32.884 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:16:32.884 INFO  com.course.server.config.LogAspect                :77   [32mT73nzqRf[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:16:32.884 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:16:32.884 INFO  com.course.server.config.LogAspect                :78   [32mT73nzqRf[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:16:32.884 INFO  com.course.server.config.LogAspect                :79   [32mT73nzqRf[0;39m 远程地址: 192.168.1.4
2020-08-25 23:16:32.884 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:16:32.885 INFO  com.course.server.config.LogAspect                :97   [32mT73nzqRf[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:16:32.885 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:16:32.885 INFO  c.c.business.controller.admin.CourseController    :34   [32mT73nzqRf[0;39m pageDto: 1
2020-08-25 23:16:32.885 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:16:32.885 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:16:32.885 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:16:32.885 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mT73nzqRf[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:16:32.885 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:16:32.885 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:16:32.886 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mT73nzqRf[0;39m ==> Parameters: 
2020-08-25 23:16:32.886 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:16:32.886 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:16:32.886 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mT73nzqRf[0;39m <==    Columns: count(0)
2020-08-25 23:16:32.886 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:16:32.886 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mT73nzqRf[0;39m <==        Row: 3
2020-08-25 23:16:32.886 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:16:32.886 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mT73nzqRf[0;39m <==      Total: 1
2020-08-25 23:16:32.887 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:16:32.887 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mT73nzqRf[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:16:32.887 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:16:32.887 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mT73nzqRf[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:16:32.887 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:16:32.887 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:16:32.887 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:16:32.887 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mT73nzqRf[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:16:32.888 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:16:32.888 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mT73nzqRf[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:16:32.888 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:16:32.888 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:16:32.888 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mT73nzqRf[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:16:32.888 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:16:32.888 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:16:32.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:16:32.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:16:32.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:16:32.889 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mT73nzqRf[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:16:32.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:16:32.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:16:32.889 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mT73nzqRf[0;39m <==      Total: 3
2020-08-25 23:16:32.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:16:32.890 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:16:32.890 INFO  com.course.server.config.LogAspect                :109  [32mT73nzqRf[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:16:32.890 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:16:32.890 INFO  com.course.server.config.LogAspect                :110  [32mT73nzqRf[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-25 23:16:32.890 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:16:32.890 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:16:32.890 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:16:32.891 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:16:32.891 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:16:32.891 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:16:32.891 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:16:32.892 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:16:32.892 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mueOIgmTz[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:16:32.892 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mueOIgmTz[0;39m <==      Total: 46
2020-08-25 23:16:32.893 INFO  com.course.server.config.LogAspect                :109  [32mueOIgmTz[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:16:32.893 INFO  com.course.server.config.LogAspect                :110  [32mueOIgmTz[0;39m ------------- 结束 耗时：12 ms -------------
2020-08-25 23:16:35.515 INFO  com.course.server.config.LogAspect                :76   [32m27Ekap6n[0;39m ------------- 【course】操作开始 -------------
2020-08-25 23:16:35.515 INFO  com.course.server.config.LogAspect                :77   [32m27Ekap6n[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/find-content/D5n6XQsE GET
2020-08-25 23:16:35.515 INFO  com.course.server.config.LogAspect                :78   [32m27Ekap6n[0;39m 类名方法: com.course.business.controller.admin.CourseController.findContent
2020-08-25 23:16:35.516 INFO  com.course.server.config.LogAspect                :79   [32m27Ekap6n[0;39m 远程地址: 192.168.1.4
2020-08-25 23:16:35.516 INFO  com.course.server.config.LogAspect                :97   [32m27Ekap6n[0;39m 请求参数: ["D5n6XQsE"]
2020-08-25 23:16:35.516 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32m27Ekap6n[0;39m ==>  Preparing: select id , content from course_content where id = ? 
2020-08-25 23:16:35.517 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32m27Ekap6n[0;39m ==> Parameters: D5n6XQsE(String)
2020-08-25 23:16:35.519 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32m27Ekap6n[0;39m <==    Columns: id, content
2020-08-25 23:16:35.520 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32m27Ekap6n[0;39m <==        Row: D5n6XQsE, <<BLOB>>
2020-08-25 23:16:35.521 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32m27Ekap6n[0;39m <==      Total: 1
2020-08-25 23:16:35.521 INFO  com.course.server.config.LogAspect                :109  [32m27Ekap6n[0;39m 返回结果: {"content":{"content":"<p style=\"text-align: center; \">eeeeeedddd</p>","id":"D5n6XQsE"},"success":true}
2020-08-25 23:16:35.521 INFO  com.course.server.config.LogAspect                :110  [32m27Ekap6n[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-25 23:16:40.559 INFO  com.course.server.config.LogAspect                :76   [32mDa5RWW7u[0;39m ------------- 【course】保存开始 -------------
2020-08-25 23:16:40.559 INFO  com.course.server.config.LogAspect                :77   [32mDa5RWW7u[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/save-content POST
2020-08-25 23:16:40.559 INFO  com.course.server.config.LogAspect                :78   [32mDa5RWW7u[0;39m 类名方法: com.course.business.controller.admin.CourseController.saveContent
2020-08-25 23:16:40.560 INFO  com.course.server.config.LogAspect                :79   [32mDa5RWW7u[0;39m 远程地址: 192.168.1.4
2020-08-25 23:16:40.560 INFO  com.course.server.config.LogAspect                :97   [32mDa5RWW7u[0;39m 请求参数: [{"content":"<p style=\"text-align: center; \">eeeeeedddd</p><p style=\"text-align: center; \"><br></p><p style=\"text-align: center; \">dddddd</p>","id":"D5n6XQsE"}]
2020-08-25 23:16:40.560 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mDa5RWW7u[0;39m ==>  Preparing: update course_content set content = ? where id = ? 
2020-08-25 23:16:40.561 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mDa5RWW7u[0;39m ==> Parameters: java.io.StringReader@77b03490(StringReader), D5n6XQsE(String)
2020-08-25 23:16:40.562 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mDa5RWW7u[0;39m <==    Updates: 1
2020-08-25 23:16:40.562 INFO  com.course.server.config.LogAspect                :109  [32mDa5RWW7u[0;39m 返回结果: {"success":true}
2020-08-25 23:16:40.563 INFO  com.course.server.config.LogAspect                :110  [32mDa5RWW7u[0;39m ------------- 结束 耗时：4 ms -------------
2020-08-25 23:16:45.547 INFO  com.course.server.config.LogAspect                :76   [32m05luBraX[0;39m ------------- 【course】保存开始 -------------
2020-08-25 23:16:45.548 INFO  com.course.server.config.LogAspect                :77   [32m05luBraX[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/save-content POST
2020-08-25 23:16:45.548 INFO  com.course.server.config.LogAspect                :78   [32m05luBraX[0;39m 类名方法: com.course.business.controller.admin.CourseController.saveContent
2020-08-25 23:16:45.548 INFO  com.course.server.config.LogAspect                :79   [32m05luBraX[0;39m 远程地址: 192.168.1.4
2020-08-25 23:16:45.549 INFO  com.course.server.config.LogAspect                :97   [32m05luBraX[0;39m 请求参数: [{"content":"<p style=\"text-align: center; \">eeeeeedddd</p><p style=\"text-align: center; \"><br></p><p style=\"text-align: center; \">dddddd</p>","id":"D5n6XQsE"}]
2020-08-25 23:16:45.549 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32m05luBraX[0;39m ==>  Preparing: update course_content set content = ? where id = ? 
2020-08-25 23:16:45.550 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32m05luBraX[0;39m ==> Parameters: java.io.StringReader@7c08d106(StringReader), D5n6XQsE(String)
2020-08-25 23:16:45.552 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32m05luBraX[0;39m <==    Updates: 1
2020-08-25 23:16:45.552 INFO  com.course.server.config.LogAspect                :109  [32m05luBraX[0;39m 返回结果: {"success":true}
2020-08-25 23:16:45.553 INFO  com.course.server.config.LogAspect                :110  [32m05luBraX[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-25 23:16:55.993 INFO  com.course.server.config.LogAspect                :76   [32mNKbWTvM8[0;39m ------------- 【course】操作开始 -------------
2020-08-25 23:16:55.994 INFO  com.course.server.config.LogAspect                :77   [32mNKbWTvM8[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/find-content/D5n6XQsE GET
2020-08-25 23:16:55.994 INFO  com.course.server.config.LogAspect                :78   [32mNKbWTvM8[0;39m 类名方法: com.course.business.controller.admin.CourseController.findContent
2020-08-25 23:16:55.995 INFO  com.course.server.config.LogAspect                :79   [32mNKbWTvM8[0;39m 远程地址: 192.168.1.4
2020-08-25 23:16:55.995 INFO  com.course.server.config.LogAspect                :97   [32mNKbWTvM8[0;39m 请求参数: ["D5n6XQsE"]
2020-08-25 23:16:55.996 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mNKbWTvM8[0;39m ==>  Preparing: select id , content from course_content where id = ? 
2020-08-25 23:16:55.996 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mNKbWTvM8[0;39m ==> Parameters: D5n6XQsE(String)
2020-08-25 23:16:55.997 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32mNKbWTvM8[0;39m <==    Columns: id, content
2020-08-25 23:16:56.000 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32mNKbWTvM8[0;39m <==        Row: D5n6XQsE, <<BLOB>>
2020-08-25 23:16:56.000 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mNKbWTvM8[0;39m <==      Total: 1
2020-08-25 23:16:56.001 INFO  com.course.server.config.LogAspect                :109  [32mNKbWTvM8[0;39m 返回结果: {"content":{"content":"<p style=\"text-align: center; \">eeeeeedddd</p><p style=\"text-align: center; \"><br></p><p style=\"text-align: center; \">dddddd</p>","id":"D5n6XQsE"},"success":true}
2020-08-25 23:16:56.001 INFO  com.course.server.config.LogAspect                :110  [32mNKbWTvM8[0;39m ------------- 结束 耗时：8 ms -------------
2020-08-25 23:17:01.031 INFO  com.course.server.config.LogAspect                :76   [32mAwzohulz[0;39m ------------- 【course】保存开始 -------------
2020-08-25 23:17:01.031 INFO  com.course.server.config.LogAspect                :77   [32mAwzohulz[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/save-content POST
2020-08-25 23:17:01.031 INFO  com.course.server.config.LogAspect                :78   [32mAwzohulz[0;39m 类名方法: com.course.business.controller.admin.CourseController.saveContent
2020-08-25 23:17:01.032 INFO  com.course.server.config.LogAspect                :79   [32mAwzohulz[0;39m 远程地址: 192.168.1.4
2020-08-25 23:17:01.032 INFO  com.course.server.config.LogAspect                :97   [32mAwzohulz[0;39m 请求参数: [{"content":"<p style=\"text-align: center; \">eeeeeedddd</p><p style=\"text-align: center; \"><br></p><p style=\"text-align: center; \">dddddd</p>","id":"D5n6XQsE"}]
2020-08-25 23:17:01.033 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mAwzohulz[0;39m ==>  Preparing: update course_content set content = ? where id = ? 
2020-08-25 23:17:01.033 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mAwzohulz[0;39m ==> Parameters: java.io.StringReader@77ce49da(StringReader), D5n6XQsE(String)
2020-08-25 23:17:01.035 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mAwzohulz[0;39m <==    Updates: 1
2020-08-25 23:17:01.036 INFO  com.course.server.config.LogAspect                :109  [32mAwzohulz[0;39m 返回结果: {"success":true}
2020-08-25 23:17:01.036 INFO  com.course.server.config.LogAspect                :110  [32mAwzohulz[0;39m ------------- 结束 耗时：5 ms -------------
2020-08-25 23:18:21.396 INFO  com.course.server.config.LogAspect                :76   [32mn9m3vTOJ[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:18:21.396 INFO  com.course.server.config.LogAspect                :76   [32mnCStMKBI[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:18:21.397 INFO  com.course.server.config.LogAspect                :77   [32mn9m3vTOJ[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:18:21.397 INFO  com.course.server.config.LogAspect                :77   [32mnCStMKBI[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:18:21.397 INFO  com.course.server.config.LogAspect                :78   [32mn9m3vTOJ[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:18:21.397 INFO  com.course.server.config.LogAspect                :78   [32mnCStMKBI[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:18:21.397 INFO  com.course.server.config.LogAspect                :79   [32mnCStMKBI[0;39m 远程地址: 192.168.1.4
2020-08-25 23:18:21.397 INFO  com.course.server.config.LogAspect                :79   [32mn9m3vTOJ[0;39m 远程地址: 192.168.1.4
2020-08-25 23:18:21.397 INFO  com.course.server.config.LogAspect                :97   [32mnCStMKBI[0;39m 请求参数: []
2020-08-25 23:18:21.397 INFO  com.course.server.config.LogAspect                :97   [32mn9m3vTOJ[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:18:21.397 INFO  c.c.business.controller.admin.CourseController    :34   [32mn9m3vTOJ[0;39m pageDto: 1
2020-08-25 23:18:21.398 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mnCStMKBI[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:18:21.398 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mnCStMKBI[0;39m ==> Parameters: 
2020-08-25 23:18:21.398 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mn9m3vTOJ[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:18:21.398 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mn9m3vTOJ[0;39m ==> Parameters: 
2020-08-25 23:18:21.399 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:18:21.399 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mn9m3vTOJ[0;39m <==    Columns: count(0)
2020-08-25 23:18:21.399 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:18:21.399 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mn9m3vTOJ[0;39m <==        Row: 3
2020-08-25 23:18:21.399 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:18:21.399 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mn9m3vTOJ[0;39m <==      Total: 1
2020-08-25 23:18:21.399 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:18:21.400 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:18:21.400 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mn9m3vTOJ[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:18:21.400 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mn9m3vTOJ[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:18:21.400 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:18:21.400 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:18:21.400 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mn9m3vTOJ[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:18:21.400 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:18:21.401 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:18:21.401 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mn9m3vTOJ[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:18:21.401 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:18:21.401 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mn9m3vTOJ[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:18:21.401 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:18:21.402 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mn9m3vTOJ[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:18:21.402 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:18:21.402 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mn9m3vTOJ[0;39m <==      Total: 3
2020-08-25 23:18:21.402 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:18:21.402 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:18:21.402 INFO  com.course.server.config.LogAspect                :109  [32mn9m3vTOJ[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:18:21.403 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:18:21.403 INFO  com.course.server.config.LogAspect                :110  [32mn9m3vTOJ[0;39m ------------- 结束 耗时：7 ms -------------
2020-08-25 23:18:21.403 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:18:21.403 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:18:21.403 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:18:21.403 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:18:21.404 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:18:21.404 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:18:21.404 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:18:21.404 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:18:21.404 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:18:21.405 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:18:21.405 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:18:21.405 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:18:21.405 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:18:21.405 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:18:21.406 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:18:21.406 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:18:21.406 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:18:21.406 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:18:21.407 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:18:21.407 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:18:21.407 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:18:21.407 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:18:21.407 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:18:21.408 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:18:21.408 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:18:21.408 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:18:21.408 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:18:21.408 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:18:21.408 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:18:21.409 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:18:21.409 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:18:21.409 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mnCStMKBI[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:18:21.409 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mnCStMKBI[0;39m <==      Total: 46
2020-08-25 23:18:21.410 INFO  com.course.server.config.LogAspect                :109  [32mnCStMKBI[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:18:21.410 INFO  com.course.server.config.LogAspect                :110  [32mnCStMKBI[0;39m ------------- 结束 耗时：14 ms -------------
2020-08-25 23:19:24.700 INFO  com.course.server.config.LogAspect                :76   [32mtNfos9Or[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:19:24.700 INFO  com.course.server.config.LogAspect                :77   [32mtNfos9Or[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:19:24.701 INFO  com.course.server.config.LogAspect                :78   [32mtNfos9Or[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:19:24.701 INFO  com.course.server.config.LogAspect                :79   [32mtNfos9Or[0;39m 远程地址: 192.168.1.4
2020-08-25 23:19:24.701 INFO  com.course.server.config.LogAspect                :97   [32mtNfos9Or[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:19:24.701 INFO  c.c.business.controller.admin.CourseController    :34   [32mtNfos9Or[0;39m pageDto: 1
2020-08-25 23:19:24.702 INFO  com.course.server.config.LogAspect                :76   [32m6wC2avPF[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:19:24.702 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mtNfos9Or[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:19:24.702 INFO  com.course.server.config.LogAspect                :77   [32m6wC2avPF[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:19:24.702 INFO  com.course.server.config.LogAspect                :78   [32m6wC2avPF[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:19:24.702 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mtNfos9Or[0;39m ==> Parameters: 
2020-08-25 23:19:24.702 INFO  com.course.server.config.LogAspect                :79   [32m6wC2avPF[0;39m 远程地址: 192.168.1.4
2020-08-25 23:19:24.702 INFO  com.course.server.config.LogAspect                :97   [32m6wC2avPF[0;39m 请求参数: []
2020-08-25 23:19:24.703 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mtNfos9Or[0;39m <==    Columns: count(0)
2020-08-25 23:19:24.703 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m6wC2avPF[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:19:24.703 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mtNfos9Or[0;39m <==        Row: 3
2020-08-25 23:19:24.703 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m6wC2avPF[0;39m ==> Parameters: 
2020-08-25 23:19:24.703 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mtNfos9Or[0;39m <==      Total: 1
2020-08-25 23:19:24.704 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mtNfos9Or[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:19:24.704 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mtNfos9Or[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:19:24.704 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:19:24.704 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:19:24.704 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mtNfos9Or[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:19:24.704 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:19:24.705 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mtNfos9Or[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:19:24.705 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:19:24.705 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mtNfos9Or[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:19:24.705 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:19:24.705 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:19:24.705 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mtNfos9Or[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:19:24.705 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:19:24.705 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mtNfos9Or[0;39m <==      Total: 3
2020-08-25 23:19:24.705 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:19:24.706 INFO  com.course.server.config.LogAspect                :109  [32mtNfos9Or[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:19:24.706 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:19:24.706 INFO  com.course.server.config.LogAspect                :110  [32mtNfos9Or[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-25 23:19:24.706 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:19:24.706 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:19:24.706 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:19:24.707 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:19:24.707 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:19:24.707 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:19:24.707 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:19:24.707 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:19:24.708 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:19:24.708 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:19:24.708 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:19:24.708 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:19:24.708 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:19:24.709 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:19:24.709 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:19:24.709 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:19:24.709 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:19:24.709 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:19:24.710 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:19:24.710 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:19:24.710 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:19:24.710 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:19:24.710 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:19:24.711 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:19:24.711 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:19:24.711 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:19:24.711 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:19:24.711 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:19:24.712 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:19:24.712 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:19:24.712 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:19:24.712 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:19:24.712 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:19:24.713 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:19:24.713 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:19:24.713 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:19:24.713 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:19:24.713 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6wC2avPF[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:19:24.714 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m6wC2avPF[0;39m <==      Total: 46
2020-08-25 23:19:24.714 INFO  com.course.server.config.LogAspect                :109  [32m6wC2avPF[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:19:24.714 INFO  com.course.server.config.LogAspect                :110  [32m6wC2avPF[0;39m ------------- 结束 耗时：12 ms -------------
2020-08-25 23:19:28.004 INFO  com.course.server.config.LogAspect                :76   [32m9ezzkkVE[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:19:28.004 INFO  com.course.server.config.LogAspect                :76   [32mgztPAaXk[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:19:28.004 INFO  com.course.server.config.LogAspect                :77   [32m9ezzkkVE[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:19:28.004 INFO  com.course.server.config.LogAspect                :77   [32mgztPAaXk[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:19:28.004 INFO  com.course.server.config.LogAspect                :78   [32mgztPAaXk[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:19:28.004 INFO  com.course.server.config.LogAspect                :78   [32m9ezzkkVE[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:19:28.004 INFO  com.course.server.config.LogAspect                :79   [32mgztPAaXk[0;39m 远程地址: 192.168.1.4
2020-08-25 23:19:28.004 INFO  com.course.server.config.LogAspect                :79   [32m9ezzkkVE[0;39m 远程地址: 192.168.1.4
2020-08-25 23:19:28.005 INFO  com.course.server.config.LogAspect                :97   [32mgztPAaXk[0;39m 请求参数: []
2020-08-25 23:19:28.005 INFO  com.course.server.config.LogAspect                :97   [32m9ezzkkVE[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:19:28.005 INFO  c.c.business.controller.admin.CourseController    :34   [32m9ezzkkVE[0;39m pageDto: 1
2020-08-25 23:19:28.005 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mgztPAaXk[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:19:28.006 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mgztPAaXk[0;39m ==> Parameters: 
2020-08-25 23:19:28.006 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m9ezzkkVE[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:19:28.006 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m9ezzkkVE[0;39m ==> Parameters: 
2020-08-25 23:19:28.006 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:19:28.007 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:19:28.007 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m9ezzkkVE[0;39m <==    Columns: count(0)
2020-08-25 23:19:28.007 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:19:28.007 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m9ezzkkVE[0;39m <==        Row: 3
2020-08-25 23:19:28.007 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:19:28.007 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m9ezzkkVE[0;39m <==      Total: 1
2020-08-25 23:19:28.007 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:19:28.008 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:19:28.008 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m9ezzkkVE[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:19:28.008 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:19:28.008 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m9ezzkkVE[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:19:28.008 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:19:28.009 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:19:28.009 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m9ezzkkVE[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:19:28.009 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:19:28.009 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m9ezzkkVE[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:19:28.009 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:19:28.010 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m9ezzkkVE[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:19:28.010 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:19:28.010 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m9ezzkkVE[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:19:28.010 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:19:28.010 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m9ezzkkVE[0;39m <==      Total: 3
2020-08-25 23:19:28.010 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:19:28.011 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:19:28.011 INFO  com.course.server.config.LogAspect                :109  [32m9ezzkkVE[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:19:28.011 INFO  com.course.server.config.LogAspect                :110  [32m9ezzkkVE[0;39m ------------- 结束 耗时：7 ms -------------
2020-08-25 23:19:28.011 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:19:28.011 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:19:28.012 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:19:28.012 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:19:28.012 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:19:28.013 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:19:28.013 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:19:28.013 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:19:28.014 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:19:28.014 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:19:28.014 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:19:28.015 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:19:28.015 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:19:28.015 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:19:28.015 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:19:28.016 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:19:28.016 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:19:28.016 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:19:28.017 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:19:28.017 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:19:28.017 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:19:28.018 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:19:28.018 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:19:28.019 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:19:28.020 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:19:28.020 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:19:28.021 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:19:28.021 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:19:28.021 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:19:28.022 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:19:28.022 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:19:28.022 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mgztPAaXk[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:19:28.023 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mgztPAaXk[0;39m <==      Total: 46
2020-08-25 23:19:28.023 INFO  com.course.server.config.LogAspect                :109  [32mgztPAaXk[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:19:28.024 INFO  com.course.server.config.LogAspect                :110  [32mgztPAaXk[0;39m ------------- 结束 耗时：20 ms -------------
2020-08-25 23:19:48.057 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 23:24:48.050 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-25 23:26:41.994 INFO  com.course.server.config.LogAspect                :76   [32mk1w5g7sY[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:26:41.995 INFO  com.course.server.config.LogAspect                :77   [32mk1w5g7sY[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:26:41.995 INFO  com.course.server.config.LogAspect                :78   [32mk1w5g7sY[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:26:41.995 INFO  com.course.server.config.LogAspect                :79   [32mk1w5g7sY[0;39m 远程地址: 192.168.1.4
2020-08-25 23:26:41.995 INFO  com.course.server.config.LogAspect                :76   [32mAu9VOU6g[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:26:41.995 INFO  com.course.server.config.LogAspect                :97   [32mk1w5g7sY[0;39m 请求参数: []
2020-08-25 23:26:41.995 INFO  com.course.server.config.LogAspect                :77   [32mAu9VOU6g[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:26:41.995 INFO  com.course.server.config.LogAspect                :78   [32mAu9VOU6g[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:26:41.995 INFO  com.course.server.config.LogAspect                :79   [32mAu9VOU6g[0;39m 远程地址: 192.168.1.4
2020-08-25 23:26:41.996 INFO  com.course.server.config.LogAspect                :97   [32mAu9VOU6g[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:26:41.996 INFO  c.c.business.controller.admin.CourseController    :34   [32mAu9VOU6g[0;39m pageDto: 1
2020-08-25 23:26:41.996 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mk1w5g7sY[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:26:41.996 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mk1w5g7sY[0;39m ==> Parameters: 
2020-08-25 23:26:41.996 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mAu9VOU6g[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:26:41.997 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mAu9VOU6g[0;39m ==> Parameters: 
2020-08-25 23:26:41.996 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:26:41.997 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:26:41.997 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mAu9VOU6g[0;39m <==    Columns: count(0)
2020-08-25 23:26:41.997 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:26:41.997 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mAu9VOU6g[0;39m <==        Row: 3
2020-08-25 23:26:41.997 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:26:41.997 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mAu9VOU6g[0;39m <==      Total: 1
2020-08-25 23:26:41.997 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:26:41.997 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mAu9VOU6g[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:26:41.997 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:26:41.998 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mAu9VOU6g[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:26:41.998 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:26:41.998 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:26:41.998 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:26:41.998 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mAu9VOU6g[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:26:41.998 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:26:41.998 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mAu9VOU6g[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:26:41.998 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:26:41.999 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mAu9VOU6g[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:26:41.999 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:26:41.999 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mAu9VOU6g[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:26:41.999 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:26:41.999 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:26:41.999 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mAu9VOU6g[0;39m <==      Total: 3
2020-08-25 23:26:41.999 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:26:41.999 INFO  com.course.server.config.LogAspect                :109  [32mAu9VOU6g[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:26:41.999 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:26:41.999 INFO  com.course.server.config.LogAspect                :110  [32mAu9VOU6g[0;39m ------------- 结束 耗时：4 ms -------------
2020-08-25 23:26:41.999 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:26:42.000 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:26:42.000 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:26:42.000 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:26:42.000 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:26:42.000 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:26:42.001 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:26:42.001 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:26:42.001 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:26:42.001 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:26:42.001 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:26:42.002 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:26:42.002 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:26:42.002 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:26:42.002 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:26:42.002 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:26:42.003 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:26:42.004 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:26:42.004 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:26:42.005 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:26:42.005 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:26:42.006 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:26:42.006 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:26:42.006 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:26:42.006 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:26:42.007 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:26:42.007 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:26:42.007 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:26:42.007 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:26:42.007 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:26:42.008 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mk1w5g7sY[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:26:42.008 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mk1w5g7sY[0;39m <==      Total: 46
2020-08-25 23:26:42.008 INFO  com.course.server.config.LogAspect                :109  [32mk1w5g7sY[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:26:42.008 INFO  com.course.server.config.LogAspect                :110  [32mk1w5g7sY[0;39m ------------- 结束 耗时：14 ms -------------
2020-08-25 23:27:12.011 INFO  com.course.server.config.LogAspect                :76   [32mZtb7ohy2[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:27:12.012 INFO  com.course.server.config.LogAspect                :77   [32mZtb7ohy2[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:27:12.012 INFO  com.course.server.config.LogAspect                :78   [32mZtb7ohy2[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:27:12.012 INFO  com.course.server.config.LogAspect                :79   [32mZtb7ohy2[0;39m 远程地址: 192.168.1.4
2020-08-25 23:27:12.012 INFO  com.course.server.config.LogAspect                :97   [32mZtb7ohy2[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:27:12.012 INFO  c.c.business.controller.admin.CourseController    :34   [32mZtb7ohy2[0;39m pageDto: 1
2020-08-25 23:27:12.013 INFO  com.course.server.config.LogAspect                :76   [32mT4yKaV45[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:27:12.013 INFO  com.course.server.config.LogAspect                :77   [32mT4yKaV45[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:27:12.013 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mZtb7ohy2[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:27:12.013 INFO  com.course.server.config.LogAspect                :78   [32mT4yKaV45[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:27:12.013 INFO  com.course.server.config.LogAspect                :79   [32mT4yKaV45[0;39m 远程地址: 192.168.1.4
2020-08-25 23:27:12.013 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mZtb7ohy2[0;39m ==> Parameters: 
2020-08-25 23:27:12.013 INFO  com.course.server.config.LogAspect                :97   [32mT4yKaV45[0;39m 请求参数: []
2020-08-25 23:27:12.013 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mZtb7ohy2[0;39m <==    Columns: count(0)
2020-08-25 23:27:12.014 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mT4yKaV45[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:27:12.014 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mZtb7ohy2[0;39m <==        Row: 3
2020-08-25 23:27:12.014 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mT4yKaV45[0;39m ==> Parameters: 
2020-08-25 23:27:12.014 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mZtb7ohy2[0;39m <==      Total: 1
2020-08-25 23:27:12.014 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mZtb7ohy2[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:27:12.014 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:27:12.014 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mZtb7ohy2[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:27:12.014 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:27:12.015 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:27:12.015 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mZtb7ohy2[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:27:12.015 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:27:12.015 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mZtb7ohy2[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:27:12.015 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:27:12.015 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mZtb7ohy2[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:27:12.015 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:27:12.015 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:27:12.015 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mZtb7ohy2[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:27:12.016 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:27:12.016 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:27:12.016 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:27:12.016 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:27:12.016 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:27:12.016 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:27:12.017 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:27:12.017 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mZtb7ohy2[0;39m <==      Total: 3
2020-08-25 23:27:12.017 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:27:12.017 INFO  com.course.server.config.LogAspect                :109  [32mZtb7ohy2[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:27:12.017 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:27:12.017 INFO  com.course.server.config.LogAspect                :110  [32mZtb7ohy2[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-25 23:27:12.017 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:27:12.017 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:27:12.017 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:27:12.018 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:27:12.018 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:27:12.018 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:27:12.018 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:27:12.018 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:27:12.019 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:27:12.019 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:27:12.019 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:27:12.019 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:27:12.019 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:27:12.020 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:27:12.020 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:27:12.020 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:27:12.020 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:27:12.020 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:27:12.021 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:27:12.021 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:27:12.021 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:27:12.021 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:27:12.021 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:27:12.021 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:27:12.022 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:27:12.022 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:27:12.022 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:27:12.022 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:27:12.022 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:27:12.022 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:27:12.023 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mT4yKaV45[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:27:12.023 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mT4yKaV45[0;39m <==      Total: 46
2020-08-25 23:27:12.023 INFO  com.course.server.config.LogAspect                :109  [32mT4yKaV45[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:27:12.023 INFO  com.course.server.config.LogAspect                :110  [32mT4yKaV45[0;39m ------------- 结束 耗时：10 ms -------------
2020-08-25 23:28:21.111 INFO  com.course.server.config.LogAspect                :76   [32mBbTK7AwD[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:28:21.111 INFO  com.course.server.config.LogAspect                :77   [32mBbTK7AwD[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:28:21.112 INFO  com.course.server.config.LogAspect                :78   [32mBbTK7AwD[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:28:21.112 INFO  com.course.server.config.LogAspect                :79   [32mBbTK7AwD[0;39m 远程地址: 192.168.1.4
2020-08-25 23:28:21.112 INFO  com.course.server.config.LogAspect                :97   [32mBbTK7AwD[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:28:21.112 INFO  c.c.business.controller.admin.CourseController    :34   [32mBbTK7AwD[0;39m pageDto: 1
2020-08-25 23:28:21.113 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mBbTK7AwD[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:28:21.113 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mBbTK7AwD[0;39m ==> Parameters: 
2020-08-25 23:28:21.114 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mBbTK7AwD[0;39m <==    Columns: count(0)
2020-08-25 23:28:21.114 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mBbTK7AwD[0;39m <==        Row: 3
2020-08-25 23:28:21.114 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mBbTK7AwD[0;39m <==      Total: 1
2020-08-25 23:28:21.114 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mBbTK7AwD[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:28:21.115 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mBbTK7AwD[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:28:21.115 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mBbTK7AwD[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:28:21.115 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mBbTK7AwD[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:28:21.115 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mBbTK7AwD[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:28:21.116 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mBbTK7AwD[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:28:21.116 INFO  com.course.server.config.LogAspect                :76   [32mpkNL32G1[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:28:21.116 INFO  com.course.server.config.LogAspect                :77   [32mpkNL32G1[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:28:21.116 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mBbTK7AwD[0;39m <==      Total: 3
2020-08-25 23:28:21.116 INFO  com.course.server.config.LogAspect                :78   [32mpkNL32G1[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:28:21.116 INFO  com.course.server.config.LogAspect                :79   [32mpkNL32G1[0;39m 远程地址: 192.168.1.4
2020-08-25 23:28:21.116 INFO  com.course.server.config.LogAspect                :109  [32mBbTK7AwD[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:28:21.117 INFO  com.course.server.config.LogAspect                :97   [32mpkNL32G1[0;39m 请求参数: []
2020-08-25 23:28:21.117 INFO  com.course.server.config.LogAspect                :110  [32mBbTK7AwD[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-25 23:28:21.117 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mpkNL32G1[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:28:21.117 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mpkNL32G1[0;39m ==> Parameters: 
2020-08-25 23:28:21.118 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:28:21.118 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:28:21.118 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:28:21.119 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:28:21.119 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:28:21.119 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:28:21.119 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:28:21.119 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:28:21.120 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:28:21.120 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:28:21.120 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:28:21.120 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:28:21.120 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:28:21.121 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:28:21.121 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:28:21.121 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:28:21.121 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:28:21.121 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:28:21.122 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:28:21.122 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:28:21.122 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:28:21.122 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:28:21.122 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:28:21.123 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:28:21.123 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:28:21.123 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:28:21.123 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:28:21.123 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:28:21.123 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:28:21.124 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:28:21.124 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:28:21.124 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:28:21.124 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:28:21.124 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:28:21.125 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:28:21.125 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:28:21.125 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:28:21.125 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:28:21.125 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:28:21.125 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:28:21.126 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:28:21.126 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:28:21.126 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:28:21.126 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:28:21.126 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:28:21.126 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:28:21.127 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpkNL32G1[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:28:21.127 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mpkNL32G1[0;39m <==      Total: 46
2020-08-25 23:28:21.127 INFO  com.course.server.config.LogAspect                :109  [32mpkNL32G1[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:28:21.128 INFO  com.course.server.config.LogAspect                :110  [32mpkNL32G1[0;39m ------------- 结束 耗时：12 ms -------------
2020-08-25 23:28:25.707 INFO  com.course.server.config.LogAspect                :76   [32mWH5QBN79[0;39m ------------- 【course】操作开始 -------------
2020-08-25 23:28:25.707 INFO  com.course.server.config.LogAspect                :77   [32mWH5QBN79[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/find-content/D5n6XQsE GET
2020-08-25 23:28:25.708 INFO  com.course.server.config.LogAspect                :78   [32mWH5QBN79[0;39m 类名方法: com.course.business.controller.admin.CourseController.findContent
2020-08-25 23:28:25.708 INFO  com.course.server.config.LogAspect                :79   [32mWH5QBN79[0;39m 远程地址: 192.168.1.4
2020-08-25 23:28:25.708 INFO  com.course.server.config.LogAspect                :97   [32mWH5QBN79[0;39m 请求参数: ["D5n6XQsE"]
2020-08-25 23:28:25.709 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mWH5QBN79[0;39m ==>  Preparing: select id , content from course_content where id = ? 
2020-08-25 23:28:25.710 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mWH5QBN79[0;39m ==> Parameters: D5n6XQsE(String)
2020-08-25 23:28:25.710 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32mWH5QBN79[0;39m <==    Columns: id, content
2020-08-25 23:28:25.711 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32mWH5QBN79[0;39m <==        Row: D5n6XQsE, <<BLOB>>
2020-08-25 23:28:25.711 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mWH5QBN79[0;39m <==      Total: 1
2020-08-25 23:28:25.712 INFO  com.course.server.config.LogAspect                :109  [32mWH5QBN79[0;39m 返回结果: {"content":{"content":"<p style=\"text-align: center; \">eeeeeedddd</p><p style=\"text-align: center; \"><br></p><p style=\"text-align: center; \">dddddd</p>","id":"D5n6XQsE"},"success":true}
2020-08-25 23:28:25.712 INFO  com.course.server.config.LogAspect                :110  [32mWH5QBN79[0;39m ------------- 结束 耗时：5 ms -------------
2020-08-25 23:28:29.570 INFO  com.course.server.config.LogAspect                :76   [32mSRNrgGh6[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:28:29.571 INFO  com.course.server.config.LogAspect                :77   [32mSRNrgGh6[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:28:29.571 INFO  com.course.server.config.LogAspect                :78   [32mSRNrgGh6[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:28:29.571 INFO  com.course.server.config.LogAspect                :76   [32mYya4hwMw[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:28:29.571 INFO  com.course.server.config.LogAspect                :79   [32mSRNrgGh6[0;39m 远程地址: 192.168.1.4
2020-08-25 23:28:29.571 INFO  com.course.server.config.LogAspect                :77   [32mYya4hwMw[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:28:29.571 INFO  com.course.server.config.LogAspect                :97   [32mSRNrgGh6[0;39m 请求参数: []
2020-08-25 23:28:29.571 INFO  com.course.server.config.LogAspect                :78   [32mYya4hwMw[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:28:29.571 INFO  com.course.server.config.LogAspect                :79   [32mYya4hwMw[0;39m 远程地址: 192.168.1.4
2020-08-25 23:28:29.572 INFO  com.course.server.config.LogAspect                :97   [32mYya4hwMw[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:28:29.572 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mSRNrgGh6[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:28:29.572 INFO  c.c.business.controller.admin.CourseController    :34   [32mYya4hwMw[0;39m pageDto: 1
2020-08-25 23:28:29.572 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mSRNrgGh6[0;39m ==> Parameters: 
2020-08-25 23:28:29.572 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mYya4hwMw[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:28:29.572 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:28:29.573 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mYya4hwMw[0;39m ==> Parameters: 
2020-08-25 23:28:29.573 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:28:29.573 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:28:29.573 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mYya4hwMw[0;39m <==    Columns: count(0)
2020-08-25 23:28:29.573 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:28:29.573 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mYya4hwMw[0;39m <==        Row: 3
2020-08-25 23:28:29.574 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:28:29.574 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mYya4hwMw[0;39m <==      Total: 1
2020-08-25 23:28:29.574 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:28:29.574 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:28:29.574 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mYya4hwMw[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:28:29.574 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:28:29.574 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mYya4hwMw[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:28:29.574 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:28:29.575 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:28:29.575 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:28:29.575 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mYya4hwMw[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:28:29.575 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:28:29.575 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mYya4hwMw[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:28:29.575 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:28:29.575 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:28:29.575 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mYya4hwMw[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:28:29.575 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:28:29.575 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mYya4hwMw[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:28:29.576 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:28:29.576 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mYya4hwMw[0;39m <==      Total: 3
2020-08-25 23:28:29.576 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:28:29.576 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:28:29.576 INFO  com.course.server.config.LogAspect                :109  [32mYya4hwMw[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:28:29.576 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:28:29.576 INFO  com.course.server.config.LogAspect                :110  [32mYya4hwMw[0;39m ------------- 结束 耗时：5 ms -------------
2020-08-25 23:28:29.576 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:28:29.577 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:28:29.577 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:28:29.577 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:28:29.578 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:28:29.578 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:28:29.578 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:28:29.578 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:28:29.579 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:28:29.579 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:28:29.579 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:28:29.580 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:28:29.580 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:28:29.580 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:28:29.580 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:28:29.581 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:28:29.581 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:28:29.581 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:28:29.582 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:28:29.582 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:28:29.582 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:28:29.583 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:28:29.583 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:28:29.584 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:28:29.584 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:28:29.584 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:28:29.585 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:28:29.585 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mSRNrgGh6[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:28:29.585 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mSRNrgGh6[0;39m <==      Total: 46
2020-08-25 23:28:29.589 INFO  com.course.server.config.LogAspect                :109  [32mSRNrgGh6[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:28:29.589 INFO  com.course.server.config.LogAspect                :110  [32mSRNrgGh6[0;39m ------------- 结束 耗时：19 ms -------------
2020-08-25 23:28:31.552 INFO  com.course.server.config.LogAspect                :76   [32mullQgAOh[0;39m ------------- 【course】操作开始 -------------
2020-08-25 23:28:31.553 INFO  com.course.server.config.LogAspect                :77   [32mullQgAOh[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/find-content/D5n6XQsE GET
2020-08-25 23:28:31.553 INFO  com.course.server.config.LogAspect                :78   [32mullQgAOh[0;39m 类名方法: com.course.business.controller.admin.CourseController.findContent
2020-08-25 23:28:31.553 INFO  com.course.server.config.LogAspect                :79   [32mullQgAOh[0;39m 远程地址: 192.168.1.4
2020-08-25 23:28:31.553 INFO  com.course.server.config.LogAspect                :97   [32mullQgAOh[0;39m 请求参数: ["D5n6XQsE"]
2020-08-25 23:28:31.554 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mullQgAOh[0;39m ==>  Preparing: select id , content from course_content where id = ? 
2020-08-25 23:28:31.554 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mullQgAOh[0;39m ==> Parameters: D5n6XQsE(String)
2020-08-25 23:28:31.555 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32mullQgAOh[0;39m <==    Columns: id, content
2020-08-25 23:28:31.555 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32mullQgAOh[0;39m <==        Row: D5n6XQsE, <<BLOB>>
2020-08-25 23:28:31.555 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mullQgAOh[0;39m <==      Total: 1
2020-08-25 23:28:31.556 INFO  com.course.server.config.LogAspect                :109  [32mullQgAOh[0;39m 返回结果: {"content":{"content":"<p style=\"text-align: center; \">eeeeeedddd</p><p style=\"text-align: center; \"><br></p><p style=\"text-align: center; \">dddddd</p>","id":"D5n6XQsE"},"success":true}
2020-08-25 23:28:31.556 INFO  com.course.server.config.LogAspect                :110  [32mullQgAOh[0;39m ------------- 结束 耗时：4 ms -------------
2020-08-25 23:28:36.584 INFO  com.course.server.config.LogAspect                :76   [32mJV3AIq5S[0;39m ------------- 【course】保存开始 -------------
2020-08-25 23:28:36.584 INFO  com.course.server.config.LogAspect                :77   [32mJV3AIq5S[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/save-content POST
2020-08-25 23:28:36.584 INFO  com.course.server.config.LogAspect                :78   [32mJV3AIq5S[0;39m 类名方法: com.course.business.controller.admin.CourseController.saveContent
2020-08-25 23:28:36.584 INFO  com.course.server.config.LogAspect                :79   [32mJV3AIq5S[0;39m 远程地址: 192.168.1.4
2020-08-25 23:28:36.585 INFO  com.course.server.config.LogAspect                :97   [32mJV3AIq5S[0;39m 请求参数: [{"content":"<p style=\"text-align: center; \">eeeeeedddd</p><p style=\"text-align: center; \"><br></p><p style=\"text-align: center; \">dddddd</p>","id":"D5n6XQsE"}]
2020-08-25 23:28:36.585 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mJV3AIq5S[0;39m ==>  Preparing: update course_content set content = ? where id = ? 
2020-08-25 23:28:36.586 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mJV3AIq5S[0;39m ==> Parameters: java.io.StringReader@6fa1a4a1(StringReader), D5n6XQsE(String)
2020-08-25 23:28:36.590 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mJV3AIq5S[0;39m <==    Updates: 1
2020-08-25 23:28:36.590 INFO  com.course.server.config.LogAspect                :109  [32mJV3AIq5S[0;39m 返回结果: {"success":true}
2020-08-25 23:28:36.591 INFO  com.course.server.config.LogAspect                :110  [32mJV3AIq5S[0;39m ------------- 结束 耗时：7 ms -------------
2020-08-25 23:28:41.587 INFO  com.course.server.config.LogAspect                :76   [32mYFGi1HjZ[0;39m ------------- 【course】保存开始 -------------
2020-08-25 23:28:41.588 INFO  com.course.server.config.LogAspect                :77   [32mYFGi1HjZ[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/save-content POST
2020-08-25 23:28:41.588 INFO  com.course.server.config.LogAspect                :78   [32mYFGi1HjZ[0;39m 类名方法: com.course.business.controller.admin.CourseController.saveContent
2020-08-25 23:28:41.588 INFO  com.course.server.config.LogAspect                :79   [32mYFGi1HjZ[0;39m 远程地址: 192.168.1.4
2020-08-25 23:28:41.589 INFO  com.course.server.config.LogAspect                :97   [32mYFGi1HjZ[0;39m 请求参数: [{"content":"<p style=\"text-align: center; \">eeeeeedddd</p><p style=\"text-align: center; \"><br></p><p style=\"text-align: center; \">dddddd</p><p style=\"text-align: center; \">dd</p>","id":"D5n6XQsE"}]
2020-08-25 23:28:41.589 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mYFGi1HjZ[0;39m ==>  Preparing: update course_content set content = ? where id = ? 
2020-08-25 23:28:41.589 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mYFGi1HjZ[0;39m ==> Parameters: java.io.StringReader@6d19652a(StringReader), D5n6XQsE(String)
2020-08-25 23:28:41.592 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mYFGi1HjZ[0;39m <==    Updates: 1
2020-08-25 23:28:41.592 INFO  com.course.server.config.LogAspect                :109  [32mYFGi1HjZ[0;39m 返回结果: {"success":true}
2020-08-25 23:28:41.592 INFO  com.course.server.config.LogAspect                :110  [32mYFGi1HjZ[0;39m ------------- 结束 耗时：5 ms -------------
2020-08-25 23:29:29.618 INFO  com.course.server.config.LogAspect                :76   [32mYrpLr7wX[0;39m ------------- 【course】查询开始 -------------
2020-08-25 23:29:29.618 INFO  com.course.server.config.LogAspect                :76   [32mTpMLNeQl[0;39m ------------- 【category】操作开始 -------------
2020-08-25 23:29:29.619 INFO  com.course.server.config.LogAspect                :77   [32mTpMLNeQl[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-25 23:29:29.619 INFO  com.course.server.config.LogAspect                :77   [32mYrpLr7wX[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-25 23:29:29.619 INFO  com.course.server.config.LogAspect                :78   [32mTpMLNeQl[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-25 23:29:29.619 INFO  com.course.server.config.LogAspect                :79   [32mTpMLNeQl[0;39m 远程地址: 192.168.1.4
2020-08-25 23:29:29.619 INFO  com.course.server.config.LogAspect                :78   [32mYrpLr7wX[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-25 23:29:29.620 INFO  com.course.server.config.LogAspect                :97   [32mTpMLNeQl[0;39m 请求参数: []
2020-08-25 23:29:29.620 INFO  com.course.server.config.LogAspect                :79   [32mYrpLr7wX[0;39m 远程地址: 192.168.1.4
2020-08-25 23:29:29.620 INFO  com.course.server.config.LogAspect                :97   [32mYrpLr7wX[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-25 23:29:29.620 INFO  c.c.business.controller.admin.CourseController    :34   [32mYrpLr7wX[0;39m pageDto: 1
2020-08-25 23:29:29.623 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mTpMLNeQl[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-25 23:29:29.633 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mTpMLNeQl[0;39m ==> Parameters: 
2020-08-25 23:29:29.634 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mYrpLr7wX[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-25 23:29:29.634 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mYrpLr7wX[0;39m ==> Parameters: 
2020-08-25 23:29:29.638 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==    Columns: id, parent, name, sort
2020-08-25 23:29:29.639 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-25 23:29:29.639 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-25 23:29:29.640 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-25 23:29:29.640 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-25 23:29:29.641 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-25 23:29:29.641 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mYrpLr7wX[0;39m <==    Columns: count(0)
2020-08-25 23:29:29.642 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-25 23:29:29.642 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mYrpLr7wX[0;39m <==        Row: 3
2020-08-25 23:29:29.642 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-25 23:29:29.642 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mYrpLr7wX[0;39m <==      Total: 1
2020-08-25 23:29:29.643 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-25 23:29:29.643 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mYrpLr7wX[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-25 23:29:29.643 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-25 23:29:29.643 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mYrpLr7wX[0;39m ==> Parameters: 5(Integer)
2020-08-25 23:29:29.644 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-25 23:29:29.644 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-25 23:29:29.645 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-25 23:29:29.647 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-25 23:29:29.648 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mYrpLr7wX[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-25 23:29:29.648 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-25 23:29:29.649 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-25 23:29:29.649 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mYrpLr7wX[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-25 23:29:29.649 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-25 23:29:29.650 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mYrpLr7wX[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-25 23:29:29.650 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-25 23:29:29.650 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-25 23:29:29.650 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mYrpLr7wX[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-25 23:29:29.650 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-25 23:29:29.650 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mYrpLr7wX[0;39m <==      Total: 3
2020-08-25 23:29:29.650 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-25 23:29:29.651 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-25 23:29:29.651 INFO  com.course.server.config.LogAspect                :109  [32mYrpLr7wX[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-25 23:29:29.651 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-25 23:29:29.651 INFO  com.course.server.config.LogAspect                :110  [32mYrpLr7wX[0;39m ------------- 结束 耗时：33 ms -------------
2020-08-25 23:29:29.651 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-25 23:29:29.652 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-25 23:29:29.653 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-25 23:29:29.655 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-25 23:29:29.656 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-25 23:29:29.656 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-25 23:29:29.657 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-25 23:29:29.657 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-25 23:29:29.658 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-25 23:29:29.658 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-25 23:29:29.659 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-25 23:29:29.661 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-25 23:29:29.665 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-25 23:29:29.666 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-25 23:29:29.667 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-25 23:29:29.669 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-25 23:29:29.670 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-25 23:29:29.671 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-25 23:29:29.672 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-25 23:29:29.674 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-25 23:29:29.674 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-25 23:29:29.675 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-25 23:29:29.676 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-25 23:29:29.677 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTpMLNeQl[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-25 23:29:29.677 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mTpMLNeQl[0;39m <==      Total: 46
2020-08-25 23:29:29.678 INFO  com.course.server.config.LogAspect                :109  [32mTpMLNeQl[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-25 23:29:29.678 INFO  com.course.server.config.LogAspect                :110  [32mTpMLNeQl[0;39m ------------- 结束 耗时：60 ms -------------
2020-08-25 23:29:30.900 INFO  com.course.server.config.LogAspect                :76   [32mvBVx50Or[0;39m ------------- 【course】操作开始 -------------
2020-08-25 23:29:30.901 INFO  com.course.server.config.LogAspect                :77   [32mvBVx50Or[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/find-content/D5n6XQsE GET
2020-08-25 23:29:30.901 INFO  com.course.server.config.LogAspect                :78   [32mvBVx50Or[0;39m 类名方法: com.course.business.controller.admin.CourseController.findContent
2020-08-25 23:29:30.901 INFO  com.course.server.config.LogAspect                :79   [32mvBVx50Or[0;39m 远程地址: 192.168.1.4
2020-08-25 23:29:30.901 INFO  com.course.server.config.LogAspect                :97   [32mvBVx50Or[0;39m 请求参数: ["D5n6XQsE"]
2020-08-25 23:29:30.902 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mvBVx50Or[0;39m ==>  Preparing: select id , content from course_content where id = ? 
2020-08-25 23:29:30.902 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mvBVx50Or[0;39m ==> Parameters: D5n6XQsE(String)
2020-08-25 23:29:30.904 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32mvBVx50Or[0;39m <==    Columns: id, content
2020-08-25 23:29:30.905 TRACE c.c.s.m.CourseContentMapper.selectByPrimaryKey    :165  [32mvBVx50Or[0;39m <==        Row: D5n6XQsE, <<BLOB>>
2020-08-25 23:29:30.905 DEBUG c.c.s.m.CourseContentMapper.selectByPrimaryKey    :159  [32mvBVx50Or[0;39m <==      Total: 1
2020-08-25 23:29:30.907 INFO  com.course.server.config.LogAspect                :109  [32mvBVx50Or[0;39m 返回结果: {"content":{"content":"<p style=\"text-align: center; \">eeeeeedddd</p><p style=\"text-align: center; \"><br></p><p style=\"text-align: center; \">dddddd</p><p style=\"text-align: center; \">dd</p>","id":"D5n6XQsE"},"success":true}
2020-08-25 23:29:30.907 INFO  com.course.server.config.LogAspect                :110  [32mvBVx50Or[0;39m ------------- 结束 耗时：7 ms -------------
2020-08-25 23:29:35.941 INFO  com.course.server.config.LogAspect                :76   [32mv10s0Hed[0;39m ------------- 【course】保存开始 -------------
2020-08-25 23:29:35.941 INFO  com.course.server.config.LogAspect                :77   [32mv10s0Hed[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/save-content POST
2020-08-25 23:29:35.941 INFO  com.course.server.config.LogAspect                :78   [32mv10s0Hed[0;39m 类名方法: com.course.business.controller.admin.CourseController.saveContent
2020-08-25 23:29:35.941 INFO  com.course.server.config.LogAspect                :79   [32mv10s0Hed[0;39m 远程地址: 192.168.1.4
2020-08-25 23:29:35.942 INFO  com.course.server.config.LogAspect                :97   [32mv10s0Hed[0;39m 请求参数: [{"content":"<p style=\"text-align: center; \">eeeeeedddd</p><p style=\"text-align: center; \"><br></p><p style=\"text-align: center; \">dddddd</p><p style=\"text-align: center; \">dd</p><p style=\"text-align: center; \">save here</p>","id":"D5n6XQsE"}]
2020-08-25 23:29:35.942 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mv10s0Hed[0;39m ==>  Preparing: update course_content set content = ? where id = ? 
2020-08-25 23:29:35.943 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mv10s0Hed[0;39m ==> Parameters: java.io.StringReader@18198dde(StringReader), D5n6XQsE(String)
2020-08-25 23:29:35.947 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mv10s0Hed[0;39m <==    Updates: 1
2020-08-25 23:29:35.947 INFO  com.course.server.config.LogAspect                :109  [32mv10s0Hed[0;39m 返回结果: {"success":true}
2020-08-25 23:29:35.947 INFO  com.course.server.config.LogAspect                :110  [32mv10s0Hed[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-25 23:29:40.940 INFO  com.course.server.config.LogAspect                :76   [32mHy7iKgyd[0;39m ------------- 【course】保存开始 -------------
2020-08-25 23:29:40.940 INFO  com.course.server.config.LogAspect                :77   [32mHy7iKgyd[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/save-content POST
2020-08-25 23:29:40.940 INFO  com.course.server.config.LogAspect                :78   [32mHy7iKgyd[0;39m 类名方法: com.course.business.controller.admin.CourseController.saveContent
2020-08-25 23:29:40.940 INFO  com.course.server.config.LogAspect                :79   [32mHy7iKgyd[0;39m 远程地址: 192.168.1.4
2020-08-25 23:29:40.941 INFO  com.course.server.config.LogAspect                :97   [32mHy7iKgyd[0;39m 请求参数: [{"content":"<p style=\"text-align: center; \">eeeeeedddd</p><p style=\"text-align: center; \"><br></p><p style=\"text-align: center; \">dddddd</p><p style=\"text-align: center; \">dd</p><p style=\"text-align: center; \">save here</p>","id":"D5n6XQsE"}]
2020-08-25 23:29:40.941 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mHy7iKgyd[0;39m ==>  Preparing: update course_content set content = ? where id = ? 
2020-08-25 23:29:40.941 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mHy7iKgyd[0;39m ==> Parameters: java.io.StringReader@6752720a(StringReader), D5n6XQsE(String)
2020-08-25 23:29:40.943 DEBUG c.c.s.m.C.updateByPrimaryKeyWithBLOBs             :159  [32mHy7iKgyd[0;39m <==    Updates: 1
2020-08-25 23:29:40.944 INFO  com.course.server.config.LogAspect                :109  [32mHy7iKgyd[0;39m 返回结果: {"success":true}
2020-08-25 23:29:40.944 INFO  com.course.server.config.LogAspect                :110  [32mHy7iKgyd[0;39m ------------- 结束 耗时：4 ms -------------
2020-08-25 23:29:48.065 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
