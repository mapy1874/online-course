2020-08-24 00:31:59.353 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 00:32:07.265 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-14 - Thread starvation or clock leap detected (housekeeper delta=36m30s588ms).
2020-08-24 01:39:20.452 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-14 - Thread starvation or clock leap detected (housekeeper delta=1h6m43s160ms).
2020-08-24 03:40:17.771 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-14 - Thread starvation or clock leap detected (housekeeper delta=2h27s312ms).
2020-08-24 05:40:44.913 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-14 - Thread starvation or clock leap detected (housekeeper delta=2h27s142ms).
2020-08-24 07:25:57.420 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-14 - Thread starvation or clock leap detected (housekeeper delta=1h44m42s315ms).
2020-08-24 07:27:19.488 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 08:30:18.982 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-14 - Thread starvation or clock leap detected (housekeeper delta=59m21s491ms).
2020-08-24 08:31:10.988 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 08:36:11.004 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 08:41:11.016 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 08:46:11.029 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 08:51:11.043 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 08:56:11.053 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 09:01:11.059 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 09:06:11.069 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 09:11:11.079 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 09:26:12.244 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-14 - Thread starvation or clock leap detected (housekeeper delta=13m22s776ms).
2020-08-24 09:29:03.863 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 09:34:03.874 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 09:39:03.885 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 09:44:03.896 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 09:49:03.907 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 09:54:03.918 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 09:59:03.929 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 10:03:08.537 INFO  com.course.server.config.LogAspect                :76   [32mZlZba0nr[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:03:08.561 INFO  com.course.server.config.LogAspect                :77   [32mZlZba0nr[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:03:08.561 INFO  com.course.server.config.LogAspect                :78   [32mZlZba0nr[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:03:08.561 INFO  com.course.server.config.LogAspect                :79   [32mZlZba0nr[0;39m 远程地址: 192.168.1.4
2020-08-24 10:03:08.562 INFO  com.course.server.config.LogAspect                :97   [32mZlZba0nr[0;39m 请求参数: []
2020-08-24 10:03:08.606 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mZlZba0nr[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:03:08.635 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mZlZba0nr[0;39m ==> Parameters: 
2020-08-24 10:03:08.662 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:03:08.663 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:03:08.672 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:03:08.673 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:03:08.673 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:03:08.675 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:03:08.676 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:03:08.676 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:03:08.676 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:03:08.677 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:03:08.679 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:03:08.679 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:03:08.679 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:03:08.680 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:03:08.680 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:03:08.680 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:03:08.680 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:03:08.681 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:03:08.681 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:03:08.681 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:03:08.681 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:03:08.682 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:03:08.682 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:03:08.683 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:03:08.683 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:03:08.684 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:03:08.684 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:03:08.685 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:03:08.685 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:03:08.685 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:03:08.686 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:03:08.686 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:03:08.686 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:03:08.686 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:03:08.687 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:03:08.687 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:03:08.687 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:03:08.687 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:03:08.687 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:03:08.688 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:03:08.688 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:03:08.688 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:03:08.688 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:03:08.688 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:03:08.689 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:03:08.689 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:03:08.689 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mZlZba0nr[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:03:08.689 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mZlZba0nr[0;39m <==      Total: 46
2020-08-24 10:03:08.696 INFO  com.course.server.config.LogAspect                :109  [32mZlZba0nr[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:03:08.697 INFO  com.course.server.config.LogAspect                :110  [32mZlZba0nr[0;39m ------------- 结束 耗时：173 ms -------------
2020-08-24 10:03:11.303 INFO  com.course.server.config.LogAspect                :76   [32mydD0VjU3[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:03:11.304 INFO  com.course.server.config.LogAspect                :77   [32mydD0VjU3[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:03:11.304 INFO  com.course.server.config.LogAspect                :78   [32mydD0VjU3[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:03:11.304 INFO  com.course.server.config.LogAspect                :79   [32mydD0VjU3[0;39m 远程地址: 192.168.1.4
2020-08-24 10:03:11.305 INFO  com.course.server.config.LogAspect                :97   [32mydD0VjU3[0;39m 请求参数: []
2020-08-24 10:03:11.306 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mydD0VjU3[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:03:11.307 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mydD0VjU3[0;39m ==> Parameters: 
2020-08-24 10:03:11.307 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:03:11.308 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:03:11.308 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:03:11.308 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:03:11.308 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:03:11.308 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:03:11.309 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:03:11.309 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:03:11.309 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:03:11.309 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:03:11.309 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:03:11.309 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:03:11.310 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:03:11.310 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:03:11.310 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:03:11.310 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:03:11.310 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:03:11.311 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:03:11.311 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:03:11.311 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:03:11.311 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:03:11.311 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:03:11.312 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:03:11.312 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:03:11.312 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:03:11.312 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:03:11.312 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:03:11.312 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:03:11.313 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:03:11.313 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:03:11.313 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:03:11.313 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:03:11.313 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:03:11.313 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:03:11.314 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:03:11.314 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:03:11.314 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:03:11.314 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:03:11.314 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:03:11.314 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:03:11.315 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:03:11.315 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:03:11.315 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:03:11.315 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:03:11.315 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:03:11.315 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:03:11.316 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mydD0VjU3[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:03:11.316 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mydD0VjU3[0;39m <==      Total: 46
2020-08-24 10:03:11.317 INFO  com.course.server.config.LogAspect                :109  [32mydD0VjU3[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:03:11.317 INFO  com.course.server.config.LogAspect                :110  [32mydD0VjU3[0;39m ------------- 结束 耗时：15 ms -------------
2020-08-24 10:03:32.987 INFO  com.course.server.config.LogAspect                :76   [32myXJw5iZj[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:03:32.988 INFO  com.course.server.config.LogAspect                :77   [32myXJw5iZj[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:03:32.988 INFO  com.course.server.config.LogAspect                :78   [32myXJw5iZj[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:03:32.988 INFO  com.course.server.config.LogAspect                :79   [32myXJw5iZj[0;39m 远程地址: 192.168.1.4
2020-08-24 10:03:32.988 INFO  com.course.server.config.LogAspect                :97   [32myXJw5iZj[0;39m 请求参数: []
2020-08-24 10:03:32.989 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32myXJw5iZj[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:03:32.989 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32myXJw5iZj[0;39m ==> Parameters: 
2020-08-24 10:03:32.990 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:03:32.990 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:03:32.990 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:03:32.991 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:03:32.991 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:03:32.991 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:03:32.991 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:03:32.992 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:03:32.992 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:03:32.992 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:03:32.992 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:03:32.992 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:03:32.993 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:03:32.993 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:03:32.993 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:03:32.993 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:03:32.993 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:03:32.994 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:03:32.994 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:03:32.994 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:03:32.994 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:03:32.994 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:03:32.995 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:03:32.995 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:03:32.995 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:03:32.995 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:03:32.995 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:03:32.996 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:03:32.996 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:03:32.996 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:03:32.996 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:03:32.996 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:03:32.997 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:03:32.997 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:03:32.997 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:03:32.997 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:03:32.997 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:03:32.998 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:03:32.998 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:03:32.998 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:03:32.998 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:03:32.998 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:03:32.999 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:03:32.999 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:03:32.999 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:03:32.999 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:03:32.999 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32myXJw5iZj[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:03:32.999 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32myXJw5iZj[0;39m <==      Total: 46
2020-08-24 10:03:33.000 INFO  com.course.server.config.LogAspect                :109  [32myXJw5iZj[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:03:33.000 INFO  com.course.server.config.LogAspect                :110  [32myXJw5iZj[0;39m ------------- 结束 耗时：17 ms -------------
2020-08-24 10:03:34.196 INFO  com.course.server.config.LogAspect                :76   [32mNOjQ9lWI[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:03:34.197 INFO  com.course.server.config.LogAspect                :77   [32mNOjQ9lWI[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:03:34.197 INFO  com.course.server.config.LogAspect                :78   [32mNOjQ9lWI[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:03:34.197 INFO  com.course.server.config.LogAspect                :79   [32mNOjQ9lWI[0;39m 远程地址: 192.168.1.4
2020-08-24 10:03:34.197 INFO  com.course.server.config.LogAspect                :97   [32mNOjQ9lWI[0;39m 请求参数: []
2020-08-24 10:03:34.198 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mNOjQ9lWI[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:03:34.199 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mNOjQ9lWI[0;39m ==> Parameters: 
2020-08-24 10:03:34.199 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:03:34.200 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:03:34.200 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:03:34.200 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:03:34.200 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:03:34.201 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:03:34.201 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:03:34.201 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:03:34.201 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:03:34.201 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:03:34.201 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:03:34.202 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:03:34.202 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:03:34.202 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:03:34.202 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:03:34.202 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:03:34.203 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:03:34.203 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:03:34.203 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:03:34.203 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:03:34.204 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:03:34.204 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:03:34.204 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:03:34.204 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:03:34.204 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:03:34.205 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:03:34.205 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:03:34.205 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:03:34.205 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:03:34.205 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:03:34.206 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:03:34.206 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:03:34.206 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:03:34.206 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:03:34.206 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:03:34.206 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:03:34.207 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:03:34.207 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:03:34.207 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:03:34.207 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:03:34.207 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:03:34.208 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:03:34.208 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:03:34.208 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:03:34.208 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:03:34.208 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:03:34.208 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mNOjQ9lWI[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:03:34.209 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mNOjQ9lWI[0;39m <==      Total: 46
2020-08-24 10:03:34.209 INFO  com.course.server.config.LogAspect                :109  [32mNOjQ9lWI[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:03:34.209 INFO  com.course.server.config.LogAspect                :110  [32mNOjQ9lWI[0;39m ------------- 结束 耗时：14 ms -------------
2020-08-24 10:03:37.722 INFO  com.course.server.config.LogAspect                :76   [32mroTrlzwe[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:03:37.723 INFO  com.course.server.config.LogAspect                :77   [32mroTrlzwe[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:03:37.723 INFO  com.course.server.config.LogAspect                :78   [32mroTrlzwe[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:03:37.723 INFO  com.course.server.config.LogAspect                :79   [32mroTrlzwe[0;39m 远程地址: 192.168.1.4
2020-08-24 10:03:37.723 INFO  com.course.server.config.LogAspect                :97   [32mroTrlzwe[0;39m 请求参数: []
2020-08-24 10:03:37.724 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mroTrlzwe[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:03:37.724 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mroTrlzwe[0;39m ==> Parameters: 
2020-08-24 10:03:37.724 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:03:37.725 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:03:37.725 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:03:37.725 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:03:37.725 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:03:37.725 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:03:37.726 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:03:37.726 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:03:37.726 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:03:37.726 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:03:37.726 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:03:37.727 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:03:37.727 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:03:37.727 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:03:37.727 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:03:37.727 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:03:37.728 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:03:37.728 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:03:37.728 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:03:37.728 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:03:37.728 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:03:37.728 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:03:37.729 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:03:37.729 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:03:37.730 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:03:37.730 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:03:37.730 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:03:37.730 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:03:37.730 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:03:37.731 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:03:37.731 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:03:37.731 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:03:37.731 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:03:37.731 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:03:37.732 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:03:37.732 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:03:37.732 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:03:37.732 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:03:37.732 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:03:37.733 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:03:37.733 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:03:37.733 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:03:37.733 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:03:37.733 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:03:37.733 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:03:37.745 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:03:37.746 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mroTrlzwe[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:03:37.746 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mroTrlzwe[0;39m <==      Total: 46
2020-08-24 10:03:37.747 INFO  com.course.server.config.LogAspect                :109  [32mroTrlzwe[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:03:37.747 INFO  com.course.server.config.LogAspect                :110  [32mroTrlzwe[0;39m ------------- 结束 耗时：25 ms -------------
2020-08-24 10:04:03.899 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 10:07:48.009 INFO  com.course.server.config.LogAspect                :76   [32mqnDmQTSC[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:07:48.010 INFO  com.course.server.config.LogAspect                :77   [32mqnDmQTSC[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:07:48.010 INFO  com.course.server.config.LogAspect                :78   [32mqnDmQTSC[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:07:48.010 INFO  com.course.server.config.LogAspect                :79   [32mqnDmQTSC[0;39m 远程地址: 192.168.1.4
2020-08-24 10:07:48.011 INFO  com.course.server.config.LogAspect                :97   [32mqnDmQTSC[0;39m 请求参数: []
2020-08-24 10:07:48.011 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mqnDmQTSC[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:07:48.011 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mqnDmQTSC[0;39m ==> Parameters: 
2020-08-24 10:07:48.013 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:07:48.013 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:07:48.013 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:07:48.014 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:07:48.014 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:07:48.014 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:07:48.014 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:07:48.014 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:07:48.015 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:07:48.015 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:07:48.015 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:07:48.015 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:07:48.015 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:07:48.015 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:07:48.016 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:07:48.016 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:07:48.016 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:07:48.016 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:07:48.016 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:07:48.016 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:07:48.017 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:07:48.017 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:07:48.017 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:07:48.017 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:07:48.018 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:07:48.018 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:07:48.018 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:07:48.018 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:07:48.018 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:07:48.018 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:07:48.019 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:07:48.019 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:07:48.019 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:07:48.019 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:07:48.019 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:07:48.019 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:07:48.020 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:07:48.020 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:07:48.020 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:07:48.020 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:07:48.020 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:07:48.020 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:07:48.021 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:07:48.021 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:07:48.021 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:07:48.021 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:07:48.021 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqnDmQTSC[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:07:48.021 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mqnDmQTSC[0;39m <==      Total: 46
2020-08-24 10:07:48.022 INFO  com.course.server.config.LogAspect                :109  [32mqnDmQTSC[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:07:48.023 INFO  com.course.server.config.LogAspect                :110  [32mqnDmQTSC[0;39m ------------- 结束 耗时：15 ms -------------
2020-08-24 10:08:05.185 INFO  com.course.server.config.LogAspect                :76   [32mRZOT8yc3[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:08:05.186 INFO  com.course.server.config.LogAspect                :77   [32mRZOT8yc3[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:08:05.186 INFO  com.course.server.config.LogAspect                :78   [32mRZOT8yc3[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:08:05.186 INFO  com.course.server.config.LogAspect                :79   [32mRZOT8yc3[0;39m 远程地址: 192.168.1.4
2020-08-24 10:08:05.187 INFO  com.course.server.config.LogAspect                :97   [32mRZOT8yc3[0;39m 请求参数: []
2020-08-24 10:08:05.187 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mRZOT8yc3[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:08:05.188 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mRZOT8yc3[0;39m ==> Parameters: 
2020-08-24 10:08:05.193 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:08:05.194 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:08:05.194 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:08:05.194 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:08:05.195 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:08:05.196 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:08:05.196 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:08:05.196 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:08:05.197 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:08:05.197 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:08:05.197 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:08:05.197 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:08:05.198 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:08:05.198 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:08:05.198 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:08:05.198 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:08:05.199 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:08:05.199 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:08:05.199 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:08:05.200 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:08:05.200 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:08:05.200 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:08:05.201 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:08:05.201 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:08:05.201 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:08:05.202 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:08:05.202 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:08:05.202 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:08:05.202 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:08:05.203 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:08:05.203 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:08:05.203 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:08:05.203 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:08:05.204 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:08:05.205 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:08:05.205 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:08:05.206 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:08:05.206 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:08:05.206 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:08:05.206 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:08:05.207 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:08:05.207 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:08:05.207 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:08:05.207 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:08:05.208 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:08:05.208 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:08:05.208 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mRZOT8yc3[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:08:05.209 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mRZOT8yc3[0;39m <==      Total: 46
2020-08-24 10:08:05.210 INFO  com.course.server.config.LogAspect                :109  [32mRZOT8yc3[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:08:05.211 INFO  com.course.server.config.LogAspect                :110  [32mRZOT8yc3[0;39m ------------- 结束 耗时：27 ms -------------
2020-08-24 10:08:45.225 INFO  com.course.server.config.LogAspect                :76   [32mDSkRgrt4[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:08:45.225 INFO  com.course.server.config.LogAspect                :77   [32mDSkRgrt4[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:08:45.226 INFO  com.course.server.config.LogAspect                :78   [32mDSkRgrt4[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:08:45.226 INFO  com.course.server.config.LogAspect                :79   [32mDSkRgrt4[0;39m 远程地址: 192.168.1.4
2020-08-24 10:08:45.226 INFO  com.course.server.config.LogAspect                :97   [32mDSkRgrt4[0;39m 请求参数: []
2020-08-24 10:08:45.226 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mDSkRgrt4[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:08:45.227 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mDSkRgrt4[0;39m ==> Parameters: 
2020-08-24 10:08:45.228 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:08:45.228 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:08:45.228 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:08:45.229 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:08:45.229 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:08:45.229 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:08:45.229 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:08:45.230 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:08:45.230 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:08:45.230 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:08:45.231 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:08:45.231 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:08:45.231 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:08:45.232 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:08:45.232 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:08:45.232 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:08:45.232 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:08:45.233 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:08:45.233 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:08:45.233 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:08:45.233 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:08:45.234 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:08:45.234 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:08:45.234 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:08:45.234 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:08:45.235 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:08:45.235 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:08:45.236 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:08:45.236 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:08:45.237 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:08:45.237 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:08:45.237 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:08:45.238 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:08:45.238 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:08:45.239 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:08:45.239 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:08:45.239 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:08:45.240 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:08:45.240 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:08:45.240 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:08:45.241 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:08:45.241 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:08:45.241 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:08:45.242 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:08:45.242 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:08:45.242 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:08:45.243 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDSkRgrt4[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:08:45.243 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mDSkRgrt4[0;39m <==      Total: 46
2020-08-24 10:08:45.246 INFO  com.course.server.config.LogAspect                :109  [32mDSkRgrt4[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:08:45.246 INFO  com.course.server.config.LogAspect                :110  [32mDSkRgrt4[0;39m ------------- 结束 耗时：21 ms -------------
2020-08-24 10:09:03.911 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 10:14:03.923 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 10:19:03.917 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 10:24:03.930 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 10:27:32.990 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-24 10:27:33.000 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598279252999, current=DOWN, previous=UP]
2020-08-24 10:27:33.005 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 10:27:33.045 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 10:27:33.234 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-24 10:27:33.299 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-24 10:27:36.308 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-24 10:27:36.317 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-24 10:27:36.331 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-24 10:27:36.332 INFO  com.zaxxer.hikari.HikariDataSource                :350  [32m        [0;39m HikariPool-14 - Shutdown initiated...
2020-08-24 10:27:36.339 INFO  com.zaxxer.hikari.HikariDataSource                :352  [32m        [0;39m HikariPool-14 - Shutdown completed.
2020-08-24 10:27:38.395 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 10:27:38.427 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 10:27:38.717 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=ec05de87-a8fc-3791-ae1e-6a7579a56e6e
2020-08-24 10:27:38.736 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 10:27:38.745 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 10:27:38.797 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 10:27:38.852 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 10:27:38.852 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 10:27:38.852 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 10:27:38.852 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 10:27:38.863 INFO  o.a.c.c.C.[Tomcat-5].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 10:27:38.863 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 433 ms
2020-08-24 10:27:39.011 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-24 10:27:39.011 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-24 10:27:39.140 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 10:27:39.338 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-24 10:27:39.413 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-24 10:27:39.432 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-24 10:27:39.454 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-24 10:27:39.456 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-24 10:27:39.459 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-24 10:27:39.459 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-24 10:27:39.459 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-24 10:27:39.459 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-24 10:27:39.507 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 10:27:39.508 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-24 10:27:39.508 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-24 10:27:39.508 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-24 10:27:39.508 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-24 10:27:39.508 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-24 10:27:39.509 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-24 10:27:39.509 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-24 10:27:39.516 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-24 10:27:39.516 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-24 10:27:39.516 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-24 10:27:39.518 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598279259518 with initial instances count: 3
2020-08-24 10:27:39.523 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-24 10:27:39.523 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598279259523, current=UP, previous=STARTING]
2020-08-24 10:27:39.526 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 10:27:39.532 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-24 10:27:39.534 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-24 10:27:39.534 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-24 10:27:39.536 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.249 seconds (JVM running for 112567.311)
2020-08-24 10:27:39.538 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 10:27:39.538 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-24 10:27:39.538 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-24 10:27:39.538 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-24 10:29:01.012 INFO  o.a.c.c.C.[Tomcat-5].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-24 10:29:01.012 INFO  org.springframework.web.servlet.DispatcherServlet :525  [32m        [0;39m Initializing Servlet 'dispatcherServlet'
2020-08-24 10:29:01.019 INFO  org.springframework.web.servlet.DispatcherServlet :547  [32m        [0;39m Completed initialization in 7 ms
2020-08-24 10:29:01.031 INFO  com.course.server.config.LogAspect                :76   [32mTwmo1kLW[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:29:01.031 INFO  com.course.server.config.LogAspect                :77   [32mTwmo1kLW[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:29:01.031 INFO  com.course.server.config.LogAspect                :78   [32mTwmo1kLW[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:29:01.032 INFO  com.course.server.config.LogAspect                :79   [32mTwmo1kLW[0;39m 远程地址: 192.168.1.4
2020-08-24 10:29:01.032 INFO  com.course.server.config.LogAspect                :97   [32mTwmo1kLW[0;39m 请求参数: []
2020-08-24 10:29:01.044 INFO  com.zaxxer.hikari.HikariDataSource                :110  [32mTwmo1kLW[0;39m HikariPool-15 - Starting...
2020-08-24 10:29:01.053 INFO  com.zaxxer.hikari.HikariDataSource                :123  [32mTwmo1kLW[0;39m HikariPool-15 - Start completed.
2020-08-24 10:29:01.054 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mTwmo1kLW[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:29:01.054 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mTwmo1kLW[0;39m ==> Parameters: 
2020-08-24 10:29:01.057 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:29:01.057 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:29:01.058 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:29:01.058 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:29:01.058 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:29:01.058 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:29:01.059 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:29:01.059 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:29:01.059 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:29:01.059 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:29:01.059 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:29:01.060 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:29:01.060 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:29:01.060 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:29:01.060 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:29:01.060 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:29:01.061 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:29:01.062 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:29:01.063 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:29:01.063 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:29:01.063 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:29:01.063 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:29:01.064 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:29:01.064 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:29:01.064 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:29:01.064 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:29:01.064 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:29:01.065 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:29:01.065 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:29:01.065 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:29:01.065 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:29:01.065 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:29:01.066 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:29:01.066 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:29:01.066 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:29:01.066 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:29:01.066 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:29:01.067 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:29:01.067 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:29:01.067 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:29:01.067 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:29:01.067 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:29:01.068 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:29:01.068 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:29:01.068 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:29:01.068 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:29:01.068 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mTwmo1kLW[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:29:01.068 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mTwmo1kLW[0;39m <==      Total: 46
2020-08-24 10:29:01.077 INFO  com.course.server.config.LogAspect                :109  [32mTwmo1kLW[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:29:01.077 INFO  com.course.server.config.LogAspect                :110  [32mTwmo1kLW[0;39m ------------- 结束 耗时：56 ms -------------
2020-08-24 10:29:09.355 INFO  com.course.server.config.LogAspect                :76   [32mixrHJRjS[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:29:09.356 INFO  com.course.server.config.LogAspect                :77   [32mixrHJRjS[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:29:09.366 INFO  com.course.server.config.LogAspect                :78   [32mixrHJRjS[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:29:09.366 INFO  com.course.server.config.LogAspect                :79   [32mixrHJRjS[0;39m 远程地址: 192.168.1.4
2020-08-24 10:29:09.367 INFO  com.course.server.config.LogAspect                :97   [32mixrHJRjS[0;39m 请求参数: []
2020-08-24 10:29:09.371 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mixrHJRjS[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:29:09.375 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mixrHJRjS[0;39m ==> Parameters: 
2020-08-24 10:29:09.377 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:29:09.377 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:29:09.378 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:29:09.378 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:29:09.378 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:29:09.379 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:29:09.379 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:29:09.379 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:29:09.379 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:29:09.379 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:29:09.380 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:29:09.380 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:29:09.380 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:29:09.380 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:29:09.381 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:29:09.381 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:29:09.381 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:29:09.381 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:29:09.381 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:29:09.382 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:29:09.382 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:29:09.382 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:29:09.382 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:29:09.383 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:29:09.383 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:29:09.383 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:29:09.383 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:29:09.384 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:29:09.384 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:29:09.384 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:29:09.384 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:29:09.385 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:29:09.385 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:29:09.385 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:29:09.385 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:29:09.385 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:29:09.386 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:29:09.386 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:29:09.386 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:29:09.386 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:29:09.386 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:29:09.387 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:29:09.387 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:29:09.387 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:29:09.387 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:29:09.387 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:29:09.388 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mixrHJRjS[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:29:09.388 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mixrHJRjS[0;39m <==      Total: 46
2020-08-24 10:29:09.389 INFO  com.course.server.config.LogAspect                :109  [32mixrHJRjS[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:29:09.389 INFO  com.course.server.config.LogAspect                :110  [32mixrHJRjS[0;39m ------------- 结束 耗时：34 ms -------------
2020-08-24 10:29:17.782 INFO  com.course.server.config.LogAspect                :76   [32mjFXQ6reQ[0;39m ------------- 【category】保存开始 -------------
2020-08-24 10:29:17.782 INFO  com.course.server.config.LogAspect                :77   [32mjFXQ6reQ[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/save POST
2020-08-24 10:29:17.782 INFO  com.course.server.config.LogAspect                :78   [32mjFXQ6reQ[0;39m 类名方法: com.course.business.controller.admin.CategoryController.save
2020-08-24 10:29:17.782 INFO  com.course.server.config.LogAspect                :79   [32mjFXQ6reQ[0;39m 远程地址: 192.168.1.4
2020-08-24 10:29:17.783 INFO  com.course.server.config.LogAspect                :97   [32mjFXQ6reQ[0;39m 请求参数: [{"name":"test","parent":"00000000","sort":800}]
2020-08-24 10:29:17.784 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32mjFXQ6reQ[0;39m ==>  Preparing: insert into category (id, parent, name, sort ) values (?, ?, ?, ? ) 
2020-08-24 10:29:17.784 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32mjFXQ6reQ[0;39m ==> Parameters: YZ6uoUc3(String), 00000000(String), test(String), 800(Integer)
2020-08-24 10:29:17.790 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32mjFXQ6reQ[0;39m <==    Updates: 1
2020-08-24 10:29:17.790 INFO  com.course.server.config.LogAspect                :109  [32mjFXQ6reQ[0;39m 返回结果: {"content":{"name":"test","parent":"00000000","sort":800},"success":true}
2020-08-24 10:29:17.791 INFO  com.course.server.config.LogAspect                :110  [32mjFXQ6reQ[0;39m ------------- 结束 耗时：9 ms -------------
2020-08-24 10:29:17.834 INFO  com.course.server.config.LogAspect                :76   [32mynxXZsKL[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:29:17.834 INFO  com.course.server.config.LogAspect                :77   [32mynxXZsKL[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:29:17.834 INFO  com.course.server.config.LogAspect                :78   [32mynxXZsKL[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:29:17.834 INFO  com.course.server.config.LogAspect                :79   [32mynxXZsKL[0;39m 远程地址: 192.168.1.4
2020-08-24 10:29:17.834 INFO  com.course.server.config.LogAspect                :97   [32mynxXZsKL[0;39m 请求参数: []
2020-08-24 10:29:17.835 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mynxXZsKL[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:29:17.835 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mynxXZsKL[0;39m ==> Parameters: 
2020-08-24 10:29:17.836 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:29:17.836 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:29:17.836 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:29:17.837 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:29:17.837 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:29:17.837 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:29:17.837 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:29:17.837 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:29:17.838 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:29:17.838 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:29:17.838 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:29:17.838 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:29:17.838 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:29:17.839 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:29:17.839 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:29:17.839 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:29:17.839 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:29:17.839 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:29:17.840 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:29:17.840 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:29:17.840 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:29:17.840 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:29:17.840 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:29:17.841 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:29:17.841 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:29:17.841 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:29:17.841 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:29:17.842 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:29:17.842 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:29:17.842 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:29:17.842 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:29:17.842 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:29:17.843 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:29:17.843 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:29:17.843 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:29:17.843 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:29:17.843 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:29:17.844 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:29:17.844 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:29:17.844 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:29:17.844 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:29:17.844 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:29:17.845 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:29:17.845 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:29:17.845 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:29:17.845 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:29:17.845 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:29:17.846 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mynxXZsKL[0;39m <==        Row: YZ6uoUc3, 00000000, test, 800
2020-08-24 10:29:17.846 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mynxXZsKL[0;39m <==      Total: 47
2020-08-24 10:29:17.847 INFO  com.course.server.config.LogAspect                :109  [32mynxXZsKL[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703},{"id":"YZ6uoUc3","name":"test","parent":"00000000","sort":800}],"success":true}
2020-08-24 10:29:17.848 INFO  com.course.server.config.LogAspect                :110  [32mynxXZsKL[0;39m ------------- 结束 耗时：14 ms -------------
2020-08-24 10:29:30.886 INFO  com.course.server.config.LogAspect                :76   [32m7odpT4cm[0;39m ------------- 【category】保存开始 -------------
2020-08-24 10:29:30.886 INFO  com.course.server.config.LogAspect                :77   [32m7odpT4cm[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/save POST
2020-08-24 10:29:30.886 INFO  com.course.server.config.LogAspect                :78   [32m7odpT4cm[0;39m 类名方法: com.course.business.controller.admin.CategoryController.save
2020-08-24 10:29:30.886 INFO  com.course.server.config.LogAspect                :79   [32m7odpT4cm[0;39m 远程地址: 192.168.1.4
2020-08-24 10:29:30.887 INFO  com.course.server.config.LogAspect                :97   [32m7odpT4cm[0;39m 请求参数: [{"name":"sss","parent":"YZ6uoUc3","sort":101}]
2020-08-24 10:29:30.887 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32m7odpT4cm[0;39m ==>  Preparing: insert into category (id, parent, name, sort ) values (?, ?, ?, ? ) 
2020-08-24 10:29:30.887 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32m7odpT4cm[0;39m ==> Parameters: WLaJGD0V(String), YZ6uoUc3(String), sss(String), 101(Integer)
2020-08-24 10:29:30.889 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32m7odpT4cm[0;39m <==    Updates: 1
2020-08-24 10:29:30.889 INFO  com.course.server.config.LogAspect                :109  [32m7odpT4cm[0;39m 返回结果: {"content":{"name":"sss","parent":"YZ6uoUc3","sort":101},"success":true}
2020-08-24 10:29:30.889 INFO  com.course.server.config.LogAspect                :110  [32m7odpT4cm[0;39m ------------- 结束 耗时：3 ms -------------
2020-08-24 10:29:30.919 INFO  com.course.server.config.LogAspect                :76   [32mWpKB2NDu[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:29:30.920 INFO  com.course.server.config.LogAspect                :77   [32mWpKB2NDu[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:29:30.920 INFO  com.course.server.config.LogAspect                :78   [32mWpKB2NDu[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:29:30.920 INFO  com.course.server.config.LogAspect                :79   [32mWpKB2NDu[0;39m 远程地址: 192.168.1.4
2020-08-24 10:29:30.920 INFO  com.course.server.config.LogAspect                :97   [32mWpKB2NDu[0;39m 请求参数: []
2020-08-24 10:29:30.920 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mWpKB2NDu[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:29:30.921 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mWpKB2NDu[0;39m ==> Parameters: 
2020-08-24 10:29:30.921 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:29:30.922 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:29:30.922 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:29:30.922 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: WLaJGD0V, YZ6uoUc3, sss, 101
2020-08-24 10:29:30.922 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:29:30.922 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:29:30.923 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:29:30.923 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:29:30.923 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:29:30.923 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:29:30.923 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:29:30.924 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:29:30.924 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:29:30.924 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:29:30.924 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:29:30.924 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:29:30.925 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:29:30.925 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:29:30.925 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:29:30.925 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:29:30.925 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:29:30.926 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:29:30.926 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:29:30.926 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:29:30.926 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:29:30.926 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:29:30.927 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:29:30.927 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:29:30.927 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:29:30.927 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:29:30.927 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:29:30.928 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:29:30.928 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:29:30.928 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:29:30.928 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:29:30.928 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:29:30.929 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:29:30.929 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:29:30.929 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:29:30.929 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:29:30.929 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:29:30.930 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:29:30.930 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:29:30.930 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:29:30.930 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:29:30.930 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:29:30.931 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:29:30.931 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:29:30.931 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mWpKB2NDu[0;39m <==        Row: YZ6uoUc3, 00000000, test, 800
2020-08-24 10:29:30.931 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mWpKB2NDu[0;39m <==      Total: 48
2020-08-24 10:29:30.932 INFO  com.course.server.config.LogAspect                :109  [32mWpKB2NDu[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"WLaJGD0V","name":"sss","parent":"YZ6uoUc3","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703},{"id":"YZ6uoUc3","name":"test","parent":"00000000","sort":800}],"success":true}
2020-08-24 10:29:30.932 INFO  com.course.server.config.LogAspect                :110  [32mWpKB2NDu[0;39m ------------- 结束 耗时：13 ms -------------
2020-08-24 10:29:47.882 INFO  com.course.server.config.LogAspect                :76   [32mtko101HS[0;39m ------------- 【category】保存开始 -------------
2020-08-24 10:29:47.882 INFO  com.course.server.config.LogAspect                :77   [32mtko101HS[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/save POST
2020-08-24 10:29:47.882 INFO  com.course.server.config.LogAspect                :78   [32mtko101HS[0;39m 类名方法: com.course.business.controller.admin.CategoryController.save
2020-08-24 10:29:47.883 INFO  com.course.server.config.LogAspect                :79   [32mtko101HS[0;39m 远程地址: 192.168.1.4
2020-08-24 10:29:47.883 INFO  com.course.server.config.LogAspect                :97   [32mtko101HS[0;39m 请求参数: [{"id":"WLaJGD0V","name":"sss","parent":"YZ6uoUc3","sort":801}]
2020-08-24 10:29:47.883 DEBUG c.c.s.mapper.CategoryMapper.updateByPrimaryKey    :159  [32mtko101HS[0;39m ==>  Preparing: update category set parent = ?, name = ?, sort = ? where id = ? 
2020-08-24 10:29:47.884 DEBUG c.c.s.mapper.CategoryMapper.updateByPrimaryKey    :159  [32mtko101HS[0;39m ==> Parameters: YZ6uoUc3(String), sss(String), 801(Integer), WLaJGD0V(String)
2020-08-24 10:29:47.886 DEBUG c.c.s.mapper.CategoryMapper.updateByPrimaryKey    :159  [32mtko101HS[0;39m <==    Updates: 1
2020-08-24 10:29:47.886 INFO  com.course.server.config.LogAspect                :109  [32mtko101HS[0;39m 返回结果: {"content":{"id":"WLaJGD0V","name":"sss","parent":"YZ6uoUc3","sort":801},"success":true}
2020-08-24 10:29:47.887 INFO  com.course.server.config.LogAspect                :110  [32mtko101HS[0;39m ------------- 结束 耗时：5 ms -------------
2020-08-24 10:29:47.917 INFO  com.course.server.config.LogAspect                :76   [32moOFwH5iU[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:29:47.917 INFO  com.course.server.config.LogAspect                :77   [32moOFwH5iU[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:29:47.917 INFO  com.course.server.config.LogAspect                :78   [32moOFwH5iU[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:29:47.918 INFO  com.course.server.config.LogAspect                :79   [32moOFwH5iU[0;39m 远程地址: 192.168.1.4
2020-08-24 10:29:47.918 INFO  com.course.server.config.LogAspect                :97   [32moOFwH5iU[0;39m 请求参数: []
2020-08-24 10:29:47.918 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32moOFwH5iU[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:29:47.918 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32moOFwH5iU[0;39m ==> Parameters: 
2020-08-24 10:29:47.919 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:29:47.919 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:29:47.920 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:29:47.920 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:29:47.920 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:29:47.921 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:29:47.921 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:29:47.921 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:29:47.921 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:29:47.921 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:29:47.922 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:29:47.922 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:29:47.922 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:29:47.922 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:29:47.922 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:29:47.923 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:29:47.923 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:29:47.923 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:29:47.923 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:29:47.924 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:29:47.924 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:29:47.924 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:29:47.924 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:29:47.925 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:29:47.925 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:29:47.925 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:29:47.925 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:29:47.925 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:29:47.926 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:29:47.926 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:29:47.926 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:29:47.926 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:29:47.926 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:29:47.927 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:29:47.927 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:29:47.927 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:29:47.927 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:29:47.927 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:29:47.928 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:29:47.928 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:29:47.928 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:29:47.928 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:29:47.928 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:29:47.929 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:29:47.929 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:29:47.929 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:29:47.929 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:29:47.929 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: YZ6uoUc3, 00000000, test, 800
2020-08-24 10:29:47.930 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32moOFwH5iU[0;39m <==        Row: WLaJGD0V, YZ6uoUc3, sss, 801
2020-08-24 10:29:47.930 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32moOFwH5iU[0;39m <==      Total: 48
2020-08-24 10:29:47.930 INFO  com.course.server.config.LogAspect                :109  [32moOFwH5iU[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703},{"id":"YZ6uoUc3","name":"test","parent":"00000000","sort":800},{"id":"WLaJGD0V","name":"sss","parent":"YZ6uoUc3","sort":801}],"success":true}
2020-08-24 10:29:47.931 INFO  com.course.server.config.LogAspect                :110  [32moOFwH5iU[0;39m ------------- 结束 耗时：14 ms -------------
2020-08-24 10:30:01.906 INFO  com.course.server.config.LogAspect                :76   [32mEnvHveKb[0;39m ------------- 【category】保存开始 -------------
2020-08-24 10:30:01.906 INFO  com.course.server.config.LogAspect                :77   [32mEnvHveKb[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/save POST
2020-08-24 10:30:01.906 INFO  com.course.server.config.LogAspect                :78   [32mEnvHveKb[0;39m 类名方法: com.course.business.controller.admin.CategoryController.save
2020-08-24 10:30:01.906 INFO  com.course.server.config.LogAspect                :79   [32mEnvHveKb[0;39m 远程地址: 192.168.1.4
2020-08-24 10:30:01.906 INFO  com.course.server.config.LogAspect                :97   [32mEnvHveKb[0;39m 请求参数: [{"name":"test2","parent":"YZ6uoUc3","sort":802}]
2020-08-24 10:30:01.907 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32mEnvHveKb[0;39m ==>  Preparing: insert into category (id, parent, name, sort ) values (?, ?, ?, ? ) 
2020-08-24 10:30:01.907 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32mEnvHveKb[0;39m ==> Parameters: ysgwcgIP(String), YZ6uoUc3(String), test2(String), 802(Integer)
2020-08-24 10:30:01.909 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32mEnvHveKb[0;39m <==    Updates: 1
2020-08-24 10:30:01.909 INFO  com.course.server.config.LogAspect                :109  [32mEnvHveKb[0;39m 返回结果: {"content":{"name":"test2","parent":"YZ6uoUc3","sort":802},"success":true}
2020-08-24 10:30:01.909 INFO  com.course.server.config.LogAspect                :110  [32mEnvHveKb[0;39m ------------- 结束 耗时：3 ms -------------
2020-08-24 10:30:01.935 INFO  com.course.server.config.LogAspect                :76   [32mbabEcFRD[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:30:01.935 INFO  com.course.server.config.LogAspect                :77   [32mbabEcFRD[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:30:01.936 INFO  com.course.server.config.LogAspect                :78   [32mbabEcFRD[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:30:01.936 INFO  com.course.server.config.LogAspect                :79   [32mbabEcFRD[0;39m 远程地址: 192.168.1.4
2020-08-24 10:30:01.936 INFO  com.course.server.config.LogAspect                :97   [32mbabEcFRD[0;39m 请求参数: []
2020-08-24 10:30:01.937 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mbabEcFRD[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:30:01.937 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mbabEcFRD[0;39m ==> Parameters: 
2020-08-24 10:30:01.941 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:30:01.941 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:30:01.942 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:30:01.942 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:30:01.942 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:30:01.942 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:30:01.943 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:30:01.943 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:30:01.943 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:30:01.943 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:30:01.943 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:30:01.944 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:30:01.944 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:30:01.944 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:30:01.944 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:30:01.944 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:30:01.945 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:30:01.945 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:30:01.945 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:30:01.945 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:30:01.945 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:30:01.946 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:30:01.946 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:30:01.946 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:30:01.946 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:30:01.946 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:30:01.947 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:30:01.947 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:30:01.947 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:30:01.947 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:30:01.947 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:30:01.948 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:30:01.948 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:30:01.948 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:30:01.948 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:30:01.948 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:30:01.949 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:30:01.949 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:30:01.949 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:30:01.949 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:30:01.949 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:30:01.950 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:30:01.950 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:30:01.950 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:30:01.950 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:30:01.950 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:30:01.950 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:30:01.951 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: YZ6uoUc3, 00000000, test, 800
2020-08-24 10:30:01.951 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: WLaJGD0V, YZ6uoUc3, sss, 801
2020-08-24 10:30:01.951 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mbabEcFRD[0;39m <==        Row: ysgwcgIP, YZ6uoUc3, test2, 802
2020-08-24 10:30:01.951 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mbabEcFRD[0;39m <==      Total: 49
2020-08-24 10:30:01.952 INFO  com.course.server.config.LogAspect                :109  [32mbabEcFRD[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703},{"id":"YZ6uoUc3","name":"test","parent":"00000000","sort":800},{"id":"WLaJGD0V","name":"sss","parent":"YZ6uoUc3","sort":801},{"id":"ysgwcgIP","name":"test2","parent":"YZ6uoUc3","sort":802}],"success":true}
2020-08-24 10:30:01.952 INFO  com.course.server.config.LogAspect                :110  [32mbabEcFRD[0;39m ------------- 结束 耗时：17 ms -------------
2020-08-24 10:30:06.397 INFO  com.course.server.config.LogAspect                :76   [32mCeZ01Mz7[0;39m ------------- 【category】删除开始 -------------
2020-08-24 10:30:06.397 INFO  com.course.server.config.LogAspect                :77   [32mCeZ01Mz7[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/delete/ysgwcgIP DELETE
2020-08-24 10:30:06.397 INFO  com.course.server.config.LogAspect                :78   [32mCeZ01Mz7[0;39m 类名方法: com.course.business.controller.admin.CategoryController.delete
2020-08-24 10:30:06.397 INFO  com.course.server.config.LogAspect                :79   [32mCeZ01Mz7[0;39m 远程地址: 192.168.1.4
2020-08-24 10:30:06.397 INFO  com.course.server.config.LogAspect                :97   [32mCeZ01Mz7[0;39m 请求参数: ["ysgwcgIP"]
2020-08-24 10:30:06.398 DEBUG c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :159  [32mCeZ01Mz7[0;39m ==>  Preparing: select id, parent, name, sort from category where id = ? 
2020-08-24 10:30:06.399 DEBUG c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :159  [32mCeZ01Mz7[0;39m ==> Parameters: ysgwcgIP(String)
2020-08-24 10:30:06.399 TRACE c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :165  [32mCeZ01Mz7[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:30:06.399 TRACE c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :165  [32mCeZ01Mz7[0;39m <==        Row: ysgwcgIP, YZ6uoUc3, test2, 802
2020-08-24 10:30:06.400 DEBUG c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :159  [32mCeZ01Mz7[0;39m <==      Total: 1
2020-08-24 10:30:06.400 DEBUG c.c.s.mapper.CategoryMapper.deleteByPrimaryKey    :159  [32mCeZ01Mz7[0;39m ==>  Preparing: delete from category where id = ? 
2020-08-24 10:30:06.400 DEBUG c.c.s.mapper.CategoryMapper.deleteByPrimaryKey    :159  [32mCeZ01Mz7[0;39m ==> Parameters: ysgwcgIP(String)
2020-08-24 10:30:06.401 DEBUG c.c.s.mapper.CategoryMapper.deleteByPrimaryKey    :159  [32mCeZ01Mz7[0;39m <==    Updates: 1
2020-08-24 10:30:06.402 INFO  com.course.server.config.LogAspect                :109  [32mCeZ01Mz7[0;39m 返回结果: {"success":true}
2020-08-24 10:30:06.402 INFO  com.course.server.config.LogAspect                :110  [32mCeZ01Mz7[0;39m ------------- 结束 耗时：5 ms -------------
2020-08-24 10:30:06.437 INFO  com.course.server.config.LogAspect                :76   [32mGdS8GQxW[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:30:06.437 INFO  com.course.server.config.LogAspect                :77   [32mGdS8GQxW[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:30:06.437 INFO  com.course.server.config.LogAspect                :78   [32mGdS8GQxW[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:30:06.438 INFO  com.course.server.config.LogAspect                :79   [32mGdS8GQxW[0;39m 远程地址: 192.168.1.4
2020-08-24 10:30:06.438 INFO  com.course.server.config.LogAspect                :97   [32mGdS8GQxW[0;39m 请求参数: []
2020-08-24 10:30:06.438 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mGdS8GQxW[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:30:06.439 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mGdS8GQxW[0;39m ==> Parameters: 
2020-08-24 10:30:06.439 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:30:06.440 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:30:06.440 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:30:06.440 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:30:06.440 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:30:06.441 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:30:06.441 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:30:06.441 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:30:06.441 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:30:06.442 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:30:06.442 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:30:06.442 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:30:06.442 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:30:06.442 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:30:06.443 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:30:06.443 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:30:06.443 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:30:06.443 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:30:06.444 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:30:06.444 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:30:06.444 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:30:06.444 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:30:06.444 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:30:06.445 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:30:06.445 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:30:06.445 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:30:06.445 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:30:06.445 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:30:06.445 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:30:06.446 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:30:06.446 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:30:06.446 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:30:06.446 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:30:06.447 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:30:06.447 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:30:06.447 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:30:06.447 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:30:06.447 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:30:06.447 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:30:06.448 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:30:06.448 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:30:06.448 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:30:06.448 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:30:06.449 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:30:06.449 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:30:06.449 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:30:06.449 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:30:06.450 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: YZ6uoUc3, 00000000, test, 800
2020-08-24 10:30:06.450 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mGdS8GQxW[0;39m <==        Row: WLaJGD0V, YZ6uoUc3, sss, 801
2020-08-24 10:30:06.450 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mGdS8GQxW[0;39m <==      Total: 48
2020-08-24 10:30:06.451 INFO  com.course.server.config.LogAspect                :109  [32mGdS8GQxW[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703},{"id":"YZ6uoUc3","name":"test","parent":"00000000","sort":800},{"id":"WLaJGD0V","name":"sss","parent":"YZ6uoUc3","sort":801}],"success":true}
2020-08-24 10:30:06.451 INFO  com.course.server.config.LogAspect                :110  [32mGdS8GQxW[0;39m ------------- 结束 耗时：14 ms -------------
2020-08-24 10:30:10.827 INFO  com.course.server.config.LogAspect                :76   [32mPftRmqnO[0;39m ------------- 【category】删除开始 -------------
2020-08-24 10:30:10.827 INFO  com.course.server.config.LogAspect                :77   [32mPftRmqnO[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/delete/YZ6uoUc3 DELETE
2020-08-24 10:30:10.827 INFO  com.course.server.config.LogAspect                :78   [32mPftRmqnO[0;39m 类名方法: com.course.business.controller.admin.CategoryController.delete
2020-08-24 10:30:10.828 INFO  com.course.server.config.LogAspect                :79   [32mPftRmqnO[0;39m 远程地址: 192.168.1.4
2020-08-24 10:30:10.828 INFO  com.course.server.config.LogAspect                :97   [32mPftRmqnO[0;39m 请求参数: ["YZ6uoUc3"]
2020-08-24 10:30:10.828 DEBUG c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :159  [32mPftRmqnO[0;39m ==>  Preparing: select id, parent, name, sort from category where id = ? 
2020-08-24 10:30:10.829 DEBUG c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :159  [32mPftRmqnO[0;39m ==> Parameters: YZ6uoUc3(String)
2020-08-24 10:30:10.829 TRACE c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :165  [32mPftRmqnO[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:30:10.830 TRACE c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :165  [32mPftRmqnO[0;39m <==        Row: YZ6uoUc3, 00000000, test, 800
2020-08-24 10:30:10.830 DEBUG c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :159  [32mPftRmqnO[0;39m <==      Total: 1
2020-08-24 10:30:10.833 DEBUG c.c.server.mapper.CategoryMapper.deleteByExample  :159  [32mPftRmqnO[0;39m ==>  Preparing: delete from category WHERE ( parent = ? ) 
2020-08-24 10:30:10.833 DEBUG c.c.server.mapper.CategoryMapper.deleteByExample  :159  [32mPftRmqnO[0;39m ==> Parameters: YZ6uoUc3(String)
2020-08-24 10:30:10.834 DEBUG c.c.server.mapper.CategoryMapper.deleteByExample  :159  [32mPftRmqnO[0;39m <==    Updates: 1
2020-08-24 10:30:10.835 DEBUG c.c.s.mapper.CategoryMapper.deleteByPrimaryKey    :159  [32mPftRmqnO[0;39m ==>  Preparing: delete from category where id = ? 
2020-08-24 10:30:10.835 DEBUG c.c.s.mapper.CategoryMapper.deleteByPrimaryKey    :159  [32mPftRmqnO[0;39m ==> Parameters: YZ6uoUc3(String)
2020-08-24 10:30:10.835 DEBUG c.c.s.mapper.CategoryMapper.deleteByPrimaryKey    :159  [32mPftRmqnO[0;39m <==    Updates: 1
2020-08-24 10:30:10.836 INFO  com.course.server.config.LogAspect                :109  [32mPftRmqnO[0;39m 返回结果: {"success":true}
2020-08-24 10:30:10.836 INFO  com.course.server.config.LogAspect                :110  [32mPftRmqnO[0;39m ------------- 结束 耗时：9 ms -------------
2020-08-24 10:30:10.878 INFO  com.course.server.config.LogAspect                :76   [32m3Iz28prl[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:30:10.879 INFO  com.course.server.config.LogAspect                :77   [32m3Iz28prl[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:30:10.879 INFO  com.course.server.config.LogAspect                :78   [32m3Iz28prl[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:30:10.879 INFO  com.course.server.config.LogAspect                :79   [32m3Iz28prl[0;39m 远程地址: 192.168.1.4
2020-08-24 10:30:10.879 INFO  com.course.server.config.LogAspect                :97   [32m3Iz28prl[0;39m 请求参数: []
2020-08-24 10:30:10.879 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m3Iz28prl[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:30:10.880 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m3Iz28prl[0;39m ==> Parameters: 
2020-08-24 10:30:10.880 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:30:10.881 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:30:10.881 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:30:10.881 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:30:10.881 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:30:10.881 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:30:10.882 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:30:10.882 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:30:10.882 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:30:10.882 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:30:10.883 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:30:10.883 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:30:10.883 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:30:10.883 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:30:10.884 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:30:10.884 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:30:10.884 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:30:10.884 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:30:10.884 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:30:10.885 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:30:10.885 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:30:10.885 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:30:10.885 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:30:10.885 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:30:10.886 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:30:10.886 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:30:10.886 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:30:10.886 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:30:10.887 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:30:10.887 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:30:10.887 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:30:10.887 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:30:10.887 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:30:10.888 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:30:10.888 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:30:10.888 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:30:10.888 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:30:10.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:30:10.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:30:10.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:30:10.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:30:10.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:30:10.890 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:30:10.890 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:30:10.890 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:30:10.890 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:30:10.891 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m3Iz28prl[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:30:10.891 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m3Iz28prl[0;39m <==      Total: 46
2020-08-24 10:30:10.891 INFO  com.course.server.config.LogAspect                :109  [32m3Iz28prl[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:30:10.892 INFO  com.course.server.config.LogAspect                :110  [32m3Iz28prl[0;39m ------------- 结束 耗时：14 ms -------------
2020-08-24 10:30:14.257 INFO  com.course.server.config.LogAspect                :76   [32meLJMDjUK[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:30:14.257 INFO  com.course.server.config.LogAspect                :77   [32meLJMDjUK[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:30:14.257 INFO  com.course.server.config.LogAspect                :78   [32meLJMDjUK[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:30:14.258 INFO  com.course.server.config.LogAspect                :79   [32meLJMDjUK[0;39m 远程地址: 192.168.1.4
2020-08-24 10:30:14.258 INFO  com.course.server.config.LogAspect                :97   [32meLJMDjUK[0;39m 请求参数: []
2020-08-24 10:30:14.259 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32meLJMDjUK[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:30:14.260 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32meLJMDjUK[0;39m ==> Parameters: 
2020-08-24 10:30:14.261 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:30:14.261 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:30:14.264 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:30:14.265 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:30:14.265 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:30:14.265 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:30:14.265 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:30:14.266 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:30:14.266 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:30:14.266 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:30:14.267 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:30:14.267 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:30:14.267 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:30:14.267 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:30:14.267 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:30:14.268 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:30:14.268 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:30:14.268 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:30:14.268 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:30:14.268 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:30:14.269 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:30:14.269 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:30:14.269 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:30:14.269 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:30:14.269 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:30:14.270 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:30:14.270 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:30:14.270 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:30:14.270 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:30:14.270 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:30:14.271 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:30:14.271 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:30:14.271 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:30:14.271 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:30:14.271 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:30:14.272 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:30:14.272 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:30:14.272 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:30:14.272 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:30:14.272 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:30:14.273 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:30:14.273 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:30:14.273 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:30:14.273 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:30:14.273 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:30:14.274 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:30:14.274 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32meLJMDjUK[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:30:14.274 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32meLJMDjUK[0;39m <==      Total: 46
2020-08-24 10:30:14.275 INFO  com.course.server.config.LogAspect                :109  [32meLJMDjUK[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:30:14.275 INFO  com.course.server.config.LogAspect                :110  [32meLJMDjUK[0;39m ------------- 结束 耗时：18 ms -------------
2020-08-24 10:32:39.518 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 10:35:03.636 INFO  com.course.server.config.LogAspect                :76   [32mtrw9djkh[0;39m ------------- 【category】保存开始 -------------
2020-08-24 10:35:03.636 INFO  com.course.server.config.LogAspect                :77   [32mtrw9djkh[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/save POST
2020-08-24 10:35:03.637 INFO  com.course.server.config.LogAspect                :78   [32mtrw9djkh[0;39m 类名方法: com.course.business.controller.admin.CategoryController.save
2020-08-24 10:35:03.637 INFO  com.course.server.config.LogAspect                :79   [32mtrw9djkh[0;39m 远程地址: 192.168.1.4
2020-08-24 10:35:03.637 INFO  com.course.server.config.LogAspect                :97   [32mtrw9djkh[0;39m 请求参数: [{"name":"test","parent":"00000000"}]
2020-08-24 10:35:03.637 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32mtrw9djkh[0;39m ==>  Preparing: insert into category (id, parent, name, sort ) values (?, ?, ?, ? ) 
2020-08-24 10:35:03.638 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32mtrw9djkh[0;39m ==> Parameters: NQ9Fr1Pe(String), 00000000(String), test(String), null
2020-08-24 10:35:03.640 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32mtrw9djkh[0;39m <==    Updates: 1
2020-08-24 10:35:03.641 INFO  com.course.server.config.LogAspect                :109  [32mtrw9djkh[0;39m 返回结果: {"content":{"name":"test","parent":"00000000"},"success":true}
2020-08-24 10:35:03.641 INFO  com.course.server.config.LogAspect                :110  [32mtrw9djkh[0;39m ------------- 结束 耗时：5 ms -------------
2020-08-24 10:35:03.680 INFO  com.course.server.config.LogAspect                :76   [32mBHFHPiyt[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:35:03.681 INFO  com.course.server.config.LogAspect                :77   [32mBHFHPiyt[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:35:03.681 INFO  com.course.server.config.LogAspect                :78   [32mBHFHPiyt[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:35:03.681 INFO  com.course.server.config.LogAspect                :79   [32mBHFHPiyt[0;39m 远程地址: 192.168.1.4
2020-08-24 10:35:03.681 INFO  com.course.server.config.LogAspect                :97   [32mBHFHPiyt[0;39m 请求参数: []
2020-08-24 10:35:03.682 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mBHFHPiyt[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:35:03.682 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mBHFHPiyt[0;39m ==> Parameters: 
2020-08-24 10:35:03.682 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:35:03.683 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: NQ9Fr1Pe, 00000000, test, null
2020-08-24 10:35:03.683 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:35:03.683 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:35:03.684 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:35:03.684 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:35:03.684 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:35:03.684 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:35:03.684 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:35:03.685 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:35:03.685 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:35:03.685 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:35:03.685 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:35:03.685 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:35:03.686 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:35:03.686 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:35:03.686 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:35:03.686 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:35:03.686 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:35:03.687 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:35:03.687 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:35:03.687 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:35:03.687 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:35:03.687 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:35:03.688 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:35:03.688 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:35:03.688 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:35:03.688 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:35:03.688 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:35:03.689 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:35:03.689 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:35:03.689 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:35:03.689 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:35:03.689 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:35:03.690 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:35:03.690 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:35:03.690 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:35:03.690 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:35:03.690 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:35:03.691 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:35:03.691 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:35:03.691 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:35:03.691 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:35:03.691 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:35:03.692 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:35:03.692 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:35:03.692 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:35:03.692 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mBHFHPiyt[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:35:03.692 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mBHFHPiyt[0;39m <==      Total: 47
2020-08-24 10:35:03.693 INFO  com.course.server.config.LogAspect                :109  [32mBHFHPiyt[0;39m 返回结果: {"content":[{"id":"NQ9Fr1Pe","name":"test","parent":"00000000"},{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:35:03.693 INFO  com.course.server.config.LogAspect                :110  [32mBHFHPiyt[0;39m ------------- 结束 耗时：13 ms -------------
2020-08-24 10:35:12.751 INFO  com.course.server.config.LogAspect                :76   [32m4YmPcVHl[0;39m ------------- 【category】保存开始 -------------
2020-08-24 10:35:12.751 INFO  com.course.server.config.LogAspect                :77   [32m4YmPcVHl[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/save POST
2020-08-24 10:35:12.751 INFO  com.course.server.config.LogAspect                :78   [32m4YmPcVHl[0;39m 类名方法: com.course.business.controller.admin.CategoryController.save
2020-08-24 10:35:12.752 INFO  com.course.server.config.LogAspect                :79   [32m4YmPcVHl[0;39m 远程地址: 192.168.1.4
2020-08-24 10:35:12.752 INFO  com.course.server.config.LogAspect                :97   [32m4YmPcVHl[0;39m 请求参数: [{"name":"tew1","parent":"NQ9Fr1Pe","sort":1}]
2020-08-24 10:35:12.752 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32m4YmPcVHl[0;39m ==>  Preparing: insert into category (id, parent, name, sort ) values (?, ?, ?, ? ) 
2020-08-24 10:35:12.753 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32m4YmPcVHl[0;39m ==> Parameters: 4bWTl1wa(String), NQ9Fr1Pe(String), tew1(String), 1(Integer)
2020-08-24 10:35:12.753 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32m4YmPcVHl[0;39m <==    Updates: 1
2020-08-24 10:35:12.754 INFO  com.course.server.config.LogAspect                :109  [32m4YmPcVHl[0;39m 返回结果: {"content":{"name":"tew1","parent":"NQ9Fr1Pe","sort":1},"success":true}
2020-08-24 10:35:12.754 INFO  com.course.server.config.LogAspect                :110  [32m4YmPcVHl[0;39m ------------- 结束 耗时：3 ms -------------
2020-08-24 10:35:12.783 INFO  com.course.server.config.LogAspect                :76   [32mIajqezOs[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:35:12.784 INFO  com.course.server.config.LogAspect                :77   [32mIajqezOs[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:35:12.784 INFO  com.course.server.config.LogAspect                :78   [32mIajqezOs[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:35:12.784 INFO  com.course.server.config.LogAspect                :79   [32mIajqezOs[0;39m 远程地址: 192.168.1.4
2020-08-24 10:35:12.784 INFO  com.course.server.config.LogAspect                :97   [32mIajqezOs[0;39m 请求参数: []
2020-08-24 10:35:12.785 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mIajqezOs[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:35:12.785 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mIajqezOs[0;39m ==> Parameters: 
2020-08-24 10:35:12.785 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:35:12.786 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: NQ9Fr1Pe, 00000000, test, null
2020-08-24 10:35:12.786 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 4bWTl1wa, NQ9Fr1Pe, tew1, 1
2020-08-24 10:35:12.786 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:35:12.786 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:35:12.786 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:35:12.787 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:35:12.787 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:35:12.787 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:35:12.787 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:35:12.787 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:35:12.788 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:35:12.788 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:35:12.788 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:35:12.788 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:35:12.788 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:35:12.789 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:35:12.789 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:35:12.789 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:35:12.789 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:35:12.789 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:35:12.790 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:35:12.790 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:35:12.790 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:35:12.790 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:35:12.790 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:35:12.791 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:35:12.791 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:35:12.791 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:35:12.791 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:35:12.791 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:35:12.792 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:35:12.792 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:35:12.792 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:35:12.792 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:35:12.792 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:35:12.793 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:35:12.793 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:35:12.793 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:35:12.793 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:35:12.793 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:35:12.794 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:35:12.794 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:35:12.794 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:35:12.794 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:35:12.794 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:35:12.795 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:35:12.795 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:35:12.795 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mIajqezOs[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:35:12.795 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mIajqezOs[0;39m <==      Total: 48
2020-08-24 10:35:12.796 INFO  com.course.server.config.LogAspect                :109  [32mIajqezOs[0;39m 返回结果: {"content":[{"id":"NQ9Fr1Pe","name":"test","parent":"00000000"},{"id":"4bWTl1wa","name":"tew1","parent":"NQ9Fr1Pe","sort":1},{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:35:12.796 INFO  com.course.server.config.LogAspect                :110  [32mIajqezOs[0;39m ------------- 结束 耗时：13 ms -------------
2020-08-24 10:35:19.708 INFO  com.course.server.config.LogAspect                :76   [32mN1aVhiyq[0;39m ------------- 【category】删除开始 -------------
2020-08-24 10:35:19.708 INFO  com.course.server.config.LogAspect                :77   [32mN1aVhiyq[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/delete/4bWTl1wa DELETE
2020-08-24 10:35:19.708 INFO  com.course.server.config.LogAspect                :78   [32mN1aVhiyq[0;39m 类名方法: com.course.business.controller.admin.CategoryController.delete
2020-08-24 10:35:19.708 INFO  com.course.server.config.LogAspect                :79   [32mN1aVhiyq[0;39m 远程地址: 192.168.1.4
2020-08-24 10:35:19.708 INFO  com.course.server.config.LogAspect                :97   [32mN1aVhiyq[0;39m 请求参数: ["4bWTl1wa"]
2020-08-24 10:35:19.709 DEBUG c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :159  [32mN1aVhiyq[0;39m ==>  Preparing: select id, parent, name, sort from category where id = ? 
2020-08-24 10:35:19.709 DEBUG c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :159  [32mN1aVhiyq[0;39m ==> Parameters: 4bWTl1wa(String)
2020-08-24 10:35:19.710 TRACE c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :165  [32mN1aVhiyq[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:35:19.710 TRACE c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :165  [32mN1aVhiyq[0;39m <==        Row: 4bWTl1wa, NQ9Fr1Pe, tew1, 1
2020-08-24 10:35:19.710 DEBUG c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :159  [32mN1aVhiyq[0;39m <==      Total: 1
2020-08-24 10:35:19.711 DEBUG c.c.s.mapper.CategoryMapper.deleteByPrimaryKey    :159  [32mN1aVhiyq[0;39m ==>  Preparing: delete from category where id = ? 
2020-08-24 10:35:19.711 DEBUG c.c.s.mapper.CategoryMapper.deleteByPrimaryKey    :159  [32mN1aVhiyq[0;39m ==> Parameters: 4bWTl1wa(String)
2020-08-24 10:35:19.712 DEBUG c.c.s.mapper.CategoryMapper.deleteByPrimaryKey    :159  [32mN1aVhiyq[0;39m <==    Updates: 1
2020-08-24 10:35:19.712 INFO  com.course.server.config.LogAspect                :109  [32mN1aVhiyq[0;39m 返回结果: {"success":true}
2020-08-24 10:35:19.713 INFO  com.course.server.config.LogAspect                :110  [32mN1aVhiyq[0;39m ------------- 结束 耗时：5 ms -------------
2020-08-24 10:35:19.749 INFO  com.course.server.config.LogAspect                :76   [32muLv40La2[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:35:19.749 INFO  com.course.server.config.LogAspect                :77   [32muLv40La2[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:35:19.750 INFO  com.course.server.config.LogAspect                :78   [32muLv40La2[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:35:19.750 INFO  com.course.server.config.LogAspect                :79   [32muLv40La2[0;39m 远程地址: 192.168.1.4
2020-08-24 10:35:19.750 INFO  com.course.server.config.LogAspect                :97   [32muLv40La2[0;39m 请求参数: []
2020-08-24 10:35:19.750 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32muLv40La2[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:35:19.751 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32muLv40La2[0;39m ==> Parameters: 
2020-08-24 10:35:19.751 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:35:19.752 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: NQ9Fr1Pe, 00000000, test, null
2020-08-24 10:35:19.752 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:35:19.752 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:35:19.752 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:35:19.752 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:35:19.753 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:35:19.753 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:35:19.753 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:35:19.753 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:35:19.753 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:35:19.754 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:35:19.754 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:35:19.754 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:35:19.754 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:35:19.754 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:35:19.755 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:35:19.755 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:35:19.755 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:35:19.755 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:35:19.755 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:35:19.756 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:35:19.756 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:35:19.756 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:35:19.756 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:35:19.756 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:35:19.757 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:35:19.757 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:35:19.757 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:35:19.757 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:35:19.757 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:35:19.758 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:35:19.758 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:35:19.758 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:35:19.758 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:35:19.758 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:35:19.759 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:35:19.759 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:35:19.759 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:35:19.759 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:35:19.759 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:35:19.760 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:35:19.760 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:35:19.760 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:35:19.760 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:35:19.760 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:35:19.761 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:35:19.761 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muLv40La2[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:35:19.761 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32muLv40La2[0;39m <==      Total: 47
2020-08-24 10:35:19.762 INFO  com.course.server.config.LogAspect                :109  [32muLv40La2[0;39m 返回结果: {"content":[{"id":"NQ9Fr1Pe","name":"test","parent":"00000000"},{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:35:19.762 INFO  com.course.server.config.LogAspect                :110  [32muLv40La2[0;39m ------------- 结束 耗时：13 ms -------------
2020-08-24 10:35:22.712 INFO  com.course.server.config.LogAspect                :76   [32mHf3yhOhG[0;39m ------------- 【category】删除开始 -------------
2020-08-24 10:35:22.713 INFO  com.course.server.config.LogAspect                :77   [32mHf3yhOhG[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/delete/NQ9Fr1Pe DELETE
2020-08-24 10:35:22.713 INFO  com.course.server.config.LogAspect                :78   [32mHf3yhOhG[0;39m 类名方法: com.course.business.controller.admin.CategoryController.delete
2020-08-24 10:35:22.713 INFO  com.course.server.config.LogAspect                :79   [32mHf3yhOhG[0;39m 远程地址: 192.168.1.4
2020-08-24 10:35:22.713 INFO  com.course.server.config.LogAspect                :97   [32mHf3yhOhG[0;39m 请求参数: ["NQ9Fr1Pe"]
2020-08-24 10:35:22.714 DEBUG c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :159  [32mHf3yhOhG[0;39m ==>  Preparing: select id, parent, name, sort from category where id = ? 
2020-08-24 10:35:22.714 DEBUG c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :159  [32mHf3yhOhG[0;39m ==> Parameters: NQ9Fr1Pe(String)
2020-08-24 10:35:22.715 TRACE c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :165  [32mHf3yhOhG[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:35:22.715 TRACE c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :165  [32mHf3yhOhG[0;39m <==        Row: NQ9Fr1Pe, 00000000, test, null
2020-08-24 10:35:22.715 DEBUG c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :159  [32mHf3yhOhG[0;39m <==      Total: 1
2020-08-24 10:35:22.716 DEBUG c.c.server.mapper.CategoryMapper.deleteByExample  :159  [32mHf3yhOhG[0;39m ==>  Preparing: delete from category WHERE ( parent = ? ) 
2020-08-24 10:35:22.716 DEBUG c.c.server.mapper.CategoryMapper.deleteByExample  :159  [32mHf3yhOhG[0;39m ==> Parameters: NQ9Fr1Pe(String)
2020-08-24 10:35:22.717 DEBUG c.c.server.mapper.CategoryMapper.deleteByExample  :159  [32mHf3yhOhG[0;39m <==    Updates: 0
2020-08-24 10:35:22.717 DEBUG c.c.s.mapper.CategoryMapper.deleteByPrimaryKey    :159  [32mHf3yhOhG[0;39m ==>  Preparing: delete from category where id = ? 
2020-08-24 10:35:22.717 DEBUG c.c.s.mapper.CategoryMapper.deleteByPrimaryKey    :159  [32mHf3yhOhG[0;39m ==> Parameters: NQ9Fr1Pe(String)
2020-08-24 10:35:22.718 DEBUG c.c.s.mapper.CategoryMapper.deleteByPrimaryKey    :159  [32mHf3yhOhG[0;39m <==    Updates: 1
2020-08-24 10:35:22.719 INFO  com.course.server.config.LogAspect                :109  [32mHf3yhOhG[0;39m 返回结果: {"success":true}
2020-08-24 10:35:22.719 INFO  com.course.server.config.LogAspect                :110  [32mHf3yhOhG[0;39m ------------- 结束 耗时：7 ms -------------
2020-08-24 10:35:22.752 INFO  com.course.server.config.LogAspect                :76   [32mXPfgrnpv[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:35:22.753 INFO  com.course.server.config.LogAspect                :77   [32mXPfgrnpv[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:35:22.753 INFO  com.course.server.config.LogAspect                :78   [32mXPfgrnpv[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:35:22.753 INFO  com.course.server.config.LogAspect                :79   [32mXPfgrnpv[0;39m 远程地址: 192.168.1.4
2020-08-24 10:35:22.753 INFO  com.course.server.config.LogAspect                :97   [32mXPfgrnpv[0;39m 请求参数: []
2020-08-24 10:35:22.754 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mXPfgrnpv[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:35:22.754 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mXPfgrnpv[0;39m ==> Parameters: 
2020-08-24 10:35:22.754 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:35:22.755 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:35:22.755 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:35:22.755 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:35:22.755 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:35:22.756 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:35:22.756 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:35:22.756 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:35:22.756 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:35:22.756 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:35:22.757 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:35:22.757 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:35:22.757 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:35:22.757 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:35:22.757 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:35:22.758 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:35:22.758 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:35:22.758 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:35:22.758 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:35:22.758 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:35:22.759 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:35:22.759 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:35:22.759 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:35:22.759 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:35:22.759 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:35:22.760 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:35:22.760 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:35:22.760 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:35:22.760 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:35:22.760 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:35:22.761 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:35:22.761 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:35:22.761 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:35:22.761 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:35:22.761 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:35:22.762 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:35:22.762 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:35:22.762 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:35:22.762 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:35:22.762 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:35:22.763 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:35:22.763 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:35:22.763 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:35:22.763 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:35:22.763 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:35:22.764 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:35:22.764 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mXPfgrnpv[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:35:22.764 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mXPfgrnpv[0;39m <==      Total: 46
2020-08-24 10:35:22.764 INFO  com.course.server.config.LogAspect                :109  [32mXPfgrnpv[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:35:22.765 INFO  com.course.server.config.LogAspect                :110  [32mXPfgrnpv[0;39m ------------- 结束 耗时：13 ms -------------
2020-08-24 10:35:25.912 INFO  com.course.server.config.LogAspect                :76   [32m628YAHBz[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:35:25.912 INFO  com.course.server.config.LogAspect                :77   [32m628YAHBz[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:35:25.913 INFO  com.course.server.config.LogAspect                :78   [32m628YAHBz[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:35:25.913 INFO  com.course.server.config.LogAspect                :79   [32m628YAHBz[0;39m 远程地址: 192.168.1.4
2020-08-24 10:35:25.913 INFO  com.course.server.config.LogAspect                :97   [32m628YAHBz[0;39m 请求参数: []
2020-08-24 10:35:25.913 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m628YAHBz[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:35:25.914 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m628YAHBz[0;39m ==> Parameters: 
2020-08-24 10:35:25.914 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:35:25.915 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:35:25.915 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:35:25.915 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:35:25.915 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:35:25.915 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:35:25.915 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:35:25.916 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:35:25.916 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:35:25.916 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:35:25.916 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:35:25.916 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:35:25.917 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:35:25.917 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:35:25.917 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:35:25.917 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:35:25.917 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:35:25.917 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:35:25.918 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:35:25.918 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:35:25.918 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:35:25.918 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:35:25.918 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:35:25.919 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:35:25.919 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:35:25.919 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:35:25.919 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:35:25.919 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:35:25.919 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:35:25.920 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:35:25.920 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:35:25.920 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:35:25.920 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:35:25.920 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:35:25.921 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:35:25.921 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:35:25.921 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:35:25.921 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:35:25.921 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:35:25.921 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:35:25.922 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:35:25.922 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:35:25.922 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:35:25.922 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:35:25.922 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:35:25.923 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:35:25.923 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m628YAHBz[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:35:25.923 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m628YAHBz[0;39m <==      Total: 46
2020-08-24 10:35:25.923 INFO  com.course.server.config.LogAspect                :109  [32m628YAHBz[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:35:25.924 INFO  com.course.server.config.LogAspect                :110  [32m628YAHBz[0;39m ------------- 结束 耗时：12 ms -------------
2020-08-24 10:35:34.184 INFO  com.course.server.config.LogAspect                :76   [32m5Jsn1ptv[0;39m ------------- 【category】保存开始 -------------
2020-08-24 10:35:34.184 INFO  com.course.server.config.LogAspect                :77   [32m5Jsn1ptv[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/save POST
2020-08-24 10:35:34.184 INFO  com.course.server.config.LogAspect                :78   [32m5Jsn1ptv[0;39m 类名方法: com.course.business.controller.admin.CategoryController.save
2020-08-24 10:35:34.185 INFO  com.course.server.config.LogAspect                :79   [32m5Jsn1ptv[0;39m 远程地址: 192.168.1.4
2020-08-24 10:35:34.185 INFO  com.course.server.config.LogAspect                :97   [32m5Jsn1ptv[0;39m 请求参数: [{"name":"test","parent":"00000000","sort":800}]
2020-08-24 10:35:34.185 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32m5Jsn1ptv[0;39m ==>  Preparing: insert into category (id, parent, name, sort ) values (?, ?, ?, ? ) 
2020-08-24 10:35:34.185 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32m5Jsn1ptv[0;39m ==> Parameters: oC6bmBuB(String), 00000000(String), test(String), 800(Integer)
2020-08-24 10:35:34.186 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32m5Jsn1ptv[0;39m <==    Updates: 1
2020-08-24 10:35:34.187 INFO  com.course.server.config.LogAspect                :109  [32m5Jsn1ptv[0;39m 返回结果: {"content":{"name":"test","parent":"00000000","sort":800},"success":true}
2020-08-24 10:35:34.187 INFO  com.course.server.config.LogAspect                :110  [32m5Jsn1ptv[0;39m ------------- 结束 耗时：3 ms -------------
2020-08-24 10:35:34.220 INFO  com.course.server.config.LogAspect                :76   [32mb2Jqpvy3[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:35:34.221 INFO  com.course.server.config.LogAspect                :77   [32mb2Jqpvy3[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:35:34.221 INFO  com.course.server.config.LogAspect                :78   [32mb2Jqpvy3[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:35:34.221 INFO  com.course.server.config.LogAspect                :79   [32mb2Jqpvy3[0;39m 远程地址: 192.168.1.4
2020-08-24 10:35:34.221 INFO  com.course.server.config.LogAspect                :97   [32mb2Jqpvy3[0;39m 请求参数: []
2020-08-24 10:35:34.221 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mb2Jqpvy3[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:35:34.222 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mb2Jqpvy3[0;39m ==> Parameters: 
2020-08-24 10:35:34.222 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:35:34.223 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:35:34.223 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:35:34.223 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:35:34.223 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:35:34.223 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:35:34.224 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:35:34.224 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:35:34.224 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:35:34.224 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:35:34.224 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:35:34.225 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:35:34.225 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:35:34.225 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:35:34.225 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:35:34.226 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:35:34.226 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:35:34.226 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:35:34.226 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:35:34.226 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:35:34.227 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:35:34.227 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:35:34.227 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:35:34.227 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:35:34.227 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:35:34.228 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:35:34.228 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:35:34.228 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:35:34.228 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:35:34.228 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:35:34.229 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:35:34.229 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:35:34.229 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:35:34.229 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:35:34.229 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:35:34.230 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:35:34.230 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:35:34.230 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:35:34.230 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:35:34.230 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:35:34.231 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:35:34.231 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:35:34.231 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:35:34.231 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:35:34.231 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:35:34.232 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:35:34.232 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:35:34.232 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mb2Jqpvy3[0;39m <==        Row: oC6bmBuB, 00000000, test, 800
2020-08-24 10:35:34.232 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mb2Jqpvy3[0;39m <==      Total: 47
2020-08-24 10:35:34.233 INFO  com.course.server.config.LogAspect                :109  [32mb2Jqpvy3[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703},{"id":"oC6bmBuB","name":"test","parent":"00000000","sort":800}],"success":true}
2020-08-24 10:35:34.233 INFO  com.course.server.config.LogAspect                :110  [32mb2Jqpvy3[0;39m ------------- 结束 耗时：13 ms -------------
2020-08-24 10:35:44.460 INFO  com.course.server.config.LogAspect                :76   [32mJasUvLox[0;39m ------------- 【category】保存开始 -------------
2020-08-24 10:35:44.461 INFO  com.course.server.config.LogAspect                :77   [32mJasUvLox[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/save POST
2020-08-24 10:35:44.461 INFO  com.course.server.config.LogAspect                :78   [32mJasUvLox[0;39m 类名方法: com.course.business.controller.admin.CategoryController.save
2020-08-24 10:35:44.461 INFO  com.course.server.config.LogAspect                :79   [32mJasUvLox[0;39m 远程地址: 192.168.1.4
2020-08-24 10:35:44.461 INFO  com.course.server.config.LogAspect                :97   [32mJasUvLox[0;39m 请求参数: [{"name":"test1","parent":"oC6bmBuB","sort":801}]
2020-08-24 10:35:44.462 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32mJasUvLox[0;39m ==>  Preparing: insert into category (id, parent, name, sort ) values (?, ?, ?, ? ) 
2020-08-24 10:35:44.462 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32mJasUvLox[0;39m ==> Parameters: vTbn5LRJ(String), oC6bmBuB(String), test1(String), 801(Integer)
2020-08-24 10:35:44.463 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32mJasUvLox[0;39m <==    Updates: 1
2020-08-24 10:35:44.464 INFO  com.course.server.config.LogAspect                :109  [32mJasUvLox[0;39m 返回结果: {"content":{"name":"test1","parent":"oC6bmBuB","sort":801},"success":true}
2020-08-24 10:35:44.464 INFO  com.course.server.config.LogAspect                :110  [32mJasUvLox[0;39m ------------- 结束 耗时：4 ms -------------
2020-08-24 10:35:44.494 INFO  com.course.server.config.LogAspect                :76   [32mvnkBBjIj[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:35:44.494 INFO  com.course.server.config.LogAspect                :77   [32mvnkBBjIj[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:35:44.495 INFO  com.course.server.config.LogAspect                :78   [32mvnkBBjIj[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:35:44.495 INFO  com.course.server.config.LogAspect                :79   [32mvnkBBjIj[0;39m 远程地址: 192.168.1.4
2020-08-24 10:35:44.495 INFO  com.course.server.config.LogAspect                :97   [32mvnkBBjIj[0;39m 请求参数: []
2020-08-24 10:35:44.495 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mvnkBBjIj[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:35:44.496 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mvnkBBjIj[0;39m ==> Parameters: 
2020-08-24 10:35:44.496 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:35:44.497 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:35:44.497 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:35:44.497 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:35:44.497 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:35:44.497 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:35:44.498 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:35:44.498 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:35:44.498 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:35:44.498 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:35:44.498 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:35:44.499 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:35:44.499 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:35:44.499 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:35:44.499 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:35:44.499 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:35:44.500 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:35:44.500 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:35:44.500 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:35:44.500 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:35:44.500 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:35:44.501 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:35:44.501 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:35:44.501 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:35:44.501 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:35:44.501 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:35:44.502 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:35:44.502 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:35:44.502 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:35:44.502 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:35:44.502 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:35:44.503 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:35:44.503 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:35:44.503 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:35:44.503 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:35:44.503 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:35:44.504 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:35:44.504 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:35:44.504 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:35:44.504 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:35:44.504 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:35:44.505 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:35:44.505 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:35:44.505 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:35:44.505 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:35:44.505 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:35:44.506 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:35:44.506 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: oC6bmBuB, 00000000, test, 800
2020-08-24 10:35:44.506 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mvnkBBjIj[0;39m <==        Row: vTbn5LRJ, oC6bmBuB, test1, 801
2020-08-24 10:35:44.506 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mvnkBBjIj[0;39m <==      Total: 48
2020-08-24 10:35:44.507 INFO  com.course.server.config.LogAspect                :109  [32mvnkBBjIj[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703},{"id":"oC6bmBuB","name":"test","parent":"00000000","sort":800},{"id":"vTbn5LRJ","name":"test1","parent":"oC6bmBuB","sort":801}],"success":true}
2020-08-24 10:35:44.507 INFO  com.course.server.config.LogAspect                :110  [32mvnkBBjIj[0;39m ------------- 结束 耗时：13 ms -------------
2020-08-24 10:36:01.007 INFO  com.course.server.config.LogAspect                :76   [32m6syLyKV1[0;39m ------------- 【category】保存开始 -------------
2020-08-24 10:36:01.008 INFO  com.course.server.config.LogAspect                :77   [32m6syLyKV1[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/save POST
2020-08-24 10:36:01.008 INFO  com.course.server.config.LogAspect                :78   [32m6syLyKV1[0;39m 类名方法: com.course.business.controller.admin.CategoryController.save
2020-08-24 10:36:01.008 INFO  com.course.server.config.LogAspect                :79   [32m6syLyKV1[0;39m 远程地址: 192.168.1.4
2020-08-24 10:36:01.008 INFO  com.course.server.config.LogAspect                :97   [32m6syLyKV1[0;39m 请求参数: [{"id":"vTbn5LRJ","name":"test12","parent":"oC6bmBuB","sort":801}]
2020-08-24 10:36:01.008 DEBUG c.c.s.mapper.CategoryMapper.updateByPrimaryKey    :159  [32m6syLyKV1[0;39m ==>  Preparing: update category set parent = ?, name = ?, sort = ? where id = ? 
2020-08-24 10:36:01.009 DEBUG c.c.s.mapper.CategoryMapper.updateByPrimaryKey    :159  [32m6syLyKV1[0;39m ==> Parameters: oC6bmBuB(String), test12(String), 801(Integer), vTbn5LRJ(String)
2020-08-24 10:36:01.010 DEBUG c.c.s.mapper.CategoryMapper.updateByPrimaryKey    :159  [32m6syLyKV1[0;39m <==    Updates: 1
2020-08-24 10:36:01.010 INFO  com.course.server.config.LogAspect                :109  [32m6syLyKV1[0;39m 返回结果: {"content":{"id":"vTbn5LRJ","name":"test12","parent":"oC6bmBuB","sort":801},"success":true}
2020-08-24 10:36:01.010 INFO  com.course.server.config.LogAspect                :110  [32m6syLyKV1[0;39m ------------- 结束 耗时：3 ms -------------
2020-08-24 10:36:01.040 INFO  com.course.server.config.LogAspect                :76   [32m6IJOVIGa[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:36:01.062 INFO  com.course.server.config.LogAspect                :77   [32m6IJOVIGa[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:36:01.062 INFO  com.course.server.config.LogAspect                :78   [32m6IJOVIGa[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:36:01.063 INFO  com.course.server.config.LogAspect                :79   [32m6IJOVIGa[0;39m 远程地址: 192.168.1.4
2020-08-24 10:36:01.063 INFO  com.course.server.config.LogAspect                :97   [32m6IJOVIGa[0;39m 请求参数: []
2020-08-24 10:36:01.063 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m6IJOVIGa[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:36:01.063 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m6IJOVIGa[0;39m ==> Parameters: 
2020-08-24 10:36:01.064 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:36:01.064 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:36:01.064 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:36:01.065 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:36:01.065 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:36:01.065 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:36:01.065 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:36:01.065 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:36:01.066 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:36:01.066 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:36:01.066 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:36:01.066 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:36:01.066 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:36:01.067 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:36:01.067 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:36:01.067 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:36:01.067 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:36:01.067 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:36:01.068 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:36:01.068 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:36:01.068 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:36:01.068 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:36:01.068 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:36:01.068 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:36:01.069 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:36:01.069 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:36:01.069 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:36:01.069 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:36:01.069 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:36:01.069 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:36:01.070 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:36:01.070 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:36:01.070 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:36:01.070 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:36:01.070 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:36:01.070 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:36:01.070 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:36:01.071 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:36:01.071 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:36:01.071 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:36:01.071 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:36:01.071 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:36:01.071 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:36:01.072 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:36:01.072 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:36:01.072 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:36:01.072 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:36:01.072 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: oC6bmBuB, 00000000, test, 800
2020-08-24 10:36:01.072 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32m6IJOVIGa[0;39m <==        Row: vTbn5LRJ, oC6bmBuB, test12, 801
2020-08-24 10:36:01.073 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32m6IJOVIGa[0;39m <==      Total: 48
2020-08-24 10:36:01.073 INFO  com.course.server.config.LogAspect                :109  [32m6IJOVIGa[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703},{"id":"oC6bmBuB","name":"test","parent":"00000000","sort":800},{"id":"vTbn5LRJ","name":"test12","parent":"oC6bmBuB","sort":801}],"success":true}
2020-08-24 10:36:01.073 INFO  com.course.server.config.LogAspect                :110  [32m6IJOVIGa[0;39m ------------- 结束 耗时：33 ms -------------
2020-08-24 10:36:09.923 INFO  com.course.server.config.LogAspect                :76   [32mYidIaaW9[0;39m ------------- 【category】保存开始 -------------
2020-08-24 10:36:09.924 INFO  com.course.server.config.LogAspect                :77   [32mYidIaaW9[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/save POST
2020-08-24 10:36:09.924 INFO  com.course.server.config.LogAspect                :78   [32mYidIaaW9[0;39m 类名方法: com.course.business.controller.admin.CategoryController.save
2020-08-24 10:36:09.924 INFO  com.course.server.config.LogAspect                :79   [32mYidIaaW9[0;39m 远程地址: 192.168.1.4
2020-08-24 10:36:09.925 INFO  com.course.server.config.LogAspect                :97   [32mYidIaaW9[0;39m 请求参数: [{"name":"hhgg","parent":"oC6bmBuB","sort":802}]
2020-08-24 10:36:09.925 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32mYidIaaW9[0;39m ==>  Preparing: insert into category (id, parent, name, sort ) values (?, ?, ?, ? ) 
2020-08-24 10:36:09.926 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32mYidIaaW9[0;39m ==> Parameters: 0jLKDphe(String), oC6bmBuB(String), hhgg(String), 802(Integer)
2020-08-24 10:36:09.927 DEBUG com.course.server.mapper.CategoryMapper.insert    :159  [32mYidIaaW9[0;39m <==    Updates: 1
2020-08-24 10:36:09.928 INFO  com.course.server.config.LogAspect                :109  [32mYidIaaW9[0;39m 返回结果: {"content":{"name":"hhgg","parent":"oC6bmBuB","sort":802},"success":true}
2020-08-24 10:36:09.928 INFO  com.course.server.config.LogAspect                :110  [32mYidIaaW9[0;39m ------------- 结束 耗时：5 ms -------------
2020-08-24 10:36:09.958 INFO  com.course.server.config.LogAspect                :76   [32mqXr13wiK[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:36:09.958 INFO  com.course.server.config.LogAspect                :77   [32mqXr13wiK[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:36:09.959 INFO  com.course.server.config.LogAspect                :78   [32mqXr13wiK[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:36:09.959 INFO  com.course.server.config.LogAspect                :79   [32mqXr13wiK[0;39m 远程地址: 192.168.1.4
2020-08-24 10:36:09.959 INFO  com.course.server.config.LogAspect                :97   [32mqXr13wiK[0;39m 请求参数: []
2020-08-24 10:36:09.959 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mqXr13wiK[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:36:09.960 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mqXr13wiK[0;39m ==> Parameters: 
2020-08-24 10:36:09.960 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:36:09.961 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:36:09.961 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:36:09.961 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:36:09.961 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:36:09.961 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:36:09.962 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:36:09.962 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:36:09.962 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:36:09.962 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:36:09.962 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:36:09.963 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:36:09.963 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:36:09.963 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:36:09.963 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:36:09.963 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:36:09.964 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:36:09.964 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:36:09.964 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:36:09.964 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:36:09.964 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:36:09.965 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:36:09.965 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:36:09.965 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:36:09.965 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:36:09.966 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:36:09.966 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:36:09.966 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:36:09.966 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:36:09.966 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:36:09.967 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:36:09.967 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:36:09.967 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:36:09.967 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:36:09.967 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:36:09.968 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:36:09.968 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:36:09.968 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:36:09.968 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:36:09.968 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:36:09.969 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:36:09.969 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:36:09.969 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:36:09.969 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:36:09.969 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:36:09.970 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:36:09.970 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:36:09.970 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: oC6bmBuB, 00000000, test, 800
2020-08-24 10:36:09.970 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: vTbn5LRJ, oC6bmBuB, test12, 801
2020-08-24 10:36:09.970 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mqXr13wiK[0;39m <==        Row: 0jLKDphe, oC6bmBuB, hhgg, 802
2020-08-24 10:36:09.970 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mqXr13wiK[0;39m <==      Total: 49
2020-08-24 10:36:09.971 INFO  com.course.server.config.LogAspect                :109  [32mqXr13wiK[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703},{"id":"oC6bmBuB","name":"test","parent":"00000000","sort":800},{"id":"vTbn5LRJ","name":"test12","parent":"oC6bmBuB","sort":801},{"id":"0jLKDphe","name":"hhgg","parent":"oC6bmBuB","sort":802}],"success":true}
2020-08-24 10:36:09.971 INFO  com.course.server.config.LogAspect                :110  [32mqXr13wiK[0;39m ------------- 结束 耗时：13 ms -------------
2020-08-24 10:36:14.841 INFO  com.course.server.config.LogAspect                :76   [32m3wyRqb4x[0;39m ------------- 【category】删除开始 -------------
2020-08-24 10:36:14.841 INFO  com.course.server.config.LogAspect                :77   [32m3wyRqb4x[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/delete/oC6bmBuB DELETE
2020-08-24 10:36:14.841 INFO  com.course.server.config.LogAspect                :78   [32m3wyRqb4x[0;39m 类名方法: com.course.business.controller.admin.CategoryController.delete
2020-08-24 10:36:14.842 INFO  com.course.server.config.LogAspect                :79   [32m3wyRqb4x[0;39m 远程地址: 192.168.1.4
2020-08-24 10:36:14.842 INFO  com.course.server.config.LogAspect                :97   [32m3wyRqb4x[0;39m 请求参数: ["oC6bmBuB"]
2020-08-24 10:36:14.843 DEBUG c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :159  [32m3wyRqb4x[0;39m ==>  Preparing: select id, parent, name, sort from category where id = ? 
2020-08-24 10:36:14.843 DEBUG c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :159  [32m3wyRqb4x[0;39m ==> Parameters: oC6bmBuB(String)
2020-08-24 10:36:14.844 TRACE c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :165  [32m3wyRqb4x[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:36:14.844 TRACE c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :165  [32m3wyRqb4x[0;39m <==        Row: oC6bmBuB, 00000000, test, 800
2020-08-24 10:36:14.844 DEBUG c.c.s.mapper.CategoryMapper.selectByPrimaryKey    :159  [32m3wyRqb4x[0;39m <==      Total: 1
2020-08-24 10:36:14.845 DEBUG c.c.server.mapper.CategoryMapper.deleteByExample  :159  [32m3wyRqb4x[0;39m ==>  Preparing: delete from category WHERE ( parent = ? ) 
2020-08-24 10:36:14.845 DEBUG c.c.server.mapper.CategoryMapper.deleteByExample  :159  [32m3wyRqb4x[0;39m ==> Parameters: oC6bmBuB(String)
2020-08-24 10:36:14.846 DEBUG c.c.server.mapper.CategoryMapper.deleteByExample  :159  [32m3wyRqb4x[0;39m <==    Updates: 2
2020-08-24 10:36:14.847 DEBUG c.c.s.mapper.CategoryMapper.deleteByPrimaryKey    :159  [32m3wyRqb4x[0;39m ==>  Preparing: delete from category where id = ? 
2020-08-24 10:36:14.847 DEBUG c.c.s.mapper.CategoryMapper.deleteByPrimaryKey    :159  [32m3wyRqb4x[0;39m ==> Parameters: oC6bmBuB(String)
2020-08-24 10:36:14.848 DEBUG c.c.s.mapper.CategoryMapper.deleteByPrimaryKey    :159  [32m3wyRqb4x[0;39m <==    Updates: 1
2020-08-24 10:36:14.848 INFO  com.course.server.config.LogAspect                :109  [32m3wyRqb4x[0;39m 返回结果: {"success":true}
2020-08-24 10:36:14.848 INFO  com.course.server.config.LogAspect                :110  [32m3wyRqb4x[0;39m ------------- 结束 耗时：7 ms -------------
2020-08-24 10:36:14.885 INFO  com.course.server.config.LogAspect                :76   [32muAbOgzaV[0;39m ------------- 【category】操作开始 -------------
2020-08-24 10:36:14.886 INFO  com.course.server.config.LogAspect                :77   [32muAbOgzaV[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 10:36:14.886 INFO  com.course.server.config.LogAspect                :78   [32muAbOgzaV[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 10:36:14.886 INFO  com.course.server.config.LogAspect                :79   [32muAbOgzaV[0;39m 远程地址: 192.168.1.4
2020-08-24 10:36:14.886 INFO  com.course.server.config.LogAspect                :97   [32muAbOgzaV[0;39m 请求参数: []
2020-08-24 10:36:14.886 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32muAbOgzaV[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 10:36:14.887 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32muAbOgzaV[0;39m ==> Parameters: 
2020-08-24 10:36:14.888 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==    Columns: id, parent, name, sort
2020-08-24 10:36:14.888 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 10:36:14.888 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 10:36:14.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 10:36:14.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 10:36:14.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 10:36:14.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 10:36:14.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 10:36:14.890 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 10:36:14.890 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 10:36:14.890 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 10:36:14.890 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 10:36:14.890 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 10:36:14.891 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 10:36:14.891 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 10:36:14.891 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 10:36:14.891 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 10:36:14.891 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 10:36:14.892 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 10:36:14.892 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 10:36:14.892 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 10:36:14.892 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 10:36:14.892 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 10:36:14.893 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 10:36:14.893 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 10:36:14.893 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 10:36:14.893 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 10:36:14.893 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 10:36:14.894 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 10:36:14.894 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 10:36:14.894 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 10:36:14.894 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 10:36:14.894 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 10:36:14.895 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 10:36:14.895 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 10:36:14.895 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 10:36:14.895 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 10:36:14.895 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 10:36:14.896 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 10:36:14.896 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 10:36:14.896 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 10:36:14.896 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 10:36:14.896 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 10:36:14.896 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 10:36:14.897 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 10:36:14.897 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 10:36:14.897 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muAbOgzaV[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 10:36:14.897 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32muAbOgzaV[0;39m <==      Total: 46
2020-08-24 10:36:14.898 INFO  com.course.server.config.LogAspect                :109  [32muAbOgzaV[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 10:36:14.898 INFO  com.course.server.config.LogAspect                :110  [32muAbOgzaV[0;39m ------------- 结束 耗时：13 ms -------------
2020-08-24 10:37:39.508 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 10:42:39.522 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 10:47:39.534 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 11:07:21.345 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-15 - Thread starvation or clock leap detected (housekeeper delta=19m20s60ms).
2020-08-24 11:11:29.598 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 11:16:29.614 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 11:21:29.623 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 11:26:29.612 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 11:31:29.625 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 11:36:29.636 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 11:41:29.646 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 11:46:29.638 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 11:51:29.649 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 11:55:13.145 INFO  com.course.server.config.LogAspect                :76   [32melTNyB9L[0;39m ------------- 【category】操作开始 -------------
2020-08-24 11:55:13.155 INFO  com.course.server.config.LogAspect                :77   [32melTNyB9L[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 11:55:13.155 INFO  com.course.server.config.LogAspect                :78   [32melTNyB9L[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 11:55:13.155 INFO  com.course.server.config.LogAspect                :79   [32melTNyB9L[0;39m 远程地址: 192.168.1.4
2020-08-24 11:55:13.156 INFO  com.course.server.config.LogAspect                :97   [32melTNyB9L[0;39m 请求参数: []
2020-08-24 11:55:13.183 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32melTNyB9L[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 11:55:13.189 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32melTNyB9L[0;39m ==> Parameters: 
2020-08-24 11:55:13.197 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==    Columns: id, parent, name, sort
2020-08-24 11:55:13.197 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 11:55:13.198 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 11:55:13.199 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 11:55:13.199 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 11:55:13.199 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 11:55:13.199 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 11:55:13.199 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 11:55:13.199 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 11:55:13.199 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 11:55:13.200 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 11:55:13.200 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 11:55:13.200 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 11:55:13.200 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 11:55:13.200 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 11:55:13.200 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 11:55:13.201 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 11:55:13.201 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 11:55:13.201 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 11:55:13.201 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 11:55:13.201 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 11:55:13.201 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 11:55:13.201 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 11:55:13.202 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 11:55:13.202 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 11:55:13.202 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 11:55:13.202 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 11:55:13.202 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 11:55:13.203 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 11:55:13.203 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 11:55:13.203 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 11:55:13.203 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 11:55:13.203 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 11:55:13.203 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 11:55:13.204 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 11:55:13.204 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 11:55:13.204 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 11:55:13.204 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 11:55:13.204 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 11:55:13.204 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 11:55:13.204 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 11:55:13.205 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 11:55:13.205 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 11:55:13.205 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 11:55:13.205 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 11:55:13.205 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 11:55:13.205 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32melTNyB9L[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 11:55:13.206 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32melTNyB9L[0;39m <==      Total: 46
2020-08-24 11:55:13.209 INFO  com.course.server.config.LogAspect                :109  [32melTNyB9L[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 11:55:13.210 INFO  com.course.server.config.LogAspect                :110  [32melTNyB9L[0;39m ------------- 结束 耗时：67 ms -------------
2020-08-24 11:55:31.464 INFO  com.course.server.config.LogAspect                :76   [32mYfMRdJqr[0;39m ------------- 【course】查询开始 -------------
2020-08-24 11:55:31.466 INFO  com.course.server.config.LogAspect                :77   [32mYfMRdJqr[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 11:55:31.466 INFO  com.course.server.config.LogAspect                :78   [32mYfMRdJqr[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 11:55:31.466 INFO  com.course.server.config.LogAspect                :79   [32mYfMRdJqr[0;39m 远程地址: 192.168.1.4
2020-08-24 11:55:31.493 INFO  com.course.server.config.LogAspect                :97   [32mYfMRdJqr[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 11:55:31.528 INFO  c.c.business.controller.admin.CourseController    :31   [32mYfMRdJqr[0;39m pageDto: 1
2020-08-24 11:55:31.561 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mYfMRdJqr[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 11:55:31.561 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mYfMRdJqr[0;39m ==> Parameters: 
2020-08-24 11:55:31.567 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mYfMRdJqr[0;39m <==    Columns: count(0)
2020-08-24 11:55:31.567 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mYfMRdJqr[0;39m <==        Row: 2
2020-08-24 11:55:31.572 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mYfMRdJqr[0;39m <==      Total: 1
2020-08-24 11:55:31.573 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mYfMRdJqr[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 11:55:31.574 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mYfMRdJqr[0;39m ==> Parameters: 5(Integer)
2020-08-24 11:55:31.576 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mYfMRdJqr[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 11:55:31.577 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mYfMRdJqr[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-22 20:43:56.371
2020-08-24 11:55:31.579 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mYfMRdJqr[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 11:55:31.579 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mYfMRdJqr[0;39m <==      Total: 2
2020-08-24 11:55:31.600 INFO  com.course.server.config.LogAspect                :109  [32mYfMRdJqr[0;39m 返回结果: {"content":{"list":[{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598143436371},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":2},"success":true}
2020-08-24 11:55:31.600 INFO  com.course.server.config.LogAspect                :110  [32mYfMRdJqr[0;39m ------------- 结束 耗时：137 ms -------------
2020-08-24 11:55:32.788 INFO  com.course.server.config.LogAspect                :76   [32mqLinzn4j[0;39m ------------- 【section】查询开始 -------------
2020-08-24 11:55:32.789 INFO  com.course.server.config.LogAspect                :77   [32mqLinzn4j[0;39m 请求地址: http://192.168.1.4:9002/business/admin/section/list POST
2020-08-24 11:55:32.790 INFO  com.course.server.config.LogAspect                :78   [32mqLinzn4j[0;39m 类名方法: com.course.business.controller.admin.SectionController.list
2020-08-24 11:55:32.790 INFO  com.course.server.config.LogAspect                :79   [32mqLinzn4j[0;39m 远程地址: 192.168.1.4
2020-08-24 11:55:32.790 INFO  com.course.server.config.LogAspect                :97   [32mqLinzn4j[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 11:55:32.794 INFO  c.c.business.controller.admin.SectionController   :32   [32mqLinzn4j[0;39m pageDto: 1
2020-08-24 11:55:32.804 WARN  c.c.business.controller.ControllerExceptionHandler:20   [32mqLinzn4j[0;39m Course ID cannot be empty
2020-08-24 11:55:32.806 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :199  [32mqLinzn4j[0;39m Resolved [com.course.server.exception.ValidatorException: Course ID cannot be empty]
2020-08-24 11:55:34.405 INFO  com.course.server.config.LogAspect                :76   [32mWSdHDgwN[0;39m ------------- 【Chapter】查询开始 -------------
2020-08-24 11:55:34.406 INFO  com.course.server.config.LogAspect                :77   [32mWSdHDgwN[0;39m 请求地址: http://192.168.1.4:9002/business/admin/chapter/list POST
2020-08-24 11:55:34.406 INFO  com.course.server.config.LogAspect                :78   [32mWSdHDgwN[0;39m 类名方法: com.course.business.controller.admin.ChapterController.list
2020-08-24 11:55:34.406 INFO  com.course.server.config.LogAspect                :79   [32mWSdHDgwN[0;39m 远程地址: 192.168.1.4
2020-08-24 11:55:34.407 INFO  com.course.server.config.LogAspect                :97   [32mWSdHDgwN[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 11:55:34.409 WARN  c.c.business.controller.ControllerExceptionHandler:20   [32mWSdHDgwN[0;39m Course ID cannot be empty
2020-08-24 11:55:34.409 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver   :199  [32mWSdHDgwN[0;39m Resolved [com.course.server.exception.ValidatorException: Course ID cannot be empty]
2020-08-24 11:55:36.154 INFO  com.course.server.config.LogAspect                :76   [32mjh0q7ACf[0;39m ------------- 【course】查询开始 -------------
2020-08-24 11:55:36.154 INFO  com.course.server.config.LogAspect                :77   [32mjh0q7ACf[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 11:55:36.155 INFO  com.course.server.config.LogAspect                :78   [32mjh0q7ACf[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 11:55:36.155 INFO  com.course.server.config.LogAspect                :79   [32mjh0q7ACf[0;39m 远程地址: 192.168.1.4
2020-08-24 11:55:36.155 INFO  com.course.server.config.LogAspect                :97   [32mjh0q7ACf[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 11:55:36.155 INFO  c.c.business.controller.admin.CourseController    :31   [32mjh0q7ACf[0;39m pageDto: 1
2020-08-24 11:55:36.156 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mjh0q7ACf[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 11:55:36.157 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mjh0q7ACf[0;39m ==> Parameters: 
2020-08-24 11:55:36.158 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mjh0q7ACf[0;39m <==    Columns: count(0)
2020-08-24 11:55:36.158 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mjh0q7ACf[0;39m <==        Row: 2
2020-08-24 11:55:36.159 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mjh0q7ACf[0;39m <==      Total: 1
2020-08-24 11:55:36.159 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mjh0q7ACf[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 11:55:36.159 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mjh0q7ACf[0;39m ==> Parameters: 5(Integer)
2020-08-24 11:55:36.160 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mjh0q7ACf[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 11:55:36.163 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mjh0q7ACf[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-22 20:43:56.371
2020-08-24 11:55:36.164 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mjh0q7ACf[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 11:55:36.164 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mjh0q7ACf[0;39m <==      Total: 2
2020-08-24 11:55:36.164 INFO  com.course.server.config.LogAspect                :109  [32mjh0q7ACf[0;39m 返回结果: {"content":{"list":[{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598143436371},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":2},"success":true}
2020-08-24 11:55:36.165 INFO  com.course.server.config.LogAspect                :110  [32mjh0q7ACf[0;39m ------------- 结束 耗时：11 ms -------------
2020-08-24 11:55:37.987 INFO  com.course.server.config.LogAspect                :76   [32mxrsWFk40[0;39m ------------- 【Chapter】查询开始 -------------
2020-08-24 11:55:37.987 INFO  com.course.server.config.LogAspect                :77   [32mxrsWFk40[0;39m 请求地址: http://192.168.1.4:9002/business/admin/chapter/list POST
2020-08-24 11:55:37.988 INFO  com.course.server.config.LogAspect                :78   [32mxrsWFk40[0;39m 类名方法: com.course.business.controller.admin.ChapterController.list
2020-08-24 11:55:37.988 INFO  com.course.server.config.LogAspect                :79   [32mxrsWFk40[0;39m 远程地址: 192.168.1.4
2020-08-24 11:55:37.988 INFO  com.course.server.config.LogAspect                :97   [32mxrsWFk40[0;39m 请求参数: [{"courseId":"00000001","page":1,"size":5,"total":0}]
2020-08-24 11:55:38.002 DEBUG c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :159  [32mxrsWFk40[0;39m ==>  Preparing: SELECT count(0) FROM chapter WHERE (course_id = ?) 
2020-08-24 11:55:38.003 DEBUG c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :159  [32mxrsWFk40[0;39m ==> Parameters: 00000001(String)
2020-08-24 11:55:38.006 TRACE c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :165  [32mxrsWFk40[0;39m <==    Columns: count(0)
2020-08-24 11:55:38.006 TRACE c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :165  [32mxrsWFk40[0;39m <==        Row: 3
2020-08-24 11:55:38.007 DEBUG c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :159  [32mxrsWFk40[0;39m <==      Total: 1
2020-08-24 11:55:38.007 DEBUG c.c.server.mapper.ChapterMapper.selectByExample   :159  [32mxrsWFk40[0;39m ==>  Preparing: select id, course_id, name from chapter WHERE ( course_id = ? ) LIMIT ? 
2020-08-24 11:55:38.007 DEBUG c.c.server.mapper.ChapterMapper.selectByExample   :159  [32mxrsWFk40[0;39m ==> Parameters: 00000001(String), 5(Integer)
2020-08-24 11:55:38.008 TRACE c.c.server.mapper.ChapterMapper.selectByExample   :165  [32mxrsWFk40[0;39m <==    Columns: id, course_id, name
2020-08-24 11:55:38.008 TRACE c.c.server.mapper.ChapterMapper.selectByExample   :165  [32mxrsWFk40[0;39m <==        Row: 00000012, 00000001, test chapter 001
2020-08-24 11:55:38.008 TRACE c.c.server.mapper.ChapterMapper.selectByExample   :165  [32mxrsWFk40[0;39m <==        Row: 00000013, 00000001, test chapter 13
2020-08-24 11:55:38.008 TRACE c.c.server.mapper.ChapterMapper.selectByExample   :165  [32mxrsWFk40[0;39m <==        Row: kEPiawBm, 00000001, test 003
2020-08-24 11:55:38.009 DEBUG c.c.server.mapper.ChapterMapper.selectByExample   :159  [32mxrsWFk40[0;39m <==      Total: 3
2020-08-24 11:55:38.013 INFO  com.course.server.config.LogAspect                :109  [32mxrsWFk40[0;39m 返回结果: {"content":{"courseId":"00000001","list":[{"courseId":"00000001","id":"00000012","name":"test chapter 001"},{"courseId":"00000001","id":"00000013","name":"test chapter 13"},{"courseId":"00000001","id":"kEPiawBm","name":"test 003"}],"page":1,"size":5,"total":3},"success":true}
2020-08-24 11:55:38.014 INFO  com.course.server.config.LogAspect                :110  [32mxrsWFk40[0;39m ------------- 结束 耗时：27 ms -------------
2020-08-24 11:55:39.562 INFO  com.course.server.config.LogAspect                :76   [32mjVgGpseM[0;39m ------------- 【section】查询开始 -------------
2020-08-24 11:55:39.562 INFO  com.course.server.config.LogAspect                :77   [32mjVgGpseM[0;39m 请求地址: http://192.168.1.4:9002/business/admin/section/list POST
2020-08-24 11:55:39.562 INFO  com.course.server.config.LogAspect                :78   [32mjVgGpseM[0;39m 类名方法: com.course.business.controller.admin.SectionController.list
2020-08-24 11:55:39.563 INFO  com.course.server.config.LogAspect                :79   [32mjVgGpseM[0;39m 远程地址: 192.168.1.4
2020-08-24 11:55:39.563 INFO  com.course.server.config.LogAspect                :97   [32mjVgGpseM[0;39m 请求参数: [{"chapterId":"00000012","courseId":"00000001","page":1,"size":5,"total":0}]
2020-08-24 11:55:39.563 INFO  c.c.business.controller.admin.SectionController   :32   [32mjVgGpseM[0;39m pageDto: 1
2020-08-24 11:55:39.577 DEBUG c.c.s.mapper.SectionMapper.selectByExample_COUNT  :159  [32mjVgGpseM[0;39m ==>  Preparing: SELECT count(0) FROM section WHERE (course_id = ? AND chapter_id = ?) 
2020-08-24 11:55:39.577 DEBUG c.c.s.mapper.SectionMapper.selectByExample_COUNT  :159  [32mjVgGpseM[0;39m ==> Parameters: 00000001(String), 00000012(String)
2020-08-24 11:55:39.582 TRACE c.c.s.mapper.SectionMapper.selectByExample_COUNT  :165  [32mjVgGpseM[0;39m <==    Columns: count(0)
2020-08-24 11:55:39.583 TRACE c.c.s.mapper.SectionMapper.selectByExample_COUNT  :165  [32mjVgGpseM[0;39m <==        Row: 2
2020-08-24 11:55:39.583 DEBUG c.c.s.mapper.SectionMapper.selectByExample_COUNT  :159  [32mjVgGpseM[0;39m <==      Total: 1
2020-08-24 11:55:39.584 DEBUG c.c.server.mapper.SectionMapper.selectByExample   :159  [32mjVgGpseM[0;39m ==>  Preparing: select id, title, course_id, chapter_id, video, time, charge, sort, created_at, updated_at from section WHERE ( course_id = ? and chapter_id = ? ) order by sort asc LIMIT ? 
2020-08-24 11:55:39.584 DEBUG c.c.server.mapper.SectionMapper.selectByExample   :159  [32mjVgGpseM[0;39m ==> Parameters: 00000001(String), 00000012(String), 5(Integer)
2020-08-24 11:55:39.585 TRACE c.c.server.mapper.SectionMapper.selectByExample   :165  [32mjVgGpseM[0;39m <==    Columns: id, title, course_id, chapter_id, video, time, charge, sort, created_at, updated_at
2020-08-24 11:55:39.586 TRACE c.c.server.mapper.SectionMapper.selectByExample   :165  [32mjVgGpseM[0;39m <==        Row: WOp8bcfC, test3, 00000001, 00000012, null, null, C, null, 2020-08-22 22:26:38.454, 2020-08-22 22:26:38.454
2020-08-24 11:55:39.586 TRACE c.c.server.mapper.SectionMapper.selectByExample   :165  [32mjVgGpseM[0;39m <==        Row: hdFQp8Xf, test4, 00000001, 00000012, null, null, C, null, 2020-08-22 22:28:12.127, 2020-08-22 22:28:12.127
2020-08-24 11:55:39.586 DEBUG c.c.server.mapper.SectionMapper.selectByExample   :159  [32mjVgGpseM[0;39m <==      Total: 2
2020-08-24 11:55:39.591 INFO  com.course.server.config.LogAspect                :109  [32mjVgGpseM[0;39m 返回结果: {"content":{"chapterId":"00000012","courseId":"00000001","list":[{"chapterId":"00000012","charge":"C","courseId":"00000001","createdAt":1598149598454,"id":"WOp8bcfC","title":"test3","updatedAt":1598149598454},{"chapterId":"00000012","charge":"C","courseId":"00000001","createdAt":1598149692127,"id":"hdFQp8Xf","title":"test4","updatedAt":1598149692127}],"page":1,"size":5,"total":2},"success":true}
2020-08-24 11:55:39.592 INFO  com.course.server.config.LogAspect                :110  [32mjVgGpseM[0;39m ------------- 结束 耗时：30 ms -------------
2020-08-24 11:55:41.197 INFO  com.course.server.config.LogAspect                :76   [32m86xB7A7O[0;39m ------------- 【Chapter】查询开始 -------------
2020-08-24 11:55:41.197 INFO  com.course.server.config.LogAspect                :77   [32m86xB7A7O[0;39m 请求地址: http://192.168.1.4:9002/business/admin/chapter/list POST
2020-08-24 11:55:41.198 INFO  com.course.server.config.LogAspect                :78   [32m86xB7A7O[0;39m 类名方法: com.course.business.controller.admin.ChapterController.list
2020-08-24 11:55:41.198 INFO  com.course.server.config.LogAspect                :79   [32m86xB7A7O[0;39m 远程地址: 192.168.1.4
2020-08-24 11:55:41.198 INFO  com.course.server.config.LogAspect                :97   [32m86xB7A7O[0;39m 请求参数: [{"courseId":"00000001","page":1,"size":5,"total":0}]
2020-08-24 11:55:41.199 DEBUG c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :159  [32m86xB7A7O[0;39m ==>  Preparing: SELECT count(0) FROM chapter WHERE (course_id = ?) 
2020-08-24 11:55:41.199 DEBUG c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :159  [32m86xB7A7O[0;39m ==> Parameters: 00000001(String)
2020-08-24 11:55:41.200 TRACE c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :165  [32m86xB7A7O[0;39m <==    Columns: count(0)
2020-08-24 11:55:41.200 TRACE c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :165  [32m86xB7A7O[0;39m <==        Row: 3
2020-08-24 11:55:41.200 DEBUG c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :159  [32m86xB7A7O[0;39m <==      Total: 1
2020-08-24 11:55:41.201 DEBUG c.c.server.mapper.ChapterMapper.selectByExample   :159  [32m86xB7A7O[0;39m ==>  Preparing: select id, course_id, name from chapter WHERE ( course_id = ? ) LIMIT ? 
2020-08-24 11:55:41.201 DEBUG c.c.server.mapper.ChapterMapper.selectByExample   :159  [32m86xB7A7O[0;39m ==> Parameters: 00000001(String), 5(Integer)
2020-08-24 11:55:41.201 TRACE c.c.server.mapper.ChapterMapper.selectByExample   :165  [32m86xB7A7O[0;39m <==    Columns: id, course_id, name
2020-08-24 11:55:41.202 TRACE c.c.server.mapper.ChapterMapper.selectByExample   :165  [32m86xB7A7O[0;39m <==        Row: 00000012, 00000001, test chapter 001
2020-08-24 11:55:41.202 TRACE c.c.server.mapper.ChapterMapper.selectByExample   :165  [32m86xB7A7O[0;39m <==        Row: 00000013, 00000001, test chapter 13
2020-08-24 11:55:41.202 TRACE c.c.server.mapper.ChapterMapper.selectByExample   :165  [32m86xB7A7O[0;39m <==        Row: kEPiawBm, 00000001, test 003
2020-08-24 11:55:41.202 DEBUG c.c.server.mapper.ChapterMapper.selectByExample   :159  [32m86xB7A7O[0;39m <==      Total: 3
2020-08-24 11:55:41.203 INFO  com.course.server.config.LogAspect                :109  [32m86xB7A7O[0;39m 返回结果: {"content":{"courseId":"00000001","list":[{"courseId":"00000001","id":"00000012","name":"test chapter 001"},{"courseId":"00000001","id":"00000013","name":"test chapter 13"},{"courseId":"00000001","id":"kEPiawBm","name":"test 003"}],"page":1,"size":5,"total":3},"success":true}
2020-08-24 11:55:41.203 INFO  com.course.server.config.LogAspect                :110  [32m86xB7A7O[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-24 11:55:42.511 INFO  com.course.server.config.LogAspect                :76   [32mN9qjXH0T[0;39m ------------- 【course】查询开始 -------------
2020-08-24 11:55:42.512 INFO  com.course.server.config.LogAspect                :77   [32mN9qjXH0T[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 11:55:42.512 INFO  com.course.server.config.LogAspect                :78   [32mN9qjXH0T[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 11:55:42.512 INFO  com.course.server.config.LogAspect                :79   [32mN9qjXH0T[0;39m 远程地址: 192.168.1.4
2020-08-24 11:55:42.512 INFO  com.course.server.config.LogAspect                :97   [32mN9qjXH0T[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 11:55:42.512 INFO  c.c.business.controller.admin.CourseController    :31   [32mN9qjXH0T[0;39m pageDto: 1
2020-08-24 11:55:42.513 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mN9qjXH0T[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 11:55:42.513 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mN9qjXH0T[0;39m ==> Parameters: 
2020-08-24 11:55:42.514 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mN9qjXH0T[0;39m <==    Columns: count(0)
2020-08-24 11:55:42.514 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mN9qjXH0T[0;39m <==        Row: 2
2020-08-24 11:55:42.515 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mN9qjXH0T[0;39m <==      Total: 1
2020-08-24 11:55:42.515 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mN9qjXH0T[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 11:55:42.515 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mN9qjXH0T[0;39m ==> Parameters: 5(Integer)
2020-08-24 11:55:42.516 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mN9qjXH0T[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 11:55:42.516 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mN9qjXH0T[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-22 20:43:56.371
2020-08-24 11:55:42.516 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mN9qjXH0T[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 11:55:42.517 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mN9qjXH0T[0;39m <==      Total: 2
2020-08-24 11:55:42.517 INFO  com.course.server.config.LogAspect                :109  [32mN9qjXH0T[0;39m 返回结果: {"content":{"list":[{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598143436371},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":2},"success":true}
2020-08-24 11:55:42.517 INFO  com.course.server.config.LogAspect                :110  [32mN9qjXH0T[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-24 11:56:29.663 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 12:01:29.660 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 12:06:29.671 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 12:11:29.683 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 12:16:29.698 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 12:21:29.689 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 12:26:29.704 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 12:31:29.718 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 12:36:29.717 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 12:41:29.723 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 12:46:29.736 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 12:51:29.752 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 12:56:29.750 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 13:01:29.761 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 13:40:50.170 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-15 - Thread starvation or clock leap detected (housekeeper delta=35m58s18ms).
2020-08-24 13:56:05.791 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-15 - Thread starvation or clock leap detected (housekeeper delta=14m45s587ms).
2020-08-24 13:56:13.364 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 14:01:13.386 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 14:06:13.397 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 14:11:13.409 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 14:16:13.412 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 14:21:13.421 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 14:26:13.435 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 14:31:13.445 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 14:36:13.446 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 14:51:02.957 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-15 - Thread starvation or clock leap detected (housekeeper delta=14m26s849ms).
2020-08-24 14:55:10.303 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 15:00:10.317 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 15:05:10.332 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 15:10:10.320 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 15:15:10.330 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 15:20:10.345 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 15:25:10.354 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 15:30:10.347 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 15:57:55.430 WARN  com.zaxxer.hikari.pool.HikariPool                 :787  [32m        [0;39m HikariPool-15 - Thread starvation or clock leap detected (housekeeper delta=26m52s175ms).
2020-08-24 16:01:32.528 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:06:32.543 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:11:32.555 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:16:32.570 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:21:32.555 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:21:40.567 INFO  com.course.server.config.LogAspect                :76   [32mwb71RrLv[0;39m ------------- 【Chapter】查询开始 -------------
2020-08-24 16:21:40.572 INFO  com.course.server.config.LogAspect                :77   [32mwb71RrLv[0;39m 请求地址: http://192.168.1.4:9002/business/admin/chapter/list POST
2020-08-24 16:21:40.572 INFO  com.course.server.config.LogAspect                :78   [32mwb71RrLv[0;39m 类名方法: com.course.business.controller.admin.ChapterController.list
2020-08-24 16:21:40.572 INFO  com.course.server.config.LogAspect                :79   [32mwb71RrLv[0;39m 远程地址: 192.168.1.4
2020-08-24 16:21:40.577 INFO  com.course.server.config.LogAspect                :97   [32mwb71RrLv[0;39m 请求参数: [{"courseId":"K59dWr5W","page":1,"size":5,"total":0}]
2020-08-24 16:21:40.616 DEBUG c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :159  [32mwb71RrLv[0;39m ==>  Preparing: SELECT count(0) FROM chapter WHERE (course_id = ?) 
2020-08-24 16:21:40.625 DEBUG c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :159  [32mwb71RrLv[0;39m ==> Parameters: K59dWr5W(String)
2020-08-24 16:21:40.633 TRACE c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :165  [32mwb71RrLv[0;39m <==    Columns: count(0)
2020-08-24 16:21:40.634 TRACE c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :165  [32mwb71RrLv[0;39m <==        Row: 1
2020-08-24 16:21:40.635 DEBUG c.c.s.mapper.ChapterMapper.selectByExample_COUNT  :159  [32mwb71RrLv[0;39m <==      Total: 1
2020-08-24 16:21:40.637 DEBUG c.c.server.mapper.ChapterMapper.selectByExample   :159  [32mwb71RrLv[0;39m ==>  Preparing: select id, course_id, name from chapter WHERE ( course_id = ? ) LIMIT ? 
2020-08-24 16:21:40.637 DEBUG c.c.server.mapper.ChapterMapper.selectByExample   :159  [32mwb71RrLv[0;39m ==> Parameters: K59dWr5W(String), 5(Integer)
2020-08-24 16:21:40.639 TRACE c.c.server.mapper.ChapterMapper.selectByExample   :165  [32mwb71RrLv[0;39m <==    Columns: id, course_id, name
2020-08-24 16:21:40.639 TRACE c.c.server.mapper.ChapterMapper.selectByExample   :165  [32mwb71RrLv[0;39m <==        Row: 8GemI3Qa, K59dWr5W, test
2020-08-24 16:21:40.641 DEBUG c.c.server.mapper.ChapterMapper.selectByExample   :159  [32mwb71RrLv[0;39m <==      Total: 1
2020-08-24 16:21:40.674 INFO  com.course.server.config.LogAspect                :109  [32mwb71RrLv[0;39m 返回结果: {"content":{"courseId":"K59dWr5W","list":[{"courseId":"K59dWr5W","id":"8GemI3Qa","name":"test"}],"page":1,"size":5,"total":1},"success":true}
2020-08-24 16:21:40.674 INFO  com.course.server.config.LogAspect                :110  [32mwb71RrLv[0;39m ------------- 结束 耗时：110 ms -------------
2020-08-24 16:21:41.982 INFO  com.course.server.config.LogAspect                :76   [32mLUUHsbBE[0;39m ------------- 【course】查询开始 -------------
2020-08-24 16:21:41.983 INFO  com.course.server.config.LogAspect                :77   [32mLUUHsbBE[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 16:21:41.983 INFO  com.course.server.config.LogAspect                :78   [32mLUUHsbBE[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 16:21:41.983 INFO  com.course.server.config.LogAspect                :79   [32mLUUHsbBE[0;39m 远程地址: 192.168.1.4
2020-08-24 16:21:41.984 INFO  com.course.server.config.LogAspect                :97   [32mLUUHsbBE[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 16:21:41.984 INFO  c.c.business.controller.admin.CourseController    :31   [32mLUUHsbBE[0;39m pageDto: 1
2020-08-24 16:21:41.987 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mLUUHsbBE[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 16:21:41.987 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mLUUHsbBE[0;39m ==> Parameters: 
2020-08-24 16:21:41.990 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mLUUHsbBE[0;39m <==    Columns: count(0)
2020-08-24 16:21:41.990 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mLUUHsbBE[0;39m <==        Row: 2
2020-08-24 16:21:41.991 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mLUUHsbBE[0;39m <==      Total: 1
2020-08-24 16:21:41.991 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mLUUHsbBE[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 16:21:41.991 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mLUUHsbBE[0;39m ==> Parameters: 5(Integer)
2020-08-24 16:21:41.993 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mLUUHsbBE[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 16:21:41.994 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mLUUHsbBE[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-22 20:43:56.371
2020-08-24 16:21:41.994 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mLUUHsbBE[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 16:21:41.995 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mLUUHsbBE[0;39m <==      Total: 2
2020-08-24 16:21:41.997 INFO  com.course.server.config.LogAspect                :109  [32mLUUHsbBE[0;39m 返回结果: {"content":{"list":[{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598143436371},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":2},"success":true}
2020-08-24 16:21:41.997 INFO  com.course.server.config.LogAspect                :110  [32mLUUHsbBE[0;39m ------------- 结束 耗时：15 ms -------------
2020-08-24 16:21:49.762 INFO  com.course.server.config.LogAspect                :76   [32m79fApfpd[0;39m ------------- 【course】查询开始 -------------
2020-08-24 16:21:49.762 INFO  com.course.server.config.LogAspect                :77   [32m79fApfpd[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 16:21:49.763 INFO  com.course.server.config.LogAspect                :78   [32m79fApfpd[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 16:21:49.763 INFO  com.course.server.config.LogAspect                :79   [32m79fApfpd[0;39m 远程地址: 192.168.1.4
2020-08-24 16:21:49.763 INFO  com.course.server.config.LogAspect                :97   [32m79fApfpd[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 16:21:49.763 INFO  c.c.business.controller.admin.CourseController    :31   [32m79fApfpd[0;39m pageDto: 1
2020-08-24 16:21:49.764 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m79fApfpd[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 16:21:49.764 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m79fApfpd[0;39m ==> Parameters: 
2020-08-24 16:21:49.765 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m79fApfpd[0;39m <==    Columns: count(0)
2020-08-24 16:21:49.765 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m79fApfpd[0;39m <==        Row: 2
2020-08-24 16:21:49.766 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m79fApfpd[0;39m <==      Total: 1
2020-08-24 16:21:49.766 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m79fApfpd[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 16:21:49.766 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m79fApfpd[0;39m ==> Parameters: 5(Integer)
2020-08-24 16:21:49.767 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m79fApfpd[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 16:21:49.769 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m79fApfpd[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-22 20:43:56.371
2020-08-24 16:21:49.769 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m79fApfpd[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 16:21:49.769 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m79fApfpd[0;39m <==      Total: 2
2020-08-24 16:21:49.770 INFO  com.course.server.config.LogAspect                :109  [32m79fApfpd[0;39m 返回结果: {"content":{"list":[{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598143436371},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":2},"success":true}
2020-08-24 16:21:49.770 INFO  com.course.server.config.LogAspect                :110  [32m79fApfpd[0;39m ------------- 结束 耗时：8 ms -------------
2020-08-24 16:26:31.750 INFO  com.course.server.config.LogAspect                :76   [32mkge3hidV[0;39m ------------- 【course】查询开始 -------------
2020-08-24 16:26:31.751 INFO  com.course.server.config.LogAspect                :77   [32mkge3hidV[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 16:26:31.751 INFO  com.course.server.config.LogAspect                :78   [32mkge3hidV[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 16:26:31.751 INFO  com.course.server.config.LogAspect                :79   [32mkge3hidV[0;39m 远程地址: 192.168.1.4
2020-08-24 16:26:31.752 INFO  com.course.server.config.LogAspect                :97   [32mkge3hidV[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 16:26:31.752 INFO  c.c.business.controller.admin.CourseController    :31   [32mkge3hidV[0;39m pageDto: 1
2020-08-24 16:26:31.758 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mkge3hidV[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 16:26:31.758 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mkge3hidV[0;39m ==> Parameters: 
2020-08-24 16:26:31.759 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mkge3hidV[0;39m <==    Columns: count(0)
2020-08-24 16:26:31.759 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mkge3hidV[0;39m <==        Row: 2
2020-08-24 16:26:31.759 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mkge3hidV[0;39m <==      Total: 1
2020-08-24 16:26:31.759 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mkge3hidV[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 16:26:31.759 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mkge3hidV[0;39m ==> Parameters: 5(Integer)
2020-08-24 16:26:31.761 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mkge3hidV[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 16:26:31.762 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mkge3hidV[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-22 20:43:56.371
2020-08-24 16:26:31.762 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mkge3hidV[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 16:26:31.762 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mkge3hidV[0;39m <==      Total: 2
2020-08-24 16:26:31.763 INFO  com.course.server.config.LogAspect                :109  [32mkge3hidV[0;39m 返回结果: {"content":{"list":[{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598143436371},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":2},"success":true}
2020-08-24 16:26:31.763 INFO  com.course.server.config.LogAspect                :110  [32mkge3hidV[0;39m ------------- 结束 耗时：13 ms -------------
2020-08-24 16:26:32.568 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:31:32.579 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:33:07.997 INFO  com.course.server.config.LogAspect                :76   [32mCCbDUL1d[0;39m ------------- 【course】查询开始 -------------
2020-08-24 16:33:07.998 INFO  com.course.server.config.LogAspect                :77   [32mCCbDUL1d[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 16:33:07.998 INFO  com.course.server.config.LogAspect                :78   [32mCCbDUL1d[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 16:33:07.999 INFO  com.course.server.config.LogAspect                :79   [32mCCbDUL1d[0;39m 远程地址: 192.168.1.4
2020-08-24 16:33:08.000 INFO  com.course.server.config.LogAspect                :97   [32mCCbDUL1d[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 16:33:08.000 INFO  c.c.business.controller.admin.CourseController    :31   [32mCCbDUL1d[0;39m pageDto: 1
2020-08-24 16:33:08.003 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mCCbDUL1d[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 16:33:08.004 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mCCbDUL1d[0;39m ==> Parameters: 
2020-08-24 16:33:08.005 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mCCbDUL1d[0;39m <==    Columns: count(0)
2020-08-24 16:33:08.005 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mCCbDUL1d[0;39m <==        Row: 2
2020-08-24 16:33:08.006 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mCCbDUL1d[0;39m <==      Total: 1
2020-08-24 16:33:08.006 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mCCbDUL1d[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 16:33:08.007 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mCCbDUL1d[0;39m ==> Parameters: 5(Integer)
2020-08-24 16:33:08.008 INFO  com.course.server.config.LogAspect                :76   [32mMp29JSJp[0;39m ------------- 【category】操作开始 -------------
2020-08-24 16:33:08.009 INFO  com.course.server.config.LogAspect                :77   [32mMp29JSJp[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 16:33:08.009 INFO  com.course.server.config.LogAspect                :78   [32mMp29JSJp[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 16:33:08.009 INFO  com.course.server.config.LogAspect                :79   [32mMp29JSJp[0;39m 远程地址: 192.168.1.4
2020-08-24 16:33:08.010 INFO  com.course.server.config.LogAspect                :97   [32mMp29JSJp[0;39m 请求参数: []
2020-08-24 16:33:08.011 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mCCbDUL1d[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 16:33:08.012 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mCCbDUL1d[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-22 20:43:56.371
2020-08-24 16:33:08.015 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mCCbDUL1d[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 16:33:08.016 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mCCbDUL1d[0;39m <==      Total: 2
2020-08-24 16:33:08.016 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mMp29JSJp[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 16:33:08.017 INFO  com.course.server.config.LogAspect                :109  [32mCCbDUL1d[0;39m 返回结果: {"content":{"list":[{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598143436371},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":2},"success":true}
2020-08-24 16:33:08.018 INFO  com.course.server.config.LogAspect                :110  [32mCCbDUL1d[0;39m ------------- 结束 耗时：21 ms -------------
2020-08-24 16:33:08.018 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mMp29JSJp[0;39m ==> Parameters: 
2020-08-24 16:33:08.038 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==    Columns: id, parent, name, sort
2020-08-24 16:33:08.038 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 16:33:08.041 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 16:33:08.041 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 16:33:08.041 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 16:33:08.042 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 16:33:08.042 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 16:33:08.042 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 16:33:08.043 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 16:33:08.043 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 16:33:08.043 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 16:33:08.045 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 16:33:08.045 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 16:33:08.045 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 16:33:08.046 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 16:33:08.046 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 16:33:08.047 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 16:33:08.047 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 16:33:08.048 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 16:33:08.048 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 16:33:08.048 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 16:33:08.049 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 16:33:08.049 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 16:33:08.049 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 16:33:08.050 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 16:33:08.050 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 16:33:08.050 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 16:33:08.050 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 16:33:08.051 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 16:33:08.051 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 16:33:08.052 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 16:33:08.052 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 16:33:08.052 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 16:33:08.053 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 16:33:08.053 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 16:33:08.053 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 16:33:08.054 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 16:33:08.054 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 16:33:08.054 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 16:33:08.054 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 16:33:08.055 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 16:33:08.055 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 16:33:08.055 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 16:33:08.055 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 16:33:08.056 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 16:33:08.056 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 16:33:08.056 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mMp29JSJp[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 16:33:08.057 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mMp29JSJp[0;39m <==      Total: 46
2020-08-24 16:33:08.060 INFO  com.course.server.config.LogAspect                :109  [32mMp29JSJp[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 16:33:08.061 INFO  com.course.server.config.LogAspect                :110  [32mMp29JSJp[0;39m ------------- 结束 耗时：54 ms -------------
2020-08-24 16:36:32.571 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:36:45.332 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-24 16:36:45.341 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598301405340, current=DOWN, previous=UP]
2020-08-24 16:36:45.347 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:36:45.373 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:36:45.477 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-24 16:36:45.518 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-24 16:36:48.523 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-24 16:36:48.532 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-24 16:36:48.555 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-24 16:36:48.557 INFO  com.zaxxer.hikari.HikariDataSource                :350  [32m        [0;39m HikariPool-15 - Shutdown initiated...
2020-08-24 16:36:48.566 INFO  com.zaxxer.hikari.HikariDataSource                :352  [32m        [0;39m HikariPool-15 - Shutdown completed.
2020-08-24 16:36:50.673 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:36:50.701 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 16:36:50.960 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=ec05de87-a8fc-3791-ae1e-6a7579a56e6e
2020-08-24 16:36:50.979 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:36:50.987 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:36:51.038 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 16:36:51.095 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 16:36:51.096 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 16:36:51.096 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 16:36:51.096 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 16:36:51.104 INFO  o.a.c.c.C.[Tomcat-5].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 16:36:51.104 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 400 ms
2020-08-24 16:36:51.226 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-24 16:36:51.226 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-24 16:36:51.403 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 16:36:51.749 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-24 16:36:51.850 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-24 16:36:51.887 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-24 16:36:51.930 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-24 16:36:51.933 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-24 16:36:51.937 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-24 16:36:51.937 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-24 16:36:51.937 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-24 16:36:51.938 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-24 16:36:51.998 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:36:51.999 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-24 16:36:51.999 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-24 16:36:51.999 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-24 16:36:51.999 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-24 16:36:51.999 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-24 16:36:52.000 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-24 16:36:52.000 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-24 16:36:52.008 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-24 16:36:52.008 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-24 16:36:52.008 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-24 16:36:52.009 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598301412009 with initial instances count: 3
2020-08-24 16:36:52.014 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-24 16:36:52.014 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598301412014, current=UP, previous=STARTING]
2020-08-24 16:36:52.015 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:36:52.020 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-24 16:36:52.021 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-24 16:36:52.022 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:36:52.022 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-24 16:36:52.025 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.455 seconds (JVM running for 128186.96)
2020-08-24 16:36:52.028 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-24 16:36:52.030 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-24 16:36:52.030 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-24 16:36:57.200 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-24 16:36:57.200 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598301417200, current=DOWN, previous=UP]
2020-08-24 16:36:57.200 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:36:57.201 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-24 16:36:57.201 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-24 16:36:57.206 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:36:57.206 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-24 16:36:57.212 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-24 16:36:57.215 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-24 16:36:57.474 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:36:57.502 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 16:36:57.829 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=ec05de87-a8fc-3791-ae1e-6a7579a56e6e
2020-08-24 16:36:57.864 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:36:57.874 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:36:57.981 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 16:36:58.098 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 16:36:58.099 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 16:36:58.099 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 16:36:58.099 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 16:36:58.115 INFO  o.a.c.c.C.[Tomcat-5].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 16:36:58.115 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 611 ms
2020-08-24 16:36:58.295 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-24 16:36:58.295 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-24 16:36:58.553 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 16:36:58.906 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-24 16:36:59.048 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-24 16:36:59.086 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-24 16:36:59.135 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-24 16:36:59.138 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-24 16:36:59.140 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-24 16:36:59.140 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-24 16:36:59.141 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-24 16:36:59.141 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-24 16:36:59.332 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:36:59.333 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-24 16:36:59.334 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-24 16:36:59.334 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-24 16:36:59.335 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-24 16:36:59.338 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-24 16:36:59.341 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-24 16:36:59.341 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-24 16:36:59.345 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-24 16:36:59.347 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-24 16:36:59.348 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-24 16:36:59.350 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598301419350 with initial instances count: 3
2020-08-24 16:36:59.370 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-24 16:36:59.371 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598301419371, current=UP, previous=STARTING]
2020-08-24 16:36:59.372 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:36:59.380 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:36:59.381 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-24 16:36:59.383 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-24 16:36:59.384 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-24 16:36:59.392 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.96 seconds (JVM running for 128194.327)
2020-08-24 16:36:59.395 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-24 16:36:59.396 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-24 16:36:59.396 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-24 16:37:09.413 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-24 16:37:09.413 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598301429413, current=DOWN, previous=UP]
2020-08-24 16:37:09.414 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:37:09.415 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-24 16:37:09.416 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-24 16:37:09.424 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:37:09.425 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-24 16:37:09.432 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-24 16:37:09.436 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-24 16:37:09.883 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:37:09.937 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 16:37:10.464 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=d2ae90ea-db53-3263-9fd0-bf573e41d740
2020-08-24 16:37:10.495 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:37:10.519 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:37:10.578 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 16:37:10.603 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 16:37:10.604 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 16:37:10.604 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 16:37:10.604 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 16:37:10.614 INFO  o.a.c.c.C.[Tomcat-5].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 16:37:10.614 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 673 ms
2020-08-24 16:37:10.740 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-24 16:37:10.740 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-24 16:37:10.899 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 16:37:11.108 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-24 16:37:11.187 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-24 16:37:11.211 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-24 16:37:11.236 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-24 16:37:11.245 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-24 16:37:11.247 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-24 16:37:11.247 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-24 16:37:11.247 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-24 16:37:11.248 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-24 16:37:11.301 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:37:11.302 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-24 16:37:11.302 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-24 16:37:11.302 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-24 16:37:11.302 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-24 16:37:11.302 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-24 16:37:11.303 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-24 16:37:11.303 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-24 16:37:11.307 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-24 16:37:11.308 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-24 16:37:11.309 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-24 16:37:11.309 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598301431309 with initial instances count: 3
2020-08-24 16:37:11.315 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-24 16:37:11.316 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598301431316, current=UP, previous=STARTING]
2020-08-24 16:37:11.316 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:37:11.323 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-24 16:37:11.325 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-24 16:37:11.326 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-24 16:37:11.330 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.519 seconds (JVM running for 128206.265)
2020-08-24 16:37:11.332 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:37:11.335 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-24 16:37:11.336 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-24 16:37:11.336 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-24 16:37:15.557 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-24 16:37:15.557 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598301435557, current=DOWN, previous=UP]
2020-08-24 16:37:15.558 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:37:15.558 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-24 16:37:15.559 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-24 16:37:15.567 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:37:15.568 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-24 16:37:15.574 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-24 16:37:15.576 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-24 16:37:15.813 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:37:15.834 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 16:37:16.058 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=d2ae90ea-db53-3263-9fd0-bf573e41d740
2020-08-24 16:37:16.075 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:37:16.081 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:37:16.128 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 16:37:16.150 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 16:37:16.151 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 16:37:16.151 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 16:37:16.151 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 16:37:16.157 INFO  o.a.c.c.C.[Tomcat-5].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 16:37:16.157 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 322 ms
2020-08-24 16:37:16.287 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-24 16:37:16.287 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-24 16:37:16.419 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 16:37:16.699 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-24 16:37:16.776 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-24 16:37:16.802 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-24 16:37:16.829 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-24 16:37:16.831 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-24 16:37:16.835 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-24 16:37:16.835 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-24 16:37:16.835 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-24 16:37:16.836 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-24 16:37:16.895 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:37:16.895 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-24 16:37:16.896 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-24 16:37:16.896 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-24 16:37:16.896 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-24 16:37:16.896 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-24 16:37:16.896 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-24 16:37:16.896 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-24 16:37:16.900 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-24 16:37:16.901 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-24 16:37:16.902 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-24 16:37:16.903 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598301436903 with initial instances count: 3
2020-08-24 16:37:16.910 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-24 16:37:16.911 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598301436911, current=UP, previous=STARTING]
2020-08-24 16:37:16.911 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:37:16.917 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-24 16:37:16.919 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-24 16:37:16.920 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-24 16:37:16.921 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:37:16.923 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.142 seconds (JVM running for 128211.857)
2020-08-24 16:37:16.924 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-24 16:37:16.924 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-24 16:37:16.924 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-24 16:37:36.307 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-24 16:37:36.307 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598301456307, current=DOWN, previous=UP]
2020-08-24 16:37:36.307 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:37:36.308 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-24 16:37:36.309 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-24 16:37:36.320 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:37:36.320 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-24 16:37:36.327 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-24 16:37:36.330 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-24 16:37:36.572 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:37:36.591 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 16:37:36.774 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=713f4e4c-adb7-32a1-ba85-bcdb62bef0ec
2020-08-24 16:37:36.788 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:37:36.799 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:37:36.841 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 16:37:36.862 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 16:37:36.862 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 16:37:36.863 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 16:37:36.863 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 16:37:36.868 INFO  o.a.c.c.C.[Tomcat-5].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 16:37:36.868 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 275 ms
2020-08-24 16:37:36.960 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-24 16:37:36.960 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-24 16:37:37.064 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 16:37:37.240 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-24 16:37:37.313 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-24 16:37:37.333 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-24 16:37:37.352 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-24 16:37:37.354 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-24 16:37:37.358 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-24 16:37:37.358 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-24 16:37:37.358 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-24 16:37:37.358 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-24 16:37:37.404 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:37:37.405 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-24 16:37:37.405 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-24 16:37:37.405 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-24 16:37:37.405 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-24 16:37:37.405 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-24 16:37:37.405 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-24 16:37:37.405 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-24 16:37:37.416 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-24 16:37:37.416 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-24 16:37:37.417 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-24 16:37:37.417 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598301457417 with initial instances count: 3
2020-08-24 16:37:37.422 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-24 16:37:37.422 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598301457422, current=UP, previous=STARTING]
2020-08-24 16:37:37.422 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:37:37.427 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-24 16:37:37.428 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-24 16:37:37.429 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-24 16:37:37.431 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 0.893 seconds (JVM running for 128232.365)
2020-08-24 16:37:37.432 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-24 16:37:37.432 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-24 16:37:37.433 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-24 16:37:37.445 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:41:55.071 INFO  o.a.c.c.C.[Tomcat-5].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-24 16:41:55.072 INFO  org.springframework.web.servlet.DispatcherServlet :525  [32m        [0;39m Initializing Servlet 'dispatcherServlet'
2020-08-24 16:41:55.077 INFO  org.springframework.web.servlet.DispatcherServlet :547  [32m        [0;39m Completed initialization in 5 ms
2020-08-24 16:41:55.084 INFO  com.course.server.config.LogAspect                :76   [32mVEg7RuuW[0;39m ------------- 【category】操作开始 -------------
2020-08-24 16:41:55.084 INFO  com.course.server.config.LogAspect                :77   [32mVEg7RuuW[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 16:41:55.084 INFO  com.course.server.config.LogAspect                :78   [32mVEg7RuuW[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 16:41:55.085 INFO  com.course.server.config.LogAspect                :79   [32mVEg7RuuW[0;39m 远程地址: 192.168.1.4
2020-08-24 16:41:55.086 INFO  com.course.server.config.LogAspect                :97   [32mVEg7RuuW[0;39m 请求参数: []
2020-08-24 16:41:55.091 INFO  com.course.server.config.LogAspect                :76   [32mXJr4Hrot[0;39m ------------- 【course】查询开始 -------------
2020-08-24 16:41:55.092 INFO  com.course.server.config.LogAspect                :77   [32mXJr4Hrot[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 16:41:55.092 INFO  com.course.server.config.LogAspect                :78   [32mXJr4Hrot[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 16:41:55.092 INFO  com.course.server.config.LogAspect                :79   [32mXJr4Hrot[0;39m 远程地址: 192.168.1.4
2020-08-24 16:41:55.094 INFO  com.zaxxer.hikari.HikariDataSource                :110  [32mVEg7RuuW[0;39m HikariPool-16 - Starting...
2020-08-24 16:41:55.095 INFO  com.course.server.config.LogAspect                :97   [32mXJr4Hrot[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 16:41:55.097 INFO  c.c.business.controller.admin.CourseController    :31   [32mXJr4Hrot[0;39m pageDto: 1
2020-08-24 16:41:55.109 INFO  com.zaxxer.hikari.HikariDataSource                :123  [32mVEg7RuuW[0;39m HikariPool-16 - Start completed.
2020-08-24 16:41:55.112 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mVEg7RuuW[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 16:41:55.113 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mVEg7RuuW[0;39m ==> Parameters: 
2020-08-24 16:41:55.115 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==    Columns: id, parent, name, sort
2020-08-24 16:41:55.116 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 16:41:55.116 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 16:41:55.117 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 16:41:55.117 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 16:41:55.117 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 16:41:55.117 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mXJr4Hrot[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 16:41:55.118 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 16:41:55.118 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mXJr4Hrot[0;39m ==> Parameters: 
2020-08-24 16:41:55.119 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 16:41:55.120 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mXJr4Hrot[0;39m <==    Columns: count(0)
2020-08-24 16:41:55.121 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mXJr4Hrot[0;39m <==        Row: 2
2020-08-24 16:41:55.121 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 16:41:55.121 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 16:41:55.122 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 16:41:55.122 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mXJr4Hrot[0;39m <==      Total: 1
2020-08-24 16:41:55.122 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 16:41:55.122 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 16:41:55.122 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mXJr4Hrot[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 16:41:55.123 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 16:41:55.123 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mXJr4Hrot[0;39m ==> Parameters: 5(Integer)
2020-08-24 16:41:55.123 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 16:41:55.123 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 16:41:55.124 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 16:41:55.124 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mXJr4Hrot[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 16:41:55.124 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mXJr4Hrot[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-22 20:43:56.371
2020-08-24 16:41:55.125 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mXJr4Hrot[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 16:41:55.126 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mXJr4Hrot[0;39m <==      Total: 2
2020-08-24 16:41:55.127 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 16:41:55.127 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 16:41:55.128 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 16:41:55.128 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 16:41:55.128 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 16:41:55.128 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 16:41:55.129 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 16:41:55.129 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 16:41:55.129 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 16:41:55.129 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 16:41:55.129 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 16:41:55.130 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 16:41:55.130 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 16:41:55.130 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 16:41:55.130 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 16:41:55.130 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 16:41:55.131 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 16:41:55.131 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 16:41:55.131 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 16:41:55.131 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 16:41:55.131 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 16:41:55.132 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 16:41:55.132 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 16:41:55.132 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 16:41:55.132 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 16:41:55.132 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 16:41:55.133 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 16:41:55.133 INFO  com.course.server.config.LogAspect                :109  [32mXJr4Hrot[0;39m 返回结果: {"content":{"list":[{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598143436371},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":2},"success":true}
2020-08-24 16:41:55.133 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 16:41:55.133 INFO  com.course.server.config.LogAspect                :110  [32mXJr4Hrot[0;39m ------------- 结束 耗时：42 ms -------------
2020-08-24 16:41:55.133 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 16:41:55.133 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mVEg7RuuW[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 16:41:55.134 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mVEg7RuuW[0;39m <==      Total: 46
2020-08-24 16:41:55.151 INFO  com.course.server.config.LogAspect                :109  [32mVEg7RuuW[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 16:41:55.152 INFO  com.course.server.config.LogAspect                :110  [32mVEg7RuuW[0;39m ------------- 结束 耗时：72 ms -------------
2020-08-24 16:42:24.428 INFO  com.course.server.config.LogAspect                :76   [32mv5nk7y8O[0;39m ------------- 【course】保存开始 -------------
2020-08-24 16:42:24.428 INFO  com.course.server.config.LogAspect                :77   [32mv5nk7y8O[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/save POST
2020-08-24 16:42:24.428 INFO  com.course.server.config.LogAspect                :78   [32mv5nk7y8O[0;39m 类名方法: com.course.business.controller.admin.CourseController.save
2020-08-24 16:42:24.428 INFO  com.course.server.config.LogAspect                :79   [32mv5nk7y8O[0;39m 远程地址: 192.168.1.4
2020-08-24 16:42:24.428 INFO  com.course.server.config.LogAspect                :97   [32mv5nk7y8O[0;39m 请求参数: [{"name":"test"}]
2020-08-24 16:42:24.431 DEBUG com.course.server.mapper.CourseMapper.insert      :159  [32mv5nk7y8O[0;39m ==>  Preparing: insert into course (id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at ) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-08-24 16:42:24.434 DEBUG com.course.server.mapper.CourseMapper.insert      :159  [32mv5nk7y8O[0;39m ==> Parameters: D5n6XQsE(String), test(String), null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.429(Timestamp), 2020-08-24 16:42:24.429(Timestamp)
2020-08-24 16:42:24.440 DEBUG com.course.server.mapper.CourseMapper.insert      :159  [32mv5nk7y8O[0;39m <==    Updates: 1
2020-08-24 16:42:24.441 INFO  com.course.server.config.LogAspect                :109  [32mv5nk7y8O[0;39m 返回结果: {"content":{"name":"test"},"success":true}
2020-08-24 16:42:24.441 INFO  com.course.server.config.LogAspect                :110  [32mv5nk7y8O[0;39m ------------- 结束 耗时：13 ms -------------
2020-08-24 16:42:24.486 INFO  com.course.server.config.LogAspect                :76   [32m6v22AVfM[0;39m ------------- 【course】查询开始 -------------
2020-08-24 16:42:24.486 INFO  com.course.server.config.LogAspect                :77   [32m6v22AVfM[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 16:42:24.486 INFO  com.course.server.config.LogAspect                :78   [32m6v22AVfM[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 16:42:24.487 INFO  com.course.server.config.LogAspect                :79   [32m6v22AVfM[0;39m 远程地址: 192.168.1.4
2020-08-24 16:42:24.487 INFO  com.course.server.config.LogAspect                :97   [32m6v22AVfM[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 16:42:24.487 INFO  c.c.business.controller.admin.CourseController    :31   [32m6v22AVfM[0;39m pageDto: 1
2020-08-24 16:42:24.488 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m6v22AVfM[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 16:42:24.488 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m6v22AVfM[0;39m ==> Parameters: 
2020-08-24 16:42:24.489 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m6v22AVfM[0;39m <==    Columns: count(0)
2020-08-24 16:42:24.489 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m6v22AVfM[0;39m <==        Row: 3
2020-08-24 16:42:24.490 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m6v22AVfM[0;39m <==      Total: 1
2020-08-24 16:42:24.490 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m6v22AVfM[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 16:42:24.490 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m6v22AVfM[0;39m ==> Parameters: 5(Integer)
2020-08-24 16:42:24.491 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m6v22AVfM[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 16:42:24.491 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m6v22AVfM[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.429, 2020-08-24 16:42:24.429
2020-08-24 16:42:24.491 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m6v22AVfM[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-22 20:43:56.371
2020-08-24 16:42:24.492 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m6v22AVfM[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 16:42:24.492 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m6v22AVfM[0;39m <==      Total: 3
2020-08-24 16:42:24.492 INFO  com.course.server.config.LogAspect                :109  [32m6v22AVfM[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744429,"id":"D5n6XQsE","name":"test","updatedAt":1598301744429},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598143436371},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-24 16:42:24.492 INFO  com.course.server.config.LogAspect                :110  [32m6v22AVfM[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-24 16:42:37.416 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:44:13.761 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-24 16:44:13.761 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598301853761, current=DOWN, previous=UP]
2020-08-24 16:44:13.761 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:44:13.762 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-24 16:44:13.762 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-24 16:44:13.769 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:44:13.769 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-24 16:44:13.775 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-24 16:44:13.778 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-24 16:44:13.778 INFO  com.zaxxer.hikari.HikariDataSource                :350  [32m        [0;39m HikariPool-16 - Shutdown initiated...
2020-08-24 16:44:13.781 INFO  com.zaxxer.hikari.HikariDataSource                :352  [32m        [0;39m HikariPool-16 - Shutdown completed.
2020-08-24 16:44:14.123 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:44:14.143 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 16:44:14.444 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=713f4e4c-adb7-32a1-ba85-bcdb62bef0ec
2020-08-24 16:44:14.461 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:44:14.468 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:44:14.525 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 16:44:14.561 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 16:44:14.561 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 16:44:14.561 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 16:44:14.562 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 16:44:14.570 INFO  o.a.c.c.C.[Tomcat-5].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 16:44:14.570 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 424 ms
2020-08-24 16:44:14.709 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-24 16:44:14.709 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-24 16:44:14.823 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 16:44:15.067 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-24 16:44:15.144 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-24 16:44:15.169 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-24 16:44:15.192 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-24 16:44:15.195 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-24 16:44:15.198 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-24 16:44:15.198 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-24 16:44:15.198 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-24 16:44:15.198 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-24 16:44:15.262 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:44:15.263 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-24 16:44:15.263 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-24 16:44:15.263 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-24 16:44:15.264 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-24 16:44:15.264 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-24 16:44:15.264 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-24 16:44:15.264 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-24 16:44:15.269 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-24 16:44:15.269 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-24 16:44:15.271 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-24 16:44:15.271 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598301855271 with initial instances count: 3
2020-08-24 16:44:15.282 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-24 16:44:15.282 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598301855282, current=UP, previous=STARTING]
2020-08-24 16:44:15.283 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:44:15.293 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-24 16:44:15.298 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-24 16:44:15.299 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-24 16:44:15.302 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.218 seconds (JVM running for 128630.224)
2020-08-24 16:44:15.304 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-24 16:44:15.304 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-24 16:44:15.304 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-24 16:44:15.306 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:45:20.088 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-24 16:45:20.089 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598301920089, current=DOWN, previous=UP]
2020-08-24 16:45:20.090 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:45:20.091 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-24 16:45:20.092 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-24 16:45:20.103 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:45:20.103 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-24 16:45:20.110 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-24 16:45:20.115 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-24 16:45:20.520 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:45:20.544 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 16:45:20.778 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=713f4e4c-adb7-32a1-ba85-bcdb62bef0ec
2020-08-24 16:45:20.795 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:45:20.802 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:45:20.871 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 16:45:20.899 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 16:45:20.899 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 16:45:20.899 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 16:45:20.899 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 16:45:20.908 INFO  o.a.c.c.C.[Tomcat-5].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 16:45:20.908 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 362 ms
2020-08-24 16:45:21.044 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-24 16:45:21.044 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-24 16:45:21.151 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 16:45:21.315 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-24 16:45:21.399 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-24 16:45:21.417 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-24 16:45:21.434 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-24 16:45:21.435 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-24 16:45:21.437 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-24 16:45:21.437 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-24 16:45:21.437 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-24 16:45:21.437 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-24 16:45:21.485 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:45:21.486 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-24 16:45:21.486 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-24 16:45:21.486 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-24 16:45:21.486 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-24 16:45:21.486 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-24 16:45:21.487 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-24 16:45:21.487 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-24 16:45:21.508 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-24 16:45:21.509 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-24 16:45:21.509 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-24 16:45:21.510 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598301921510 with initial instances count: 3
2020-08-24 16:45:21.515 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-24 16:45:21.515 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598301921515, current=UP, previous=STARTING]
2020-08-24 16:45:21.515 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:45:21.521 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-24 16:45:21.522 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-24 16:45:21.523 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-24 16:45:21.525 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.059 seconds (JVM running for 128696.446)
2020-08-24 16:45:21.527 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-24 16:45:21.527 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-24 16:45:21.527 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-24 16:45:21.550 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:48:10.180 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-24 16:48:10.180 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302090180, current=DOWN, previous=UP]
2020-08-24 16:48:10.180 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:48:10.181 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-24 16:48:10.182 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-24 16:48:10.189 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:48:10.189 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-24 16:48:10.196 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-24 16:48:10.198 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-24 16:48:10.456 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:48:10.482 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 16:48:10.775 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=713f4e4c-adb7-32a1-ba85-bcdb62bef0ec
2020-08-24 16:48:10.801 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:48:10.810 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:48:10.866 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 16:48:10.888 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 16:48:10.888 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 16:48:10.888 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 16:48:10.889 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 16:48:10.897 INFO  o.a.c.c.C.[Tomcat-5].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 16:48:10.898 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 414 ms
2020-08-24 16:48:11.047 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-24 16:48:11.047 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-24 16:48:11.157 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 16:48:11.322 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-24 16:48:11.386 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-24 16:48:11.403 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-24 16:48:11.419 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-24 16:48:11.421 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-24 16:48:11.422 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-24 16:48:11.422 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-24 16:48:11.422 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-24 16:48:11.422 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-24 16:48:11.473 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:48:11.473 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-24 16:48:11.473 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-24 16:48:11.474 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-24 16:48:11.474 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-24 16:48:11.474 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-24 16:48:11.474 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-24 16:48:11.474 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-24 16:48:11.478 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-24 16:48:11.479 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-24 16:48:11.479 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-24 16:48:11.479 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598302091479 with initial instances count: 3
2020-08-24 16:48:11.484 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-24 16:48:11.484 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302091484, current=UP, previous=STARTING]
2020-08-24 16:48:11.485 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:48:11.489 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-24 16:48:11.490 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-24 16:48:11.491 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-24 16:48:11.493 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.081 seconds (JVM running for 128866.408)
2020-08-24 16:48:11.494 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-24 16:48:11.494 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-24 16:48:11.495 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-24 16:48:11.495 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:50:00.065 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-24 16:50:00.067 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302200067, current=DOWN, previous=UP]
2020-08-24 16:50:00.067 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:50:00.069 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-24 16:50:00.071 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-24 16:50:00.091 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:50:00.091 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-24 16:50:00.110 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-24 16:50:00.120 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-24 16:50:00.637 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:50:00.688 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 16:50:00.956 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=713f4e4c-adb7-32a1-ba85-bcdb62bef0ec
2020-08-24 16:50:00.978 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:50:00.985 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:50:01.042 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 16:50:01.067 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 16:50:01.068 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 16:50:01.068 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 16:50:01.068 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 16:50:01.075 INFO  o.a.c.c.C.[Tomcat-5].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 16:50:01.076 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 385 ms
2020-08-24 16:50:01.240 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-24 16:50:01.241 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-24 16:50:01.389 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 16:50:01.584 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-24 16:50:01.687 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-24 16:50:01.714 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-24 16:50:01.743 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-24 16:50:01.746 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-24 16:50:01.748 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-24 16:50:01.748 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-24 16:50:01.748 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-24 16:50:01.748 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-24 16:50:01.804 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:50:01.805 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-24 16:50:01.805 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-24 16:50:01.805 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-24 16:50:01.805 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-24 16:50:01.806 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-24 16:50:01.806 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-24 16:50:01.806 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-24 16:50:01.810 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-24 16:50:01.811 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-24 16:50:01.811 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-24 16:50:01.812 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598302201812 with initial instances count: 3
2020-08-24 16:50:01.817 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-24 16:50:01.817 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302201817, current=UP, previous=STARTING]
2020-08-24 16:50:01.818 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:50:01.826 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-24 16:50:01.834 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:50:01.835 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-24 16:50:01.835 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-24 16:50:01.838 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.344 seconds (JVM running for 128976.75)
2020-08-24 16:50:01.840 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-24 16:50:01.841 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-24 16:50:01.841 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-24 16:50:09.078 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-24 16:50:09.078 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302209078, current=DOWN, previous=UP]
2020-08-24 16:50:09.078 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:50:09.079 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-24 16:50:09.079 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-24 16:50:09.091 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:50:09.092 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-24 16:50:09.100 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-24 16:50:09.105 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-24 16:50:09.383 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:50:09.404 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 16:50:09.633 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=fea8d8b5-0ccc-38ff-92b2-babe942140af
2020-08-24 16:50:09.651 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:50:09.657 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:50:09.711 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 16:50:09.743 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 16:50:09.743 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 16:50:09.744 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 16:50:09.744 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 16:50:09.752 INFO  o.a.c.c.C.[Tomcat-5].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 16:50:09.752 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 346 ms
2020-08-24 16:50:09.875 WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:558  [32m        [0;39m Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'courseController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.course.server.service.CourseService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@javax.annotation.Resource(shareable=true, lookup=, name=, description=, authenticationType=CONTAINER, type=class java.lang.Object, mappedName=)}
2020-08-24 16:50:09.876 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Stopping service [Tomcat]
2020-08-24 16:50:09.880 INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener:136  [32m        [0;39m 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-24 16:50:10.075 ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter  :40   [32m        [0;39m 

***************************
APPLICATION FAILED TO START
***************************

Description:

A component required a bean of type 'com.course.server.service.CourseService' that could not be found.


Action:

Consider defining a bean of type 'com.course.server.service.CourseService' in your configuration.

2020-08-24 16:51:12.245 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:51:12.266 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 16:51:12.493 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=713f4e4c-adb7-32a1-ba85-bcdb62bef0ec
2020-08-24 16:51:12.508 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:51:12.514 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:51:12.570 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 16:51:12.609 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 16:51:12.610 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 16:51:12.611 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 16:51:12.628 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 16:51:12.642 INFO  o.a.c.c.C.[Tomcat-6].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 16:51:12.642 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 374 ms
2020-08-24 16:51:12.811 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-24 16:51:12.811 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-24 16:51:12.981 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 16:51:13.233 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-24 16:51:13.311 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-24 16:51:13.329 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-24 16:51:13.353 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-24 16:51:13.354 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-24 16:51:13.355 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-24 16:51:13.356 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-24 16:51:13.356 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-24 16:51:13.356 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-24 16:51:13.445 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:51:13.445 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-24 16:51:13.446 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-24 16:51:13.446 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-24 16:51:13.446 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-24 16:51:13.446 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-24 16:51:13.446 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-24 16:51:13.446 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-24 16:51:13.450 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-24 16:51:13.451 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-24 16:51:13.451 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-24 16:51:13.452 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598302273452 with initial instances count: 1
2020-08-24 16:51:13.456 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-24 16:51:13.457 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302273457, current=UP, previous=STARTING]
2020-08-24 16:51:13.457 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:51:13.462 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-24 16:51:13.463 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-24 16:51:13.463 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-24 16:51:13.465 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.261 seconds (JVM running for 129048.375)
2020-08-24 16:51:13.466 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:51:13.467 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-24 16:51:13.467 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-24 16:51:13.467 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-24 16:52:15.624 INFO  o.a.c.c.C.[Tomcat-6].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-24 16:52:15.624 INFO  org.springframework.web.servlet.DispatcherServlet :525  [32m        [0;39m Initializing Servlet 'dispatcherServlet'
2020-08-24 16:52:15.629 INFO  org.springframework.web.servlet.DispatcherServlet :547  [32m        [0;39m Completed initialization in 5 ms
2020-08-24 16:52:15.633 INFO  com.course.server.config.LogAspect                :76   [32muSEn1HAP[0;39m ------------- 【category】操作开始 -------------
2020-08-24 16:52:15.633 INFO  com.course.server.config.LogAspect                :77   [32muSEn1HAP[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 16:52:15.633 INFO  com.course.server.config.LogAspect                :78   [32muSEn1HAP[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 16:52:15.633 INFO  com.course.server.config.LogAspect                :79   [32muSEn1HAP[0;39m 远程地址: 192.168.1.4
2020-08-24 16:52:15.634 INFO  com.course.server.config.LogAspect                :97   [32muSEn1HAP[0;39m 请求参数: []
2020-08-24 16:52:15.646 INFO  com.zaxxer.hikari.HikariDataSource                :110  [32muSEn1HAP[0;39m HikariPool-17 - Starting...
2020-08-24 16:52:15.652 INFO  com.zaxxer.hikari.HikariDataSource                :123  [32muSEn1HAP[0;39m HikariPool-17 - Start completed.
2020-08-24 16:52:15.653 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32muSEn1HAP[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 16:52:15.653 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32muSEn1HAP[0;39m ==> Parameters: 
2020-08-24 16:52:15.655 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==    Columns: id, parent, name, sort
2020-08-24 16:52:15.656 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 16:52:15.656 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 16:52:15.656 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 16:52:15.657 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 16:52:15.657 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 16:52:15.657 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 16:52:15.657 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 16:52:15.657 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 16:52:15.658 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 16:52:15.658 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 16:52:15.658 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 16:52:15.658 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 16:52:15.658 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 16:52:15.659 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 16:52:15.659 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 16:52:15.659 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 16:52:15.660 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 16:52:15.660 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 16:52:15.660 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 16:52:15.661 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 16:52:15.661 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 16:52:15.661 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 16:52:15.661 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 16:52:15.661 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 16:52:15.661 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 16:52:15.662 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 16:52:15.662 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 16:52:15.662 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 16:52:15.662 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 16:52:15.662 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 16:52:15.662 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 16:52:15.663 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 16:52:15.663 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 16:52:15.663 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 16:52:15.663 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 16:52:15.663 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 16:52:15.663 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 16:52:15.664 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 16:52:15.664 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 16:52:15.664 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 16:52:15.664 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 16:52:15.664 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 16:52:15.664 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 16:52:15.664 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 16:52:15.665 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 16:52:15.665 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32muSEn1HAP[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 16:52:15.665 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32muSEn1HAP[0;39m <==      Total: 46
2020-08-24 16:52:15.671 INFO  com.course.server.config.LogAspect                :109  [32muSEn1HAP[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 16:52:15.671 INFO  com.course.server.config.LogAspect                :110  [32muSEn1HAP[0;39m ------------- 结束 耗时：40 ms -------------
2020-08-24 16:52:17.106 INFO  com.course.server.config.LogAspect                :76   [32mpITKQfqx[0;39m ------------- 【category】操作开始 -------------
2020-08-24 16:52:17.106 INFO  com.course.server.config.LogAspect                :77   [32mpITKQfqx[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 16:52:17.107 INFO  com.course.server.config.LogAspect                :78   [32mpITKQfqx[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 16:52:17.110 INFO  com.course.server.config.LogAspect                :79   [32mpITKQfqx[0;39m 远程地址: 192.168.1.4
2020-08-24 16:52:17.111 INFO  com.course.server.config.LogAspect                :97   [32mpITKQfqx[0;39m 请求参数: []
2020-08-24 16:52:17.113 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mpITKQfqx[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 16:52:17.117 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mpITKQfqx[0;39m ==> Parameters: 
2020-08-24 16:52:17.118 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==    Columns: id, parent, name, sort
2020-08-24 16:52:17.118 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 16:52:17.118 INFO  com.course.server.config.LogAspect                :76   [32mVxOGTfZd[0;39m ------------- 【course】查询开始 -------------
2020-08-24 16:52:17.119 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 16:52:17.119 INFO  com.course.server.config.LogAspect                :77   [32mVxOGTfZd[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 16:52:17.119 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 16:52:17.119 INFO  com.course.server.config.LogAspect                :78   [32mVxOGTfZd[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 16:52:17.119 INFO  com.course.server.config.LogAspect                :79   [32mVxOGTfZd[0;39m 远程地址: 192.168.1.4
2020-08-24 16:52:17.119 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 16:52:17.119 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 16:52:17.120 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 16:52:17.120 INFO  com.course.server.config.LogAspect                :97   [32mVxOGTfZd[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 16:52:17.120 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 16:52:17.120 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 16:52:17.120 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 16:52:17.121 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 16:52:17.121 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 16:52:17.121 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 16:52:17.121 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 16:52:17.121 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 16:52:17.122 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 16:52:17.122 INFO  c.c.business.controller.admin.CourseController    :31   [32mVxOGTfZd[0;39m pageDto: 1
2020-08-24 16:52:17.122 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 16:52:17.122 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 16:52:17.122 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 16:52:17.122 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 16:52:17.123 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 16:52:17.123 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 16:52:17.123 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 16:52:17.123 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 16:52:17.123 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 16:52:17.124 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 16:52:17.124 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 16:52:17.124 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 16:52:17.124 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 16:52:17.124 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 16:52:17.125 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 16:52:17.125 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 16:52:17.125 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 16:52:17.125 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 16:52:17.125 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 16:52:17.126 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 16:52:17.126 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 16:52:17.126 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 16:52:17.126 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 16:52:17.126 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 16:52:17.127 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 16:52:17.127 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 16:52:17.127 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 16:52:17.127 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 16:52:17.127 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 16:52:17.128 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 16:52:17.128 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mpITKQfqx[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 16:52:17.128 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mpITKQfqx[0;39m <==      Total: 46
2020-08-24 16:52:17.129 INFO  com.course.server.config.LogAspect                :109  [32mpITKQfqx[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 16:52:17.129 INFO  com.course.server.config.LogAspect                :110  [32mpITKQfqx[0;39m ------------- 结束 耗时：23 ms -------------
2020-08-24 16:52:17.130 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mVxOGTfZd[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 16:52:17.130 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mVxOGTfZd[0;39m ==> Parameters: 
2020-08-24 16:52:17.132 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mVxOGTfZd[0;39m <==    Columns: count(0)
2020-08-24 16:52:17.132 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mVxOGTfZd[0;39m <==        Row: 3
2020-08-24 16:52:17.133 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mVxOGTfZd[0;39m <==      Total: 1
2020-08-24 16:52:17.133 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mVxOGTfZd[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 16:52:17.133 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mVxOGTfZd[0;39m ==> Parameters: 5(Integer)
2020-08-24 16:52:17.135 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mVxOGTfZd[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 16:52:17.135 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mVxOGTfZd[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.429, 2020-08-24 16:42:24.429
2020-08-24 16:52:17.135 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mVxOGTfZd[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-22 20:43:56.371
2020-08-24 16:52:17.135 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mVxOGTfZd[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 16:52:17.136 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mVxOGTfZd[0;39m <==      Total: 3
2020-08-24 16:52:17.142 INFO  com.course.server.config.LogAspect                :109  [32mVxOGTfZd[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744429,"id":"D5n6XQsE","name":"test","updatedAt":1598301744429},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598143436371},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-24 16:52:17.142 INFO  com.course.server.config.LogAspect                :110  [32mVxOGTfZd[0;39m ------------- 结束 耗时：24 ms -------------
2020-08-24 16:52:49.646 INFO  com.course.server.config.LogAspect                :76   [32m2My9U4Es[0;39m ------------- 【course】保存开始 -------------
2020-08-24 16:52:49.647 INFO  com.course.server.config.LogAspect                :77   [32m2My9U4Es[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/save POST
2020-08-24 16:52:49.647 INFO  com.course.server.config.LogAspect                :78   [32m2My9U4Es[0;39m 类名方法: com.course.business.controller.admin.CourseController.save
2020-08-24 16:52:49.647 INFO  com.course.server.config.LogAspect                :79   [32m2My9U4Es[0;39m 远程地址: 192.168.1.4
2020-08-24 16:52:49.647 INFO  com.course.server.config.LogAspect                :97   [32m2My9U4Es[0;39m 请求参数: [{"categorys":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108}],"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598301744000}]
2020-08-24 16:52:49.649 DEBUG c.c.server.mapper.CourseMapper.updateByPrimaryKey :159  [32m2My9U4Es[0;39m ==>  Preparing: update course set name = ?, summary = ?, time = ?, price = ?, image = ?, level = ?, charge = ?, status = ?, enroll = ?, sort = ?, created_at = ?, updated_at = ? where id = ? 
2020-08-24 16:52:49.649 DEBUG c.c.server.mapper.CourseMapper.updateByPrimaryKey :159  [32m2My9U4Es[0;39m ==> Parameters: test(String), null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0(Timestamp), 2020-08-24 16:52:49.648(Timestamp), D5n6XQsE(String)
2020-08-24 16:52:49.653 DEBUG c.c.server.mapper.CourseMapper.updateByPrimaryKey :159  [32m2My9U4Es[0;39m <==    Updates: 1
2020-08-24 16:52:49.657 DEBUG c.c.s.mapper.CourseCategoryMapper.deleteByExample :159  [32m2My9U4Es[0;39m ==>  Preparing: delete from course_category WHERE ( course_id = ? ) 
2020-08-24 16:52:49.658 DEBUG c.c.s.mapper.CourseCategoryMapper.deleteByExample :159  [32m2My9U4Es[0;39m ==> Parameters: D5n6XQsE(String)
2020-08-24 16:52:49.659 DEBUG c.c.s.mapper.CourseCategoryMapper.deleteByExample :159  [32m2My9U4Es[0;39m <==    Updates: 0
2020-08-24 16:52:49.659 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-08-24 16:52:49.660 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==> Parameters: cdojCxfS(String), D5n6XQsE(String), 00000100(String)
2020-08-24 16:52:49.662 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m <==    Updates: 1
2020-08-24 16:52:49.662 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-08-24 16:52:49.663 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==> Parameters: 8kZn9pE8(String), D5n6XQsE(String), 00000101(String)
2020-08-24 16:52:49.665 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m <==    Updates: 1
2020-08-24 16:52:49.666 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-08-24 16:52:49.666 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==> Parameters: nXoPB2oi(String), D5n6XQsE(String), 00000102(String)
2020-08-24 16:52:49.668 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m <==    Updates: 1
2020-08-24 16:52:49.668 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-08-24 16:52:49.669 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==> Parameters: tpaLSbBg(String), D5n6XQsE(String), 00000103(String)
2020-08-24 16:52:49.670 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m <==    Updates: 1
2020-08-24 16:52:49.672 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-08-24 16:52:49.673 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==> Parameters: uqpUWw1C(String), D5n6XQsE(String), 00000104(String)
2020-08-24 16:52:49.675 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m <==    Updates: 1
2020-08-24 16:52:49.675 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-08-24 16:52:49.676 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==> Parameters: 70jecmg7(String), D5n6XQsE(String), 00000105(String)
2020-08-24 16:52:49.677 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m <==    Updates: 1
2020-08-24 16:52:49.678 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-08-24 16:52:49.679 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==> Parameters: NqsKRjmN(String), D5n6XQsE(String), 00000106(String)
2020-08-24 16:52:49.681 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m <==    Updates: 1
2020-08-24 16:52:49.682 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-08-24 16:52:49.683 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==> Parameters: KzH7HWjP(String), D5n6XQsE(String), 00000107(String)
2020-08-24 16:52:49.684 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m <==    Updates: 1
2020-08-24 16:52:49.685 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-08-24 16:52:49.685 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m ==> Parameters: 6CDIOamE(String), D5n6XQsE(String), 00000108(String)
2020-08-24 16:52:49.686 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32m2My9U4Es[0;39m <==    Updates: 1
2020-08-24 16:52:49.687 INFO  com.course.server.config.LogAspect                :109  [32m2My9U4Es[0;39m 返回结果: {"content":{"categorys":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108}],"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598301744000},"success":true}
2020-08-24 16:52:49.687 INFO  com.course.server.config.LogAspect                :110  [32m2My9U4Es[0;39m ------------- 结束 耗时：41 ms -------------
2020-08-24 16:52:49.764 INFO  com.course.server.config.LogAspect                :76   [32m3DooCHdO[0;39m ------------- 【course】查询开始 -------------
2020-08-24 16:52:49.765 INFO  com.course.server.config.LogAspect                :77   [32m3DooCHdO[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 16:52:49.765 INFO  com.course.server.config.LogAspect                :78   [32m3DooCHdO[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 16:52:49.765 INFO  com.course.server.config.LogAspect                :79   [32m3DooCHdO[0;39m 远程地址: 192.168.1.4
2020-08-24 16:52:49.765 INFO  com.course.server.config.LogAspect                :97   [32m3DooCHdO[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 16:52:49.765 INFO  c.c.business.controller.admin.CourseController    :31   [32m3DooCHdO[0;39m pageDto: 1
2020-08-24 16:52:49.766 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m3DooCHdO[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 16:52:49.766 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m3DooCHdO[0;39m ==> Parameters: 
2020-08-24 16:52:49.767 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m3DooCHdO[0;39m <==    Columns: count(0)
2020-08-24 16:52:49.767 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m3DooCHdO[0;39m <==        Row: 3
2020-08-24 16:52:49.767 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m3DooCHdO[0;39m <==      Total: 1
2020-08-24 16:52:49.767 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m3DooCHdO[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 16:52:49.767 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m3DooCHdO[0;39m ==> Parameters: 5(Integer)
2020-08-24 16:52:49.768 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m3DooCHdO[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 16:52:49.769 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m3DooCHdO[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-24 16:52:49.769 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m3DooCHdO[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-22 20:43:56.371
2020-08-24 16:52:49.769 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32m3DooCHdO[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 16:52:49.769 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32m3DooCHdO[0;39m <==      Total: 3
2020-08-24 16:52:49.770 INFO  com.course.server.config.LogAspect                :109  [32m3DooCHdO[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598143436371},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-24 16:52:49.770 INFO  com.course.server.config.LogAspect                :110  [32m3DooCHdO[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-24 16:53:23.477 INFO  com.course.server.config.LogAspect                :76   [32mZHvfH8sC[0;39m ------------- 【course】保存开始 -------------
2020-08-24 16:53:23.478 INFO  com.course.server.config.LogAspect                :77   [32mZHvfH8sC[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/save POST
2020-08-24 16:53:23.478 INFO  com.course.server.config.LogAspect                :78   [32mZHvfH8sC[0;39m 类名方法: com.course.business.controller.admin.CourseController.save
2020-08-24 16:53:23.478 INFO  com.course.server.config.LogAspect                :79   [32mZHvfH8sC[0;39m 远程地址: 192.168.1.4
2020-08-24 16:53:23.478 INFO  com.course.server.config.LogAspect                :97   [32mZHvfH8sC[0;39m 请求参数: [{"categorys":[{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598143436000}]
2020-08-24 16:53:23.478 DEBUG c.c.server.mapper.CourseMapper.updateByPrimaryKey :159  [32mZHvfH8sC[0;39m ==>  Preparing: update course set name = ?, summary = ?, time = ?, price = ?, image = ?, level = ?, charge = ?, status = ?, enroll = ?, sort = ?, created_at = ?, updated_at = ? where id = ? 
2020-08-24 16:53:23.479 DEBUG c.c.server.mapper.CourseMapper.updateByPrimaryKey :159  [32mZHvfH8sC[0;39m ==> Parameters: Activiti7精讲+Java通用型工作流开发实战(String), test(String), null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg(String), 2(String), F(String), P(String), null, null, 2020-08-22 20:43:19.0(Timestamp), 2020-08-24 16:53:23.478(Timestamp), K59dWr5W(String)
2020-08-24 16:53:23.481 DEBUG c.c.server.mapper.CourseMapper.updateByPrimaryKey :159  [32mZHvfH8sC[0;39m <==    Updates: 1
2020-08-24 16:53:23.481 DEBUG c.c.s.mapper.CourseCategoryMapper.deleteByExample :159  [32mZHvfH8sC[0;39m ==>  Preparing: delete from course_category WHERE ( course_id = ? ) 
2020-08-24 16:53:23.481 DEBUG c.c.s.mapper.CourseCategoryMapper.deleteByExample :159  [32mZHvfH8sC[0;39m ==> Parameters: K59dWr5W(String)
2020-08-24 16:53:23.482 DEBUG c.c.s.mapper.CourseCategoryMapper.deleteByExample :159  [32mZHvfH8sC[0;39m <==    Updates: 0
2020-08-24 16:53:23.483 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32mZHvfH8sC[0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-08-24 16:53:23.483 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32mZHvfH8sC[0;39m ==> Parameters: x0cCh1qh(String), K59dWr5W(String), 00000700(String)
2020-08-24 16:53:23.484 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32mZHvfH8sC[0;39m <==    Updates: 1
2020-08-24 16:53:23.484 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32mZHvfH8sC[0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-08-24 16:53:23.484 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32mZHvfH8sC[0;39m ==> Parameters: ST6XzwNA(String), K59dWr5W(String), 00000701(String)
2020-08-24 16:53:23.486 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32mZHvfH8sC[0;39m <==    Updates: 1
2020-08-24 16:53:23.486 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32mZHvfH8sC[0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-08-24 16:53:23.486 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32mZHvfH8sC[0;39m ==> Parameters: 3GncvIbw(String), K59dWr5W(String), 00000702(String)
2020-08-24 16:53:23.487 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32mZHvfH8sC[0;39m <==    Updates: 1
2020-08-24 16:53:23.487 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32mZHvfH8sC[0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-08-24 16:53:23.487 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32mZHvfH8sC[0;39m ==> Parameters: efe6Em0Q(String), K59dWr5W(String), 00000703(String)
2020-08-24 16:53:23.489 DEBUG c.course.server.mapper.CourseCategoryMapper.insert:159  [32mZHvfH8sC[0;39m <==    Updates: 1
2020-08-24 16:53:23.489 INFO  com.course.server.config.LogAspect                :109  [32mZHvfH8sC[0;39m 返回结果: {"content":{"categorys":[{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598143436000},"success":true}
2020-08-24 16:53:23.489 INFO  com.course.server.config.LogAspect                :110  [32mZHvfH8sC[0;39m ------------- 结束 耗时：12 ms -------------
2020-08-24 16:53:23.511 INFO  com.course.server.config.LogAspect                :76   [32mOoAdrrV3[0;39m ------------- 【course】查询开始 -------------
2020-08-24 16:53:23.511 INFO  com.course.server.config.LogAspect                :77   [32mOoAdrrV3[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 16:53:23.512 INFO  com.course.server.config.LogAspect                :78   [32mOoAdrrV3[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 16:53:23.512 INFO  com.course.server.config.LogAspect                :79   [32mOoAdrrV3[0;39m 远程地址: 192.168.1.4
2020-08-24 16:53:23.512 INFO  com.course.server.config.LogAspect                :97   [32mOoAdrrV3[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 16:53:23.512 INFO  c.c.business.controller.admin.CourseController    :31   [32mOoAdrrV3[0;39m pageDto: 1
2020-08-24 16:53:23.513 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mOoAdrrV3[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 16:53:23.513 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mOoAdrrV3[0;39m ==> Parameters: 
2020-08-24 16:53:23.513 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mOoAdrrV3[0;39m <==    Columns: count(0)
2020-08-24 16:53:23.514 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mOoAdrrV3[0;39m <==        Row: 3
2020-08-24 16:53:23.514 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mOoAdrrV3[0;39m <==      Total: 1
2020-08-24 16:53:23.514 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mOoAdrrV3[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 16:53:23.514 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mOoAdrrV3[0;39m ==> Parameters: 5(Integer)
2020-08-24 16:53:23.515 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mOoAdrrV3[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 16:53:23.515 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mOoAdrrV3[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-24 16:53:23.516 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mOoAdrrV3[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-24 16:53:23.516 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mOoAdrrV3[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 16:53:23.516 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mOoAdrrV3[0;39m <==      Total: 3
2020-08-24 16:53:23.516 INFO  com.course.server.config.LogAspect                :109  [32mOoAdrrV3[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-24 16:53:23.517 INFO  com.course.server.config.LogAspect                :110  [32mOoAdrrV3[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-24 16:55:41.274 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-24 16:55:41.274 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302541274, current=DOWN, previous=UP]
2020-08-24 16:55:41.274 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:55:41.275 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-24 16:55:41.276 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-24 16:55:41.281 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:55:41.282 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-24 16:55:41.289 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-24 16:55:41.293 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-24 16:55:41.293 INFO  com.zaxxer.hikari.HikariDataSource                :350  [32m        [0;39m HikariPool-17 - Shutdown initiated...
2020-08-24 16:55:41.296 INFO  com.zaxxer.hikari.HikariDataSource                :352  [32m        [0;39m HikariPool-17 - Shutdown completed.
2020-08-24 16:55:41.927 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:55:41.951 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 16:55:42.170 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=713f4e4c-adb7-32a1-ba85-bcdb62bef0ec
2020-08-24 16:55:42.185 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:55:42.190 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:55:42.240 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 16:55:42.264 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 16:55:42.264 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 16:55:42.264 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 16:55:42.264 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 16:55:42.272 INFO  o.a.c.c.C.[Tomcat-6].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 16:55:42.272 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 319 ms
2020-08-24 16:55:42.386 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-24 16:55:42.386 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-24 16:55:42.506 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 16:55:42.696 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-24 16:55:42.761 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-24 16:55:42.780 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-24 16:55:42.798 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-24 16:55:42.800 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-24 16:55:42.801 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-24 16:55:42.801 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-24 16:55:42.801 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-24 16:55:42.802 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-24 16:55:42.851 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:55:42.851 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-24 16:55:42.852 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-24 16:55:42.852 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-24 16:55:42.852 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-24 16:55:42.852 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-24 16:55:42.852 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-24 16:55:42.852 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-24 16:55:42.858 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-24 16:55:42.859 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-24 16:55:42.859 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-24 16:55:42.860 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598302542860 with initial instances count: 3
2020-08-24 16:55:42.864 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-24 16:55:42.865 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302542865, current=UP, previous=STARTING]
2020-08-24 16:55:42.865 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:55:42.870 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-24 16:55:42.872 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-24 16:55:42.872 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-24 16:55:42.874 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 0.991 seconds (JVM running for 129317.793)
2020-08-24 16:55:42.875 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:55:42.876 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-24 16:55:42.876 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-24 16:55:42.876 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-24 16:56:07.897 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-24 16:56:07.897 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302567897, current=DOWN, previous=UP]
2020-08-24 16:56:07.897 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:56:07.898 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-24 16:56:07.900 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-24 16:56:07.907 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:56:07.907 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-24 16:56:07.915 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-24 16:56:07.917 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-24 16:56:08.453 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:56:08.475 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 16:56:08.743 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=713f4e4c-adb7-32a1-ba85-bcdb62bef0ec
2020-08-24 16:56:08.762 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:56:08.769 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:56:08.822 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 16:56:08.844 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 16:56:08.845 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 16:56:08.845 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 16:56:08.845 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 16:56:08.852 INFO  o.a.c.c.C.[Tomcat-6].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 16:56:08.852 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 375 ms
2020-08-24 16:56:08.983 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-24 16:56:08.983 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-24 16:56:09.089 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 16:56:09.261 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-24 16:56:09.331 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-24 16:56:09.348 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-24 16:56:09.364 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-24 16:56:09.365 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-24 16:56:09.367 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-24 16:56:09.367 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-24 16:56:09.367 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-24 16:56:09.367 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-24 16:56:09.412 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:56:09.412 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-24 16:56:09.412 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-24 16:56:09.412 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-24 16:56:09.412 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-24 16:56:09.412 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-24 16:56:09.413 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-24 16:56:09.413 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-24 16:56:09.416 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-24 16:56:09.416 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-24 16:56:09.416 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-24 16:56:09.417 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598302569417 with initial instances count: 3
2020-08-24 16:56:09.421 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-24 16:56:09.421 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302569421, current=UP, previous=STARTING]
2020-08-24 16:56:09.422 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:56:09.425 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-24 16:56:09.426 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-24 16:56:09.427 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-24 16:56:09.428 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.017 seconds (JVM running for 129344.347)
2020-08-24 16:56:09.429 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-24 16:56:09.430 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-24 16:56:09.430 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:56:09.430 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-24 16:56:39.000 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-24 16:56:39.001 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302599001, current=DOWN, previous=UP]
2020-08-24 16:56:39.001 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:56:39.002 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-24 16:56:39.003 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-24 16:56:39.011 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:56:39.011 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-24 16:56:39.019 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-24 16:56:39.023 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-24 16:56:39.398 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:56:39.424 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 16:56:39.719 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=713f4e4c-adb7-32a1-ba85-bcdb62bef0ec
2020-08-24 16:56:39.736 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:56:39.742 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:56:39.796 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 16:56:39.823 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 16:56:39.823 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 16:56:39.823 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 16:56:39.823 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 16:56:39.830 INFO  o.a.c.c.C.[Tomcat-6].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 16:56:39.830 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 404 ms
2020-08-24 16:56:39.968 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-24 16:56:39.969 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-24 16:56:40.115 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 16:56:40.330 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-24 16:56:40.395 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-24 16:56:40.415 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-24 16:56:40.438 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-24 16:56:40.441 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-24 16:56:40.445 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-24 16:56:40.446 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-24 16:56:40.446 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-24 16:56:40.446 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-24 16:56:40.518 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:56:40.519 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-24 16:56:40.519 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-24 16:56:40.519 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-24 16:56:40.519 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-24 16:56:40.519 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-24 16:56:40.519 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-24 16:56:40.520 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-24 16:56:40.527 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-24 16:56:40.528 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-24 16:56:40.528 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-24 16:56:40.529 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598302600529 with initial instances count: 3
2020-08-24 16:56:40.536 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-24 16:56:40.536 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302600536, current=UP, previous=STARTING]
2020-08-24 16:56:40.538 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:56:40.545 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-24 16:56:40.547 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-24 16:56:40.547 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-24 16:56:40.548 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:56:40.550 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.204 seconds (JVM running for 129375.467)
2020-08-24 16:56:40.552 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-24 16:56:40.552 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-24 16:56:40.552 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-24 16:57:16.123 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-24 16:57:16.123 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302636123, current=DOWN, previous=UP]
2020-08-24 16:57:16.125 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:57:16.127 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-24 16:57:16.128 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-24 16:57:16.140 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:57:16.141 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-24 16:57:16.149 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-24 16:57:16.154 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-24 16:57:16.465 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:57:16.490 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 16:57:16.728 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=713f4e4c-adb7-32a1-ba85-bcdb62bef0ec
2020-08-24 16:57:16.765 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:57:16.776 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:57:16.839 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 16:57:16.865 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 16:57:16.866 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 16:57:16.866 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 16:57:16.866 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 16:57:16.876 INFO  o.a.c.c.C.[Tomcat-6].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 16:57:16.876 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 384 ms
2020-08-24 16:57:17.002 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-24 16:57:17.002 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-24 16:57:17.120 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 16:57:17.368 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-24 16:57:17.485 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-24 16:57:17.509 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-24 16:57:17.535 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-24 16:57:17.540 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-24 16:57:17.541 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-24 16:57:17.541 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-24 16:57:17.542 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-24 16:57:17.542 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-24 16:57:17.618 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:57:17.619 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-24 16:57:17.619 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-24 16:57:17.619 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-24 16:57:17.619 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-24 16:57:17.619 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-24 16:57:17.620 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-24 16:57:17.620 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-24 16:57:17.624 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-24 16:57:17.625 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-24 16:57:17.625 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-24 16:57:17.626 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598302637626 with initial instances count: 3
2020-08-24 16:57:17.637 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-24 16:57:17.637 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302637637, current=UP, previous=STARTING]
2020-08-24 16:57:17.638 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:57:17.644 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-24 16:57:17.646 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-24 16:57:17.647 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-24 16:57:17.650 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.252 seconds (JVM running for 129412.566)
2020-08-24 16:57:17.651 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-24 16:57:17.651 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:57:17.652 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-24 16:57:17.652 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-24 16:57:54.331 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-24 16:57:54.331 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302674331, current=DOWN, previous=UP]
2020-08-24 16:57:54.331 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:57:54.332 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-24 16:57:54.334 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-24 16:57:54.345 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:57:54.345 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-24 16:57:54.355 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-24 16:57:54.358 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-24 16:57:54.743 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:57:54.765 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 16:57:55.020 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=96156c98-a113-3ff5-8bf3-5ef098f83f3d
2020-08-24 16:57:55.038 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:57:55.044 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:57:55.107 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 16:57:55.129 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 16:57:55.130 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 16:57:55.130 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 16:57:55.130 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 16:57:55.137 INFO  o.a.c.c.C.[Tomcat-6].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 16:57:55.137 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 370 ms
2020-08-24 16:57:55.254 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-24 16:57:55.254 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-24 16:57:55.383 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 16:57:55.584 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-24 16:57:55.645 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-24 16:57:55.665 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-24 16:57:55.682 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-24 16:57:55.683 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-24 16:57:55.686 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-24 16:57:55.686 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-24 16:57:55.686 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-24 16:57:55.686 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-24 16:57:55.734 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:57:55.734 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-24 16:57:55.734 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-24 16:57:55.735 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-24 16:57:55.735 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-24 16:57:55.735 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-24 16:57:55.735 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-24 16:57:55.735 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-24 16:57:55.738 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-24 16:57:55.740 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-24 16:57:55.741 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-24 16:57:55.741 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598302675741 with initial instances count: 3
2020-08-24 16:57:55.747 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-24 16:57:55.747 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302675747, current=UP, previous=STARTING]
2020-08-24 16:57:55.748 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:57:55.753 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-24 16:57:55.754 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-24 16:57:55.754 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-24 16:57:55.756 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:57:55.757 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.05 seconds (JVM running for 129450.672)
2020-08-24 16:57:55.758 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-24 16:57:55.758 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-24 16:57:55.758 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-24 16:58:16.210 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :65   [32m        [0;39m Unregistering application BUSINESS with eureka with status DOWN
2020-08-24 16:58:16.211 WARN  com.netflix.discovery.DiscoveryClient             :1321 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302696211, current=DOWN, previous=UP]
2020-08-24 16:58:16.211 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:58:16.212 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :208  [32m        [0;39m Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-24 16:58:16.213 INFO  com.netflix.discovery.DiscoveryClient             :906  [32m        [0;39m Shutting down DiscoveryClient ...
2020-08-24 16:58:16.227 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:58:16.227 INFO  com.netflix.discovery.DiscoveryClient             :940  [32m        [0;39m Unregistering ...
2020-08-24 16:58:16.234 INFO  com.netflix.discovery.DiscoveryClient             :942  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - deregister  status: 200
2020-08-24 16:58:16.237 INFO  com.netflix.discovery.DiscoveryClient             :929  [32m        [0;39m Completed shut down of DiscoveryClient
2020-08-24 16:58:16.693 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:58:16.714 INFO  com.course.business.config.BusinessApplication    :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-08-24 16:58:16.952 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=713f4e4c-adb7-32a1-ba85-bcdb62bef0ec
2020-08-24 16:58:16.967 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:58:16.973 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 16:58:17.027 WARN  org.apache.tomcat.util.modeler.Registry           :173  [32m        [0;39m The MBean registry cannot be disabled because it has already been initialised
2020-08-24 16:58:17.051 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-08-24 16:58:17.052 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-08-24 16:58:17.052 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-08-24 16:58:17.052 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-08-24 16:58:17.059 INFO  o.a.c.c.C.[Tomcat-6].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-08-24 16:58:17.059 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 343 ms
2020-08-24 16:58:17.172 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-08-24 16:58:17.172 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-24 16:58:17.298 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 16:58:17.505 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-08-24 16:58:17.573 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-24 16:58:17.597 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-08-24 16:58:17.617 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-08-24 16:58:17.618 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-08-24 16:58:17.621 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-08-24 16:58:17.621 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-08-24 16:58:17.621 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-08-24 16:58:17.621 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-08-24 16:58:17.676 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-08-24 16:58:17.677 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-08-24 16:58:17.678 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-08-24 16:58:17.678 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-08-24 16:58:17.678 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-08-24 16:58:17.678 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-08-24 16:58:17.678 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-08-24 16:58:17.678 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-08-24 16:58:17.684 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-08-24 16:58:17.685 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-08-24 16:58:17.686 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-24 16:58:17.686 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1598302697686 with initial instances count: 3
2020-08-24 16:58:17.694 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-08-24 16:58:17.694 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1598302697694, current=UP, previous=STARTING]
2020-08-24 16:58:17.695 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002: registering service...
2020-08-24 16:58:17.703 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-08-24 16:58:17.705 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-08-24 16:58:17.705 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-08-24 16:58:17.709 INFO  com.course.business.config.BusinessApplication    :61   [32m        [0;39m Started BusinessApplication in 1.056 seconds (JVM running for 129472.623)
2020-08-24 16:58:17.711 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener :63   [32m        [0;39m Condition evaluation unchanged
2020-08-24 16:58:17.711 INFO  com.course.business.config.BusinessApplication    :21   [32m        [0;39m Start successfully!!
2020-08-24 16:58:17.711 INFO  com.course.business.config.BusinessApplication    :22   [32m        [0;39m Business address: 	http://127.0.0.1:9002
2020-08-24 16:58:17.712 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/192.168.1.4:business:9002 - registration status: 204
2020-08-24 16:59:07.843 INFO  o.a.c.c.C.[Tomcat-6].[localhost].[/business]      :173  [32m        [0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-24 16:59:07.843 INFO  org.springframework.web.servlet.DispatcherServlet :525  [32m        [0;39m Initializing Servlet 'dispatcherServlet'
2020-08-24 16:59:07.848 INFO  org.springframework.web.servlet.DispatcherServlet :547  [32m        [0;39m Completed initialization in 5 ms
2020-08-24 16:59:07.854 INFO  com.course.server.config.LogAspect                :76   [32mR7HtBFw8[0;39m ------------- 【category】操作开始 -------------
2020-08-24 16:59:07.854 INFO  com.course.server.config.LogAspect                :76   [32ml3ZL6o9X[0;39m ------------- 【course】查询开始 -------------
2020-08-24 16:59:07.855 INFO  com.course.server.config.LogAspect                :77   [32ml3ZL6o9X[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 16:59:07.855 INFO  com.course.server.config.LogAspect                :77   [32mR7HtBFw8[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 16:59:07.855 INFO  com.course.server.config.LogAspect                :78   [32ml3ZL6o9X[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 16:59:07.855 INFO  com.course.server.config.LogAspect                :78   [32mR7HtBFw8[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 16:59:07.855 INFO  com.course.server.config.LogAspect                :79   [32ml3ZL6o9X[0;39m 远程地址: 192.168.1.4
2020-08-24 16:59:07.855 INFO  com.course.server.config.LogAspect                :79   [32mR7HtBFw8[0;39m 远程地址: 192.168.1.4
2020-08-24 16:59:07.856 INFO  com.course.server.config.LogAspect                :97   [32mR7HtBFw8[0;39m 请求参数: []
2020-08-24 16:59:07.856 INFO  com.course.server.config.LogAspect                :97   [32ml3ZL6o9X[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 16:59:07.859 INFO  c.c.business.controller.admin.CourseController    :37   [32ml3ZL6o9X[0;39m pageDto: 1
2020-08-24 16:59:07.863 INFO  com.zaxxer.hikari.HikariDataSource                :110  [32mR7HtBFw8[0;39m HikariPool-18 - Starting...
2020-08-24 16:59:07.868 INFO  com.zaxxer.hikari.HikariDataSource                :123  [32mR7HtBFw8[0;39m HikariPool-18 - Start completed.
2020-08-24 16:59:07.868 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mR7HtBFw8[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 16:59:07.869 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mR7HtBFw8[0;39m ==> Parameters: 
2020-08-24 16:59:07.872 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==    Columns: id, parent, name, sort
2020-08-24 16:59:07.872 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 16:59:07.872 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 16:59:07.873 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 16:59:07.873 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 16:59:07.873 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 16:59:07.873 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 16:59:07.873 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 16:59:07.874 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 16:59:07.874 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 16:59:07.874 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 16:59:07.874 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 16:59:07.875 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 16:59:07.875 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32ml3ZL6o9X[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 16:59:07.875 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 16:59:07.880 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32ml3ZL6o9X[0;39m ==> Parameters: 
2020-08-24 16:59:07.880 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 16:59:07.881 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 16:59:07.881 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 16:59:07.883 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 16:59:07.883 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 16:59:07.883 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 16:59:07.883 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32ml3ZL6o9X[0;39m <==    Columns: count(0)
2020-08-24 16:59:07.883 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32ml3ZL6o9X[0;39m <==        Row: 3
2020-08-24 16:59:07.883 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 16:59:07.884 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 16:59:07.884 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32ml3ZL6o9X[0;39m <==      Total: 1
2020-08-24 16:59:07.884 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 16:59:07.884 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 16:59:07.884 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 16:59:07.884 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32ml3ZL6o9X[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 16:59:07.885 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 16:59:07.885 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32ml3ZL6o9X[0;39m ==> Parameters: 5(Integer)
2020-08-24 16:59:07.885 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 16:59:07.885 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 16:59:07.885 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 16:59:07.886 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 16:59:07.886 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 16:59:07.886 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 16:59:07.886 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 16:59:07.886 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 16:59:07.886 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32ml3ZL6o9X[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 16:59:07.887 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 16:59:07.887 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32ml3ZL6o9X[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-24 16:59:07.887 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 16:59:07.887 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 16:59:07.887 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32ml3ZL6o9X[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-24 16:59:07.887 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 16:59:07.887 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 16:59:07.887 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32ml3ZL6o9X[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 16:59:07.888 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 16:59:07.888 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32ml3ZL6o9X[0;39m <==      Total: 3
2020-08-24 16:59:07.888 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 16:59:07.888 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 16:59:07.888 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 16:59:07.888 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 16:59:07.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 16:59:07.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 16:59:07.889 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mR7HtBFw8[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 16:59:07.889 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mR7HtBFw8[0;39m <==      Total: 46
2020-08-24 16:59:07.894 INFO  com.course.server.config.LogAspect                :109  [32ml3ZL6o9X[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-24 16:59:07.895 INFO  com.course.server.config.LogAspect                :110  [32ml3ZL6o9X[0;39m ------------- 结束 耗时：41 ms -------------
2020-08-24 16:59:07.896 INFO  com.course.server.config.LogAspect                :109  [32mR7HtBFw8[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 16:59:07.896 INFO  com.course.server.config.LogAspect                :110  [32mR7HtBFw8[0;39m ------------- 结束 耗时：46 ms -------------
2020-08-24 16:59:21.978 INFO  com.course.server.config.LogAspect                :76   [32mXT6rlb3O[0;39m ------------- 【course】查询开始 -------------
2020-08-24 16:59:21.978 INFO  com.course.server.config.LogAspect                :76   [32mdPZz9Fji[0;39m ------------- 【category】操作开始 -------------
2020-08-24 16:59:21.978 INFO  com.course.server.config.LogAspect                :77   [32mXT6rlb3O[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 16:59:21.978 INFO  com.course.server.config.LogAspect                :77   [32mdPZz9Fji[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 16:59:21.978 INFO  com.course.server.config.LogAspect                :78   [32mXT6rlb3O[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 16:59:21.978 INFO  com.course.server.config.LogAspect                :78   [32mdPZz9Fji[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 16:59:21.978 INFO  com.course.server.config.LogAspect                :79   [32mXT6rlb3O[0;39m 远程地址: 192.168.1.4
2020-08-24 16:59:21.978 INFO  com.course.server.config.LogAspect                :79   [32mdPZz9Fji[0;39m 远程地址: 192.168.1.4
2020-08-24 16:59:21.978 INFO  com.course.server.config.LogAspect                :97   [32mXT6rlb3O[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 16:59:21.978 INFO  com.course.server.config.LogAspect                :97   [32mdPZz9Fji[0;39m 请求参数: []
2020-08-24 16:59:21.979 INFO  c.c.business.controller.admin.CourseController    :37   [32mXT6rlb3O[0;39m pageDto: 1
2020-08-24 16:59:21.981 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mdPZz9Fji[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 16:59:21.982 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mXT6rlb3O[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 16:59:21.982 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mdPZz9Fji[0;39m ==> Parameters: 
2020-08-24 16:59:21.982 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mXT6rlb3O[0;39m ==> Parameters: 
2020-08-24 16:59:21.983 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==    Columns: id, parent, name, sort
2020-08-24 16:59:21.983 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mXT6rlb3O[0;39m <==    Columns: count(0)
2020-08-24 16:59:21.983 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 16:59:21.983 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mXT6rlb3O[0;39m <==        Row: 3
2020-08-24 16:59:21.983 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 16:59:21.983 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mXT6rlb3O[0;39m <==      Total: 1
2020-08-24 16:59:21.983 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 16:59:21.983 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mXT6rlb3O[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 16:59:21.984 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 16:59:21.984 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mXT6rlb3O[0;39m ==> Parameters: 5(Integer)
2020-08-24 16:59:21.984 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 16:59:21.984 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 16:59:21.984 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 16:59:21.984 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mXT6rlb3O[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 16:59:21.984 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 16:59:21.985 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mXT6rlb3O[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-24 16:59:21.985 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 16:59:21.985 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mXT6rlb3O[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-24 16:59:21.985 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 16:59:21.985 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 16:59:21.985 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mXT6rlb3O[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 16:59:21.985 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 16:59:21.986 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mXT6rlb3O[0;39m <==      Total: 3
2020-08-24 16:59:21.986 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 16:59:21.986 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 16:59:21.986 INFO  com.course.server.config.LogAspect                :109  [32mXT6rlb3O[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-24 16:59:21.986 INFO  com.course.server.config.LogAspect                :110  [32mXT6rlb3O[0;39m ------------- 结束 耗时：8 ms -------------
2020-08-24 16:59:21.986 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 16:59:21.986 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 16:59:21.986 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 16:59:21.987 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 16:59:21.987 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 16:59:21.988 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 16:59:21.988 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 16:59:21.988 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 16:59:21.988 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 16:59:21.988 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 16:59:21.989 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 16:59:21.989 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 16:59:21.989 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 16:59:21.989 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 16:59:21.989 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 16:59:21.990 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 16:59:21.990 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 16:59:21.990 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 16:59:21.990 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 16:59:21.990 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 16:59:21.991 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 16:59:21.991 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 16:59:21.991 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 16:59:21.991 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 16:59:21.991 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 16:59:21.992 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 16:59:21.992 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 16:59:21.992 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 16:59:21.992 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 16:59:21.992 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 16:59:21.993 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 16:59:21.993 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mdPZz9Fji[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 16:59:21.993 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mdPZz9Fji[0;39m <==      Total: 46
2020-08-24 16:59:21.994 INFO  com.course.server.config.LogAspect                :109  [32mdPZz9Fji[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 16:59:21.994 INFO  com.course.server.config.LogAspect                :110  [32mdPZz9Fji[0;39m ------------- 结束 耗时：16 ms -------------
2020-08-24 17:00:25.652 INFO  com.course.server.config.LogAspect                :76   [32mHk8fXY29[0;39m ------------- 【course】查询开始 -------------
2020-08-24 17:00:25.652 INFO  com.course.server.config.LogAspect                :77   [32mHk8fXY29[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 17:00:25.652 INFO  com.course.server.config.LogAspect                :78   [32mHk8fXY29[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 17:00:25.653 INFO  com.course.server.config.LogAspect                :79   [32mHk8fXY29[0;39m 远程地址: 192.168.1.4
2020-08-24 17:00:25.653 INFO  com.course.server.config.LogAspect                :97   [32mHk8fXY29[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 17:00:25.653 INFO  c.c.business.controller.admin.CourseController    :37   [32mHk8fXY29[0;39m pageDto: 1
2020-08-24 17:00:25.654 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mHk8fXY29[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 17:00:25.654 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mHk8fXY29[0;39m ==> Parameters: 
2020-08-24 17:00:25.655 INFO  com.course.server.config.LogAspect                :76   [32mDodaaS1w[0;39m ------------- 【category】操作开始 -------------
2020-08-24 17:00:25.655 INFO  com.course.server.config.LogAspect                :77   [32mDodaaS1w[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 17:00:25.655 INFO  com.course.server.config.LogAspect                :78   [32mDodaaS1w[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 17:00:25.655 INFO  com.course.server.config.LogAspect                :79   [32mDodaaS1w[0;39m 远程地址: 192.168.1.4
2020-08-24 17:00:25.655 INFO  com.course.server.config.LogAspect                :97   [32mDodaaS1w[0;39m 请求参数: []
2020-08-24 17:00:25.655 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mDodaaS1w[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 17:00:25.656 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mDodaaS1w[0;39m ==> Parameters: 
2020-08-24 17:00:25.656 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mHk8fXY29[0;39m <==    Columns: count(0)
2020-08-24 17:00:25.656 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mHk8fXY29[0;39m <==        Row: 3
2020-08-24 17:00:25.657 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mHk8fXY29[0;39m <==      Total: 1
2020-08-24 17:00:25.657 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mHk8fXY29[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 17:00:25.657 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==    Columns: id, parent, name, sort
2020-08-24 17:00:25.657 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mHk8fXY29[0;39m ==> Parameters: 5(Integer)
2020-08-24 17:00:25.657 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 17:00:25.658 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 17:00:25.658 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 17:00:25.658 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 17:00:25.658 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 17:00:25.659 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 17:00:25.659 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mHk8fXY29[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 17:00:25.659 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 17:00:25.659 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mHk8fXY29[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-24 17:00:25.659 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 17:00:25.659 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mHk8fXY29[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-24 17:00:25.659 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 17:00:25.659 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mHk8fXY29[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 17:00:25.659 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 17:00:25.660 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 17:00:25.660 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mHk8fXY29[0;39m <==      Total: 3
2020-08-24 17:00:25.660 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 17:00:25.660 INFO  com.course.server.config.LogAspect                :109  [32mHk8fXY29[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-24 17:00:25.660 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 17:00:25.660 INFO  com.course.server.config.LogAspect                :110  [32mHk8fXY29[0;39m ------------- 结束 耗时：8 ms -------------
2020-08-24 17:00:25.660 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 17:00:25.660 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 17:00:25.661 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 17:00:25.661 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 17:00:25.661 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 17:00:25.661 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 17:00:25.662 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 17:00:25.662 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 17:00:25.662 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 17:00:25.662 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 17:00:25.663 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 17:00:25.663 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 17:00:25.663 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 17:00:25.664 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 17:00:25.664 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 17:00:25.664 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 17:00:25.664 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 17:00:25.664 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 17:00:25.665 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 17:00:25.665 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 17:00:25.665 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 17:00:25.665 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 17:00:25.665 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 17:00:25.666 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 17:00:25.666 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 17:00:25.666 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 17:00:25.667 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 17:00:25.667 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 17:00:25.667 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 17:00:25.668 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 17:00:25.668 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 17:00:25.668 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 17:00:25.669 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDodaaS1w[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 17:00:25.669 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mDodaaS1w[0;39m <==      Total: 46
2020-08-24 17:00:25.670 INFO  com.course.server.config.LogAspect                :109  [32mDodaaS1w[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 17:00:25.670 INFO  com.course.server.config.LogAspect                :110  [32mDodaaS1w[0;39m ------------- 结束 耗时：16 ms -------------
2020-08-24 17:01:12.755 INFO  com.course.server.config.LogAspect                :76   [32mDG9ZpkYL[0;39m ------------- 【category】操作开始 -------------
2020-08-24 17:01:12.755 INFO  com.course.server.config.LogAspect                :76   [32mezofJfvO[0;39m ------------- 【course】查询开始 -------------
2020-08-24 17:01:12.755 INFO  com.course.server.config.LogAspect                :77   [32mDG9ZpkYL[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 17:01:12.755 INFO  com.course.server.config.LogAspect                :77   [32mezofJfvO[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 17:01:12.755 INFO  com.course.server.config.LogAspect                :78   [32mDG9ZpkYL[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 17:01:12.755 INFO  com.course.server.config.LogAspect                :78   [32mezofJfvO[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 17:01:12.755 INFO  com.course.server.config.LogAspect                :79   [32mDG9ZpkYL[0;39m 远程地址: 192.168.1.4
2020-08-24 17:01:12.755 INFO  com.course.server.config.LogAspect                :79   [32mezofJfvO[0;39m 远程地址: 192.168.1.4
2020-08-24 17:01:12.756 INFO  com.course.server.config.LogAspect                :97   [32mDG9ZpkYL[0;39m 请求参数: []
2020-08-24 17:01:12.756 INFO  com.course.server.config.LogAspect                :97   [32mezofJfvO[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 17:01:12.756 INFO  c.c.business.controller.admin.CourseController    :37   [32mezofJfvO[0;39m pageDto: 1
2020-08-24 17:01:12.756 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mDG9ZpkYL[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 17:01:12.756 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mDG9ZpkYL[0;39m ==> Parameters: 
2020-08-24 17:01:12.756 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mezofJfvO[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 17:01:12.757 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mezofJfvO[0;39m ==> Parameters: 
2020-08-24 17:01:12.757 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==    Columns: id, parent, name, sort
2020-08-24 17:01:12.757 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 17:01:12.757 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mezofJfvO[0;39m <==    Columns: count(0)
2020-08-24 17:01:12.757 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 17:01:12.757 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mezofJfvO[0;39m <==        Row: 3
2020-08-24 17:01:12.758 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 17:01:12.758 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mezofJfvO[0;39m <==      Total: 1
2020-08-24 17:01:12.758 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 17:01:12.758 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mezofJfvO[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 17:01:12.758 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 17:01:12.758 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mezofJfvO[0;39m ==> Parameters: 5(Integer)
2020-08-24 17:01:12.759 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 17:01:12.759 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 17:01:12.759 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mezofJfvO[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 17:01:12.759 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 17:01:12.759 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mezofJfvO[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-24 17:01:12.759 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 17:01:12.759 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mezofJfvO[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-24 17:01:12.760 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 17:01:12.760 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 17:01:12.760 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mezofJfvO[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 17:01:12.760 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 17:01:12.760 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mezofJfvO[0;39m <==      Total: 3
2020-08-24 17:01:12.760 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 17:01:12.760 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 17:01:12.761 INFO  com.course.server.config.LogAspect                :109  [32mezofJfvO[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-24 17:01:12.761 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 17:01:12.761 INFO  com.course.server.config.LogAspect                :110  [32mezofJfvO[0;39m ------------- 结束 耗时：6 ms -------------
2020-08-24 17:01:12.761 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 17:01:12.761 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 17:01:12.761 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 17:01:12.761 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 17:01:12.762 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 17:01:12.762 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 17:01:12.762 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 17:01:12.763 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 17:01:12.763 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 17:01:12.763 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 17:01:12.763 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 17:01:12.763 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 17:01:12.764 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 17:01:12.764 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 17:01:12.764 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 17:01:12.765 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 17:01:12.765 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 17:01:12.765 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 17:01:12.765 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 17:01:12.765 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 17:01:12.766 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 17:01:12.766 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 17:01:12.766 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 17:01:12.766 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 17:01:12.767 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 17:01:12.767 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 17:01:12.767 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 17:01:12.767 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 17:01:12.767 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 17:01:12.768 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 17:01:12.768 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mDG9ZpkYL[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 17:01:12.768 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mDG9ZpkYL[0;39m <==      Total: 46
2020-08-24 17:01:12.769 INFO  com.course.server.config.LogAspect                :109  [32mDG9ZpkYL[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 17:01:12.769 INFO  com.course.server.config.LogAspect                :110  [32mDG9ZpkYL[0;39m ------------- 结束 耗时：14 ms -------------
2020-08-24 17:01:20.747 INFO  com.course.server.config.LogAspect                :76   [32mjkGtr67m[0;39m ------------- 【category】操作开始 -------------
2020-08-24 17:01:20.747 INFO  com.course.server.config.LogAspect                :77   [32mjkGtr67m[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 17:01:20.747 INFO  com.course.server.config.LogAspect                :78   [32mjkGtr67m[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 17:01:20.748 INFO  com.course.server.config.LogAspect                :79   [32mjkGtr67m[0;39m 远程地址: 192.168.1.4
2020-08-24 17:01:20.748 INFO  com.course.server.config.LogAspect                :97   [32mjkGtr67m[0;39m 请求参数: []
2020-08-24 17:01:20.748 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mjkGtr67m[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 17:01:20.748 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mjkGtr67m[0;39m ==> Parameters: 
2020-08-24 17:01:20.749 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==    Columns: id, parent, name, sort
2020-08-24 17:01:20.749 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 17:01:20.749 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 17:01:20.750 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 17:01:20.750 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 17:01:20.750 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 17:01:20.750 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 17:01:20.750 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 17:01:20.750 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 17:01:20.751 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 17:01:20.751 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 17:01:20.751 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 17:01:20.751 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 17:01:20.751 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 17:01:20.751 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 17:01:20.752 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 17:01:20.752 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 17:01:20.752 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 17:01:20.752 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 17:01:20.752 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 17:01:20.753 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 17:01:20.753 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 17:01:20.753 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 17:01:20.753 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 17:01:20.753 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 17:01:20.753 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 17:01:20.754 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 17:01:20.754 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 17:01:20.754 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 17:01:20.754 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 17:01:20.754 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 17:01:20.755 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 17:01:20.755 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 17:01:20.755 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 17:01:20.755 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 17:01:20.755 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 17:01:20.755 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 17:01:20.756 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 17:01:20.756 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 17:01:20.756 INFO  com.course.server.config.LogAspect                :76   [32mfo2RyZ4B[0;39m ------------- 【course】查询开始 -------------
2020-08-24 17:01:20.756 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 17:01:20.756 INFO  com.course.server.config.LogAspect                :77   [32mfo2RyZ4B[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 17:01:20.756 INFO  com.course.server.config.LogAspect                :78   [32mfo2RyZ4B[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 17:01:20.756 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 17:01:20.756 INFO  com.course.server.config.LogAspect                :79   [32mfo2RyZ4B[0;39m 远程地址: 192.168.1.4
2020-08-24 17:01:20.756 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 17:01:20.756 INFO  com.course.server.config.LogAspect                :97   [32mfo2RyZ4B[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 17:01:20.756 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 17:01:20.757 INFO  c.c.business.controller.admin.CourseController    :37   [32mfo2RyZ4B[0;39m pageDto: 1
2020-08-24 17:01:20.757 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 17:01:20.757 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 17:01:20.757 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 17:01:20.757 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjkGtr67m[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 17:01:20.757 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mfo2RyZ4B[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 17:01:20.757 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mjkGtr67m[0;39m <==      Total: 46
2020-08-24 17:01:20.757 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mfo2RyZ4B[0;39m ==> Parameters: 
2020-08-24 17:01:20.758 INFO  com.course.server.config.LogAspect                :109  [32mjkGtr67m[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 17:01:20.758 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mfo2RyZ4B[0;39m <==    Columns: count(0)
2020-08-24 17:01:20.758 INFO  com.course.server.config.LogAspect                :110  [32mjkGtr67m[0;39m ------------- 结束 耗时：11 ms -------------
2020-08-24 17:01:20.758 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mfo2RyZ4B[0;39m <==        Row: 3
2020-08-24 17:01:20.758 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mfo2RyZ4B[0;39m <==      Total: 1
2020-08-24 17:01:20.758 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mfo2RyZ4B[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 17:01:20.759 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mfo2RyZ4B[0;39m ==> Parameters: 5(Integer)
2020-08-24 17:01:20.759 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mfo2RyZ4B[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 17:01:20.760 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mfo2RyZ4B[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-24 17:01:20.760 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mfo2RyZ4B[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-24 17:01:20.760 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mfo2RyZ4B[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 17:01:20.760 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mfo2RyZ4B[0;39m <==      Total: 3
2020-08-24 17:01:20.761 INFO  com.course.server.config.LogAspect                :109  [32mfo2RyZ4B[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-24 17:01:20.761 INFO  com.course.server.config.LogAspect                :110  [32mfo2RyZ4B[0;39m ------------- 结束 耗时：5 ms -------------
2020-08-24 17:01:22.579 INFO  com.course.server.config.LogAspect                :76   [32mAi9ZmNLz[0;39m ------------- 【course】查询开始 -------------
2020-08-24 17:01:22.579 INFO  com.course.server.config.LogAspect                :77   [32mAi9ZmNLz[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list-category/D5n6XQsE POST
2020-08-24 17:01:22.579 INFO  com.course.server.config.LogAspect                :78   [32mAi9ZmNLz[0;39m 类名方法: com.course.business.controller.admin.CourseController.listCategory
2020-08-24 17:01:22.579 INFO  com.course.server.config.LogAspect                :79   [32mAi9ZmNLz[0;39m 远程地址: 192.168.1.4
2020-08-24 17:01:22.579 INFO  com.course.server.config.LogAspect                :97   [32mAi9ZmNLz[0;39m 请求参数: ["D5n6XQsE"]
2020-08-24 17:01:22.584 DEBUG c.c.s.mapper.CourseCategoryMapper.selectByExample :159  [32mAi9ZmNLz[0;39m ==>  Preparing: select id, course_id, category_id from course_category WHERE ( course_id = ? ) 
2020-08-24 17:01:22.584 DEBUG c.c.s.mapper.CourseCategoryMapper.selectByExample :159  [32mAi9ZmNLz[0;39m ==> Parameters: D5n6XQsE(String)
2020-08-24 17:01:22.585 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32mAi9ZmNLz[0;39m <==    Columns: id, course_id, category_id
2020-08-24 17:01:22.585 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32mAi9ZmNLz[0;39m <==        Row: 6CDIOamE, D5n6XQsE, 00000108
2020-08-24 17:01:22.586 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32mAi9ZmNLz[0;39m <==        Row: 70jecmg7, D5n6XQsE, 00000105
2020-08-24 17:01:22.586 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32mAi9ZmNLz[0;39m <==        Row: 8kZn9pE8, D5n6XQsE, 00000101
2020-08-24 17:01:22.586 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32mAi9ZmNLz[0;39m <==        Row: cdojCxfS, D5n6XQsE, 00000100
2020-08-24 17:01:22.586 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32mAi9ZmNLz[0;39m <==        Row: KzH7HWjP, D5n6XQsE, 00000107
2020-08-24 17:01:22.586 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32mAi9ZmNLz[0;39m <==        Row: NqsKRjmN, D5n6XQsE, 00000106
2020-08-24 17:01:22.587 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32mAi9ZmNLz[0;39m <==        Row: nXoPB2oi, D5n6XQsE, 00000102
2020-08-24 17:01:22.587 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32mAi9ZmNLz[0;39m <==        Row: tpaLSbBg, D5n6XQsE, 00000103
2020-08-24 17:01:22.587 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32mAi9ZmNLz[0;39m <==        Row: uqpUWw1C, D5n6XQsE, 00000104
2020-08-24 17:01:22.587 DEBUG c.c.s.mapper.CourseCategoryMapper.selectByExample :159  [32mAi9ZmNLz[0;39m <==      Total: 9
2020-08-24 17:01:22.591 INFO  com.course.server.config.LogAspect                :109  [32mAi9ZmNLz[0;39m 返回结果: {"content":[{"categoryId":"00000108","courseId":"D5n6XQsE","id":"6CDIOamE"},{"categoryId":"00000105","courseId":"D5n6XQsE","id":"70jecmg7"},{"categoryId":"00000101","courseId":"D5n6XQsE","id":"8kZn9pE8"},{"categoryId":"00000100","courseId":"D5n6XQsE","id":"cdojCxfS"},{"categoryId":"00000107","courseId":"D5n6XQsE","id":"KzH7HWjP"},{"categoryId":"00000106","courseId":"D5n6XQsE","id":"NqsKRjmN"},{"categoryId":"00000102","courseId":"D5n6XQsE","id":"nXoPB2oi"},{"categoryId":"00000103","courseId":"D5n6XQsE","id":"tpaLSbBg"},{"categoryId":"00000104","courseId":"D5n6XQsE","id":"uqpUWw1C"}],"success":true}
2020-08-24 17:01:22.591 INFO  com.course.server.config.LogAspect                :110  [32mAi9ZmNLz[0;39m ------------- 结束 耗时：13 ms -------------
2020-08-24 17:01:31.121 INFO  com.course.server.config.LogAspect                :76   [32mjFIPrnwp[0;39m ------------- 【category】操作开始 -------------
2020-08-24 17:01:31.121 INFO  com.course.server.config.LogAspect                :76   [32mESxvl6ZR[0;39m ------------- 【course】查询开始 -------------
2020-08-24 17:01:31.122 INFO  com.course.server.config.LogAspect                :77   [32mESxvl6ZR[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list POST
2020-08-24 17:01:31.122 INFO  com.course.server.config.LogAspect                :77   [32mjFIPrnwp[0;39m 请求地址: http://192.168.1.4:9002/business/admin/category/all POST
2020-08-24 17:01:31.122 INFO  com.course.server.config.LogAspect                :78   [32mESxvl6ZR[0;39m 类名方法: com.course.business.controller.admin.CourseController.list
2020-08-24 17:01:31.122 INFO  com.course.server.config.LogAspect                :78   [32mjFIPrnwp[0;39m 类名方法: com.course.business.controller.admin.CategoryController.all
2020-08-24 17:01:31.122 INFO  com.course.server.config.LogAspect                :79   [32mESxvl6ZR[0;39m 远程地址: 192.168.1.4
2020-08-24 17:01:31.122 INFO  com.course.server.config.LogAspect                :79   [32mjFIPrnwp[0;39m 远程地址: 192.168.1.4
2020-08-24 17:01:31.122 INFO  com.course.server.config.LogAspect                :97   [32mESxvl6ZR[0;39m 请求参数: [{"page":1,"size":5,"total":0}]
2020-08-24 17:01:31.122 INFO  com.course.server.config.LogAspect                :97   [32mjFIPrnwp[0;39m 请求参数: []
2020-08-24 17:01:31.122 INFO  c.c.business.controller.admin.CourseController    :37   [32mESxvl6ZR[0;39m pageDto: 1
2020-08-24 17:01:31.123 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mjFIPrnwp[0;39m ==>  Preparing: select id, parent, name, sort from category order by sort asc 
2020-08-24 17:01:31.123 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mjFIPrnwp[0;39m ==> Parameters: 
2020-08-24 17:01:31.123 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mESxvl6ZR[0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-08-24 17:01:31.124 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mESxvl6ZR[0;39m ==> Parameters: 
2020-08-24 17:01:31.124 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==    Columns: id, parent, name, sort
2020-08-24 17:01:31.124 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000100, 00000000, frontend, 100
2020-08-24 17:01:31.124 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mESxvl6ZR[0;39m <==    Columns: count(0)
2020-08-24 17:01:31.124 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-08-24 17:01:31.124 TRACE c.c.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32mESxvl6ZR[0;39m <==        Row: 3
2020-08-24 17:01:31.124 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-08-24 17:01:31.125 DEBUG c.c.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32mESxvl6ZR[0;39m <==      Total: 1
2020-08-24 17:01:31.125 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-08-24 17:01:31.125 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-08-24 17:01:31.125 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mESxvl6ZR[0;39m ==>  Preparing: select id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at from course order by sort asc LIMIT ? 
2020-08-24 17:01:31.125 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000105, 00000100, angular, 105
2020-08-24 17:01:31.125 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mESxvl6ZR[0;39m ==> Parameters: 5(Integer)
2020-08-24 17:01:31.125 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-08-24 17:01:31.125 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-08-24 17:01:31.126 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000108, 00000100, mini program, 108
2020-08-24 17:01:31.126 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000200, 00000000, backend, 200
2020-08-24 17:01:31.126 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000201, 00000200, java, 201
2020-08-24 17:01:31.126 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-08-24 17:01:31.127 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-08-24 17:01:31.127 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mESxvl6ZR[0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at
2020-08-24 17:01:31.127 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-08-24 17:01:31.127 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mESxvl6ZR[0;39m <==        Row: D5n6XQsE, test, null, null, null, null, null, null, null, null, null, 2020-08-24 16:42:24.0, 2020-08-24 16:52:49.648
2020-08-24 17:01:31.127 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000205, 00000200, python, 205
2020-08-24 17:01:31.127 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000206, 00000200, web crawler, 206
2020-08-24 17:01:31.128 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000300, 00000000, mobile dev, 300
2020-08-24 17:01:31.128 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000301, 00000300, android, 301
2020-08-24 17:01:31.128 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000302, 00000300, ios, 302
2020-08-24 17:01:31.128 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mESxvl6ZR[0;39m <==        Row: K59dWr5W, Activiti7精讲+Java通用型工作流开发实战, test, null, null, https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg, 2, F, P, null, null, 2020-08-22 20:43:19.0, 2020-08-24 16:53:23.478
2020-08-24 17:01:31.128 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000303, 00000300, react native, 303
2020-08-24 17:01:31.129 TRACE c.c.server.mapper.CourseMapper.selectByExample    :165  [32mESxvl6ZR[0;39m <==        Row: 00000001, 全面系统Python3.8入门+进阶 (程序员必备第二语言), 这是一门测试课程, 24489, 19.90, https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg, 3, F, P, 100, 0, 2020-08-11 23:16:32.0, 2020-08-22 20:43:02.97
2020-08-24 17:01:31.129 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-08-24 17:01:31.129 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000400, 00000000, frontier tech, 400
2020-08-24 17:01:31.129 DEBUG c.c.server.mapper.CourseMapper.selectByExample    :159  [32mESxvl6ZR[0;39m <==      Total: 3
2020-08-24 17:01:31.129 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000401, 00000400, microservice, 401
2020-08-24 17:01:31.129 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000402, 00000400, blockchain, 402
2020-08-24 17:01:31.130 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000403, 00000400, machine learning, 403
2020-08-24 17:01:31.130 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000404, 00000400, deep learning, 404
2020-08-24 17:01:31.130 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000405, 00000400, data analysis, 405
2020-08-24 17:01:31.130 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000500, 00000000, cloud computing, 500
2020-08-24 17:01:31.130 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000501, 00000500, big data, 501
2020-08-24 17:01:31.131 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-08-24 17:01:31.131 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000503, 00000500, spark, 503
2020-08-24 17:01:31.131 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-08-24 17:01:31.131 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000505, 00000500, alicloud, 505
2020-08-24 17:01:31.132 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000506, 00000500, docker, 506
2020-08-24 17:01:31.132 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-08-24 17:01:31.132 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000600, 00000000, DevOps&test, 600
2020-08-24 17:01:31.132 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000601, 00000600, ops, 601
2020-08-24 17:01:31.132 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000602, 00000600, auto ops, 602
2020-08-24 17:01:31.133 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000603, 00000600, middleware, 603
2020-08-24 17:01:31.133 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000604, 00000600, linux, 604
2020-08-24 17:01:31.133 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000605, 00000600, test, 605
2020-08-24 17:01:31.133 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000606, 00000600, auto test, 606
2020-08-24 17:01:31.133 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000700, 00000000, databases, 700
2020-08-24 17:01:31.134 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-08-24 17:01:31.134 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000702, 00000700, redis, 702
2020-08-24 17:01:31.134 TRACE c.c.server.mapper.CategoryMapper.selectByExample  :165  [32mjFIPrnwp[0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-08-24 17:01:31.134 DEBUG c.c.server.mapper.CategoryMapper.selectByExample  :159  [32mjFIPrnwp[0;39m <==      Total: 46
2020-08-24 17:01:31.135 INFO  com.course.server.config.LogAspect                :109  [32mjFIPrnwp[0;39m 返回结果: {"content":[{"id":"00000100","name":"frontend","parent":"00000000","sort":100},{"id":"00000101","name":"html/css","parent":"00000100","sort":101},{"id":"00000102","name":"javascript","parent":"00000100","sort":102},{"id":"00000103","name":"vue.js","parent":"00000100","sort":103},{"id":"00000104","name":"react.js","parent":"00000100","sort":104},{"id":"00000105","name":"angular","parent":"00000100","sort":105},{"id":"00000106","name":"node.js","parent":"00000100","sort":106},{"id":"00000107","name":"jquery","parent":"00000100","sort":107},{"id":"00000108","name":"mini program","parent":"00000100","sort":108},{"id":"00000200","name":"backend","parent":"00000000","sort":200},{"id":"00000201","name":"java","parent":"00000200","sort":201},{"id":"00000202","name":"springboot","parent":"00000200","sort":202},{"id":"00000203","name":"spring cloud","parent":"00000200","sort":203},{"id":"00000204","name":"ssm","parent":"00000200","sort":204},{"id":"00000205","name":"python","parent":"00000200","sort":205},{"id":"00000206","name":"web crawler","parent":"00000200","sort":206},{"id":"00000300","name":"mobile dev","parent":"00000000","sort":300},{"id":"00000301","name":"android","parent":"00000300","sort":301},{"id":"00000302","name":"ios","parent":"00000300","sort":302},{"id":"00000303","name":"react native","parent":"00000300","sort":303},{"id":"00000304","name":"ionic","parent":"00000300","sort":304},{"id":"00000400","name":"frontier tech","parent":"00000000","sort":400},{"id":"00000401","name":"microservice","parent":"00000400","sort":401},{"id":"00000402","name":"blockchain","parent":"00000400","sort":402},{"id":"00000403","name":"machine learning","parent":"00000400","sort":403},{"id":"00000404","name":"deep learning","parent":"00000400","sort":404},{"id":"00000405","name":"data analysis","parent":"00000400","sort":405},{"id":"00000500","name":"cloud computing","parent":"00000000","sort":500},{"id":"00000501","name":"big data","parent":"00000500","sort":501},{"id":"00000502","name":"hadoop","parent":"00000500","sort":502},{"id":"00000503","name":"spark","parent":"00000500","sort":503},{"id":"00000504","name":"hbase","parent":"00000500","sort":504},{"id":"00000505","name":"alicloud","parent":"00000500","sort":505},{"id":"00000506","name":"docker","parent":"00000500","sort":506},{"id":"00000507","name":"kubernetes","parent":"00000500","sort":507},{"id":"00000600","name":"DevOps&test","parent":"00000000","sort":600},{"id":"00000601","name":"ops","parent":"00000600","sort":601},{"id":"00000602","name":"auto ops","parent":"00000600","sort":602},{"id":"00000603","name":"middleware","parent":"00000600","sort":603},{"id":"00000604","name":"linux","parent":"00000600","sort":604},{"id":"00000605","name":"test","parent":"00000600","sort":605},{"id":"00000606","name":"auto test","parent":"00000600","sort":606},{"id":"00000700","name":"databases","parent":"00000000","sort":700},{"id":"00000701","name":"mysql","parent":"00000700","sort":701},{"id":"00000702","name":"redis","parent":"00000700","sort":702},{"id":"00000703","name":"mongodb","parent":"00000700","sort":703}],"success":true}
2020-08-24 17:01:31.135 INFO  com.course.server.config.LogAspect                :110  [32mjFIPrnwp[0;39m ------------- 结束 耗时：14 ms -------------
2020-08-24 17:01:31.136 INFO  com.course.server.config.LogAspect                :109  [32mESxvl6ZR[0;39m 返回结果: {"content":{"list":[{"createdAt":1598301744000,"id":"D5n6XQsE","name":"test","updatedAt":1598302369648},{"charge":"F","createdAt":1598143399000,"id":"K59dWr5W","image":"https://img1.mukewang.com/szimg/5f1936e0086cc1ea06000338-360-202.jpg","level":"2","name":"Activiti7精讲+Java通用型工作流开发实战","status":"P","summary":"test","updatedAt":1598302403478},{"charge":"F","createdAt":1597202192000,"enroll":100,"id":"00000001","image":"https://img4.mukewang.com/szimg/59b8a486000107fb05400300-360-202.jpg","level":"3","name":"全面系统Python3.8入门+进阶 (程序员必备第二语言)","price":19.90,"sort":0,"status":"P","summary":"这是一门测试课程","time":24489,"updatedAt":1598143382970}],"page":1,"size":5,"total":3},"success":true}
2020-08-24 17:01:31.136 INFO  com.course.server.config.LogAspect                :110  [32mESxvl6ZR[0;39m ------------- 结束 耗时：15 ms -------------
2020-08-24 17:01:33.308 INFO  com.course.server.config.LogAspect                :76   [32m5LovP2b4[0;39m ------------- 【course】查询开始 -------------
2020-08-24 17:01:33.309 INFO  com.course.server.config.LogAspect                :77   [32m5LovP2b4[0;39m 请求地址: http://192.168.1.4:9002/business/admin/course/list-category/D5n6XQsE POST
2020-08-24 17:01:33.309 INFO  com.course.server.config.LogAspect                :78   [32m5LovP2b4[0;39m 类名方法: com.course.business.controller.admin.CourseController.listCategory
2020-08-24 17:01:33.309 INFO  com.course.server.config.LogAspect                :79   [32m5LovP2b4[0;39m 远程地址: 192.168.1.4
2020-08-24 17:01:33.309 INFO  com.course.server.config.LogAspect                :97   [32m5LovP2b4[0;39m 请求参数: ["D5n6XQsE"]
2020-08-24 17:01:33.310 DEBUG c.c.s.mapper.CourseCategoryMapper.selectByExample :159  [32m5LovP2b4[0;39m ==>  Preparing: select id, course_id, category_id from course_category WHERE ( course_id = ? ) 
2020-08-24 17:01:33.310 DEBUG c.c.s.mapper.CourseCategoryMapper.selectByExample :159  [32m5LovP2b4[0;39m ==> Parameters: D5n6XQsE(String)
2020-08-24 17:01:33.311 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32m5LovP2b4[0;39m <==    Columns: id, course_id, category_id
2020-08-24 17:01:33.311 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32m5LovP2b4[0;39m <==        Row: 6CDIOamE, D5n6XQsE, 00000108
2020-08-24 17:01:33.312 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32m5LovP2b4[0;39m <==        Row: 70jecmg7, D5n6XQsE, 00000105
2020-08-24 17:01:33.312 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32m5LovP2b4[0;39m <==        Row: 8kZn9pE8, D5n6XQsE, 00000101
2020-08-24 17:01:33.312 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32m5LovP2b4[0;39m <==        Row: cdojCxfS, D5n6XQsE, 00000100
2020-08-24 17:01:33.312 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32m5LovP2b4[0;39m <==        Row: KzH7HWjP, D5n6XQsE, 00000107
2020-08-24 17:01:33.312 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32m5LovP2b4[0;39m <==        Row: NqsKRjmN, D5n6XQsE, 00000106
2020-08-24 17:01:33.313 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32m5LovP2b4[0;39m <==        Row: nXoPB2oi, D5n6XQsE, 00000102
2020-08-24 17:01:33.313 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32m5LovP2b4[0;39m <==        Row: tpaLSbBg, D5n6XQsE, 00000103
2020-08-24 17:01:33.314 TRACE c.c.s.mapper.CourseCategoryMapper.selectByExample :165  [32m5LovP2b4[0;39m <==        Row: uqpUWw1C, D5n6XQsE, 00000104
2020-08-24 17:01:33.314 DEBUG c.c.s.mapper.CourseCategoryMapper.selectByExample :159  [32m5LovP2b4[0;39m <==      Total: 9
2020-08-24 17:01:33.315 INFO  com.course.server.config.LogAspect                :109  [32m5LovP2b4[0;39m 返回结果: {"content":[{"categoryId":"00000108","courseId":"D5n6XQsE","id":"6CDIOamE"},{"categoryId":"00000105","courseId":"D5n6XQsE","id":"70jecmg7"},{"categoryId":"00000101","courseId":"D5n6XQsE","id":"8kZn9pE8"},{"categoryId":"00000100","courseId":"D5n6XQsE","id":"cdojCxfS"},{"categoryId":"00000107","courseId":"D5n6XQsE","id":"KzH7HWjP"},{"categoryId":"00000106","courseId":"D5n6XQsE","id":"NqsKRjmN"},{"categoryId":"00000102","courseId":"D5n6XQsE","id":"nXoPB2oi"},{"categoryId":"00000103","courseId":"D5n6XQsE","id":"tpaLSbBg"},{"categoryId":"00000104","courseId":"D5n6XQsE","id":"uqpUWw1C"}],"success":true}
2020-08-24 17:01:33.316 INFO  com.course.server.config.LogAspect                :110  [32m5LovP2b4[0;39m ------------- 结束 耗时：8 ms -------------
